

HI-TECH Software PIC LITE Macro Assembler V9.70 build 5239 
                                                                                               Wed Apr 05 15:16:07 2023

HI-TECH Software Omniscient Code Generator (Lite mode) build 5239
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 5239"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F887
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           ;COMMON:	_main->_adc
    43                           ;BANK0:	_adc->_count
    44                           ;BANK0:	_count->___awdiv
    45                           ;COMMON:	___awdiv->___awmod
    46                           ;BANK0:	___awdiv->___awmod
    47                           ;COMMON:	_count->_command
    48                           ;COMMON:	_count->_data
    49                           ;BANK0:	_main->_voltage
    50                           ;COMMON:	_voltage->___awtoft
    51                           ;COMMON:	___awtoft->___ftpack
    52                           ;BANK0:	___awtoft->___ftpack
    53                           ;BANK0:	_voltage->___ftdiv
    54                           ;BANK0:	___ftdiv->___ftmul
    55                           ;COMMON:	___ftmul->___awtoft
    56                           ;COMMON:	___awtoft->___ftpack
    57                           ;BANK0:	___awtoft->___ftpack
    58                           ;BANK0:	___ftmul->___awtoft
    59                           ;COMMON:	___awtoft->___ftpack
    60                           ;BANK0:	___awtoft->___ftpack
    61                           ;COMMON:	___ftdiv->___awtoft
    62                           ;COMMON:	___awtoft->___ftpack
    63                           ;BANK0:	___awtoft->___ftpack
    64                           ;COMMON:	_main->_adc1
    65                           ;BANK0:	_adc1->_count1
    66                           ;BANK0:	_count1->___awdiv
    67                           ;COMMON:	___awdiv->___awmod
    68                           ;BANK0:	___awdiv->___awmod
    69                           ;COMMON:	_count1->_command
    70                           ;COMMON:	_count1->_data
    71                           ;BANK0:	_main->_voltage1
    72                           ;COMMON:	_voltage1->___awtoft
    73                           ;COMMON:	___awtoft->___ftpack
    74                           ;BANK0:	___awtoft->___ftpack
    75                           ;BANK0:	_voltage1->___ftdiv
    76                           ;BANK0:	___ftdiv->___ftmul
    77                           ;COMMON:	___ftmul->___awtoft
    78                           ;COMMON:	___awtoft->___ftpack
    79                           ;BANK0:	___awtoft->___ftpack
    80                           ;BANK0:	___ftmul->___awtoft
    81                           ;COMMON:	___awtoft->___ftpack
    82                           ;BANK0:	___awtoft->___ftpack
    83                           ;COMMON:	___ftdiv->___awtoft
    84                           ;COMMON:	___awtoft->___ftpack
    85                           ;BANK0:	___awtoft->___ftpack
    86                           	FNCALL	_main,_command
    87                           	FNCALL	_main,_data
    88                           	FNCALL	_main,_adc
    89                           	FNCALL	_main,_voltage
    90                           	FNCALL	_main,_adc1
    91                           	FNCALL	_main,_voltage1
    92                           	FNCALL	_adc,_count
    93                           	FNCALL	_voltage,_command
    94                           	FNCALL	_voltage,___awtoft
    95                           	FNCALL	_voltage,___ftmul
    96                           	FNCALL	_voltage,___ftdiv
    97                           	FNCALL	_voltage,___fttol
    98                           	FNCALL	_voltage,___awdiv
    99                           	FNCALL	_voltage,___awmod
   100                           	FNCALL	_voltage,_data
   101                           	FNCALL	_adc1,_count1
   102                           	FNCALL	_voltage1,_command
   103                           	FNCALL	_voltage1,___awtoft
   104                           	FNCALL	_voltage1,___ftmul
   105                           	FNCALL	_voltage1,___ftdiv
   106                           	FNCALL	_voltage1,___fttol
   107                           	FNCALL	_voltage1,___awdiv
   108                           	FNCALL	_voltage1,___awmod
   109                           	FNCALL	_voltage1,_data
   110                           	FNCALL	___ftmul,___ftpack
   111                           	FNCALL	___awtoft,___ftpack
   112                           	FNCALL	___ftdiv,___ftpack
   113                           	FNCALL	_count1,___awdiv
   114                           	FNCALL	_count1,___awmod
   115                           	FNCALL	_count1,_command
   116                           	FNCALL	_count1,_data
   117                           	FNCALL	_count,___awdiv
   118                           	FNCALL	_count,___awmod
   119                           	FNCALL	_count,_command
   120                           	FNCALL	_count,_data
   121                           	FNCALL	_data,_pulse
   122                           	FNCALL	_command,_pulse
   123                           	FNCALL	_pulse,_delay
   124                           	FNROOT	_main
   125                           	global	_low
   126                           	global	_DV
   127                           	global	_high
   128                           	global	_ADCON0
   129                           psect	text110,local,class=CODE,delta=2
   130                           global __ptext110
   131  0003                     __ptext110:
   132  001F                     _ADCON0  equ     31
   133                           	global	_ADRESH
   134  001E                     _ADRESH  equ     30
   135                           	global	_CCP1CON
   136  0017                     _CCP1CON  equ     23
   137                           	global	_CCP2CON
   138  001D                     _CCP2CON  equ     29
   139                           	global	_CCPR1H
   140  0016                     _CCPR1H  equ     22
   141                           	global	_CCPR1L
   142  0015                     _CCPR1L  equ     21
   143                           	global	_CCPR2H
   144  001C                     _CCPR2H  equ     28
   145                           	global	_CCPR2L
   146  001B                     _CCPR2L  equ     27
   147                           	global	_FSR
   148  0004                     _FSR  equ     4
   149                           	global	_INDF
   150  0000                     _INDF  equ     0
   151                           	global	_INTCON
   152  000B                     _INTCON  equ     11
   153                           	global	_PCL
   154  0002                     _PCL  equ     2
   155                           	global	_PCLATH
   156  000A                     _PCLATH  equ     10
   157                           	global	_PIR1
   158  000C                     _PIR1  equ     12
   159                           	global	_PIR2
   160  000D                     _PIR2  equ     13
   161                           	global	_PORTA
   162  0005                     _PORTA  equ     5
   163                           	global	_PORTB
   164  0006                     _PORTB  equ     6
   165                           	global	_PORTC
   166  0007                     _PORTC  equ     7
   167                           	global	_PORTD
   168  0008                     _PORTD  equ     8
   169                           	global	_PORTE
   170  0009                     _PORTE  equ     9
   171                           	global	_RCREG
   172  001A                     _RCREG  equ     26
   173                           	global	_RCSTA
   174  0018                     _RCSTA  equ     24
   175                           	global	_SSPBUF
   176  0013                     _SSPBUF  equ     19
   177                           	global	_SSPCON
   178  0014                     _SSPCON  equ     20
   179                           	global	_STATUS
   180  0003                     _STATUS  equ     3
   181                           	global	_T1CON
   182  0010                     _T1CON  equ     16
   183                           	global	_T2CON
   184  0012                     _T2CON  equ     18
   185                           	global	_TMR0
   186  0001                     _TMR0  equ     1
   187                           	global	_TMR1H
   188  000F                     _TMR1H  equ     15
   189                           	global	_TMR1L
   190  000E                     _TMR1L  equ     14
   191                           	global	_TMR2
   192  0011                     _TMR2  equ     17
   193                           	global	_TXREG
   194  0019                     _TXREG  equ     25
   195                           	global	_ADCS0
   196  00FE                     _ADCS0  equ     254
   197                           	global	_ADCS1
   198  00FF                     _ADCS1  equ     255
   199                           	global	_ADDEN
   200  00C3                     _ADDEN  equ     195
   201                           	global	_ADIF
   202  0066                     _ADIF  equ     102
   203                           	global	_ADON
   204  00F8                     _ADON  equ     248
   205                           	global	_BCLIF
   206  006B                     _BCLIF  equ     107
   207                           	global	_C1IF
   208  006D                     _C1IF  equ     109
   209                           	global	_C2IF
   210  006E                     _C2IF  equ     110
   211                           	global	_CARRY
   212  0018                     _CARRY  equ     24
   213                           	global	_CCP1IF
   214  0062                     _CCP1IF  equ     98
   215                           	global	_CCP1M0
   216  00B8                     _CCP1M0  equ     184
   217                           	global	_CCP1M1
   218  00B9                     _CCP1M1  equ     185
   219                           	global	_CCP1M2
   220  00BA                     _CCP1M2  equ     186
   221                           	global	_CCP1M3
   222  00BB                     _CCP1M3  equ     187
   223                           	global	_CCP2IF
   224  0068                     _CCP2IF  equ     104
   225                           	global	_CCP2M0
   226  00E8                     _CCP2M0  equ     232
   227                           	global	_CCP2M1
   228  00E9                     _CCP2M1  equ     233
   229                           	global	_CCP2M2
   230  00EA                     _CCP2M2  equ     234
   231                           	global	_CCP2M3
   232  00EB                     _CCP2M3  equ     235
   233                           	global	_CCP2X
   234  00ED                     _CCP2X  equ     237
   235                           	global	_CCP2Y
   236  00EC                     _CCP2Y  equ     236
   237                           	global	_CHS0
   238  00FA                     _CHS0  equ     250
   239                           	global	_CHS1
   240  00FB                     _CHS1  equ     251
   241                           	global	_CHS2
   242  00FC                     _CHS2  equ     252
   243                           	global	_CHS3
   244  00FD                     _CHS3  equ     253
   245                           	global	_CKP
   246  00A4                     _CKP  equ     164
   247                           	global	_CREN
   248  00C4                     _CREN  equ     196
   249                           	global	_DC
   250  0019                     _DC  equ     25
   251                           	global	_DC1B0
   252  00BC                     _DC1B0  equ     188
   253                           	global	_DC1B1
   254  00BD                     _DC1B1  equ     189
   255                           	global	_EEIF
   256  006C                     _EEIF  equ     108
   257                           	global	_FERR
   258  00C2                     _FERR  equ     194
   259                           	global	_GIE
   260  005F                     _GIE  equ     95
   261                           	global	_GODONE
   262  00F9                     _GODONE  equ     249
   263                           	global	_INTE
   264  005C                     _INTE  equ     92
   265                           	global	_INTF
   266  0059                     _INTF  equ     89
   267                           	global	_IRP
   268  001F                     _IRP  equ     31
   269                           	global	_OERR
   270  00C1                     _OERR  equ     193
   271                           	global	_OSFIF
   272  006F                     _OSFIF  equ     111
   273                           	global	_P1M0
   274  00BE                     _P1M0  equ     190
   275                           	global	_P1M1
   276  00BF                     _P1M1  equ     191
   277                           	global	_PD
   278  001B                     _PD  equ     27
   279                           	global	_PEIE
   280  005E                     _PEIE  equ     94
   281                           	global	_RA0
   282  0028                     _RA0  equ     40
   283                           	global	_RA1
   284  0029                     _RA1  equ     41
   285                           	global	_RA2
   286  002A                     _RA2  equ     42
   287                           	global	_RA3
   288  002B                     _RA3  equ     43
   289                           	global	_RA4
   290  002C                     _RA4  equ     44
   291                           	global	_RA5
   292  002D                     _RA5  equ     45
   293                           	global	_RA6
   294  002E                     _RA6  equ     46
   295                           	global	_RA7
   296  002F                     _RA7  equ     47
   297                           	global	_RABIE
   298  005B                     _RABIE  equ     91
   299                           	global	_RABIF
   300  0058                     _RABIF  equ     88
   301                           	global	_RB0
   302  0030                     _RB0  equ     48
   303                           	global	_RB1
   304  0031                     _RB1  equ     49
   305                           	global	_RB2
   306  0032                     _RB2  equ     50
   307                           	global	_RB3
   308  0033                     _RB3  equ     51
   309                           	global	_RB4
   310  0034                     _RB4  equ     52
   311                           	global	_RB5
   312  0035                     _RB5  equ     53
   313                           	global	_RB6
   314  0036                     _RB6  equ     54
   315                           	global	_RB7
   316  0037                     _RB7  equ     55
   317                           	global	_RBIE
   318  005B                     _RBIE  equ     91
   319                           	global	_RBIF
   320  0058                     _RBIF  equ     88
   321                           	global	_RC0
   322  0038                     _RC0  equ     56
   323                           	global	_RC1
   324  0039                     _RC1  equ     57
   325                           	global	_RC2
   326  003A                     _RC2  equ     58
   327                           	global	_RC3
   328  003B                     _RC3  equ     59
   329                           	global	_RC4
   330  003C                     _RC4  equ     60
   331                           	global	_RC5
   332  003D                     _RC5  equ     61
   333                           	global	_RC6
   334  003E                     _RC6  equ     62
   335                           	global	_RC7
   336  003F                     _RC7  equ     63
   337                           	global	_RCIF
   338  0065                     _RCIF  equ     101
   339                           	global	_RD0
   340  0040                     _RD0  equ     64
   341                           	global	_RD1
   342  0041                     _RD1  equ     65
   343                           	global	_RD2
   344  0042                     _RD2  equ     66
   345                           	global	_RD3
   346  0043                     _RD3  equ     67
   347                           	global	_RD4
   348  0044                     _RD4  equ     68
   349                           	global	_RD5
   350  0045                     _RD5  equ     69
   351                           	global	_RD6
   352  0046                     _RD6  equ     70
   353                           	global	_RD7
   354  0047                     _RD7  equ     71
   355                           	global	_RE0
   356  0048                     _RE0  equ     72
   357                           	global	_RE1
   358  0049                     _RE1  equ     73
   359                           	global	_RE2
   360  004A                     _RE2  equ     74
   361                           	global	_RE3
   362  004B                     _RE3  equ     75
   363                           	global	_RP0
   364  001D                     _RP0  equ     29
   365                           	global	_RP1
   366  001E                     _RP1  equ     30
   367                           	global	_RX9
   368  00C6                     _RX9  equ     198
   369                           	global	_RX9D
   370  00C0                     _RX9D  equ     192
   371                           	global	_SPEN
   372  00C7                     _SPEN  equ     199
   373                           	global	_SREN
   374  00C5                     _SREN  equ     197
   375                           	global	_SSPEN
   376  00A5                     _SSPEN  equ     165
   377                           	global	_SSPIF
   378  0063                     _SSPIF  equ     99
   379                           	global	_SSPM0
   380  00A0                     _SSPM0  equ     160
   381                           	global	_SSPM1
   382  00A1                     _SSPM1  equ     161
   383                           	global	_SSPM2
   384  00A2                     _SSPM2  equ     162
   385                           	global	_SSPM3
   386  00A3                     _SSPM3  equ     163
   387                           	global	_SSPOV
   388  00A6                     _SSPOV  equ     166
   389                           	global	_T0IE
   390  005D                     _T0IE  equ     93
   391                           	global	_T0IF
   392  005A                     _T0IF  equ     90
   393                           	global	_T1CKPS0
   394  0084                     _T1CKPS0  equ     132
   395                           	global	_T1CKPS1
   396  0085                     _T1CKPS1  equ     133
   397                           	global	_T1GINV
   398  0087                     _T1GINV  equ     135
   399                           	global	_T1OSCEN
   400  0083                     _T1OSCEN  equ     131
   401                           	global	_T1SYNC
   402  0082                     _T1SYNC  equ     130
   403                           	global	_T2CKPS0
   404  0090                     _T2CKPS0  equ     144
   405                           	global	_T2CKPS1
   406  0091                     _T2CKPS1  equ     145
   407                           	global	_TMR1CS
   408  0081                     _TMR1CS  equ     129
   409                           	global	_TMR1GE
   410  0086                     _TMR1GE  equ     134
   411                           	global	_TMR1IF
   412  0060                     _TMR1IF  equ     96
   413                           	global	_TMR1ON
   414  0080                     _TMR1ON  equ     128
   415                           	global	_TMR2IF
   416  0061                     _TMR2IF  equ     97
   417                           	global	_TMR2ON
   418  0092                     _TMR2ON  equ     146
   419                           	global	_TO
   420  001C                     _TO  equ     28
   421                           	global	_TOUTPS0
   422  0093                     _TOUTPS0  equ     147
   423                           	global	_TOUTPS1
   424  0094                     _TOUTPS1  equ     148
   425                           	global	_TOUTPS2
   426  0095                     _TOUTPS2  equ     149
   427                           	global	_TOUTPS3
   428  0096                     _TOUTPS3  equ     150
   429                           	global	_TXIF
   430  0064                     _TXIF  equ     100
   431                           	global	_ULPWUIF
   432  006A                     _ULPWUIF  equ     106
   433                           	global	_WCOL
   434  00A7                     _WCOL  equ     167
   435                           	global	_ZERO
   436  001A                     _ZERO  equ     26
   437                           	global	_ADCON1
   438  009F                     _ADCON1  equ     159
   439                           	global	_ADRESL
   440  009E                     _ADRESL  equ     158
   441                           	global	_ECCPAS
   442  009C                     _ECCPAS  equ     156
   443                           	global	_IOCB
   444  0096                     _IOCB  equ     150
   445                           	global	_OPTION
   446  0081                     _OPTION  equ     129
   447                           	global	_OSCCON
   448  008F                     _OSCCON  equ     143
   449                           	global	_OSCTUNE
   450  0090                     _OSCTUNE  equ     144
   451                           	global	_PCON
   452  008E                     _PCON  equ     142
   453                           	global	_PIE1
   454  008C                     _PIE1  equ     140
   455                           	global	_PIE2
   456  008D                     _PIE2  equ     141
   457                           	global	_PR2
   458  0092                     _PR2  equ     146
   459                           	global	_PSTRCON
   460  009D                     _PSTRCON  equ     157
   461                           	global	_PWM1CON
   462  009B                     _PWM1CON  equ     155
   463                           	global	_SPBRG
   464  0099                     _SPBRG  equ     153
   465                           	global	_SPBRGH
   466  009A                     _SPBRGH  equ     154
   467                           	global	_SSPADD
   468  0093                     _SSPADD  equ     147
   469                           	global	_SSPCON2
   470  0091                     _SSPCON2  equ     145
   471                           	global	_SSPMSK
   472  0093                     _SSPMSK  equ     147
   473                           	global	_SSPSTAT
   474  0094                     _SSPSTAT  equ     148
   475                           	global	_TRISA
   476  0085                     _TRISA  equ     133
   477                           	global	_TRISB
   478  0086                     _TRISB  equ     134
   479                           	global	_TRISC
   480  0087                     _TRISC  equ     135
   481                           	global	_TRISD
   482  0088                     _TRISD  equ     136
   483                           	global	_TRISE
   484  0089                     _TRISE  equ     137
   485                           	global	_TXSTA
   486  0098                     _TXSTA  equ     152
   487                           	global	_VRCON
   488  0097                     _VRCON  equ     151
   489                           	global	_WPUB
   490  0095                     _WPUB  equ     149
   491                           	global	_ACKDT
   492  048D                     _ACKDT  equ     1165
   493                           	global	_ACKEN
   494  048C                     _ACKEN  equ     1164
   495                           	global	_ACKSTAT
   496  048E                     _ACKSTAT  equ     1166
   497                           	global	_ADFM
   498  04FF                     _ADFM  equ     1279
   499                           	global	_ADIE
   500  0466                     _ADIE  equ     1126
   501                           	global	_BCLIE
   502  046B                     _BCLIE  equ     1131
   503                           	global	_BF
   504  04A0                     _BF  equ     1184
   505                           	global	_BOR
   506  0470                     _BOR  equ     1136
   507                           	global	_BRG0
   508  04C8                     _BRG0  equ     1224
   509                           	global	_BRG1
   510  04C9                     _BRG1  equ     1225
   511                           	global	_BRG10
   512  04D2                     _BRG10  equ     1234
   513                           	global	_BRG11
   514  04D3                     _BRG11  equ     1235
   515                           	global	_BRG12
   516  04D4                     _BRG12  equ     1236
   517                           	global	_BRG13
   518  04D5                     _BRG13  equ     1237
   519                           	global	_BRG14
   520  04D6                     _BRG14  equ     1238
   521                           	global	_BRG15
   522  04D7                     _BRG15  equ     1239
   523                           	global	_BRG2
   524  04CA                     _BRG2  equ     1226
   525                           	global	_BRG3
   526  04CB                     _BRG3  equ     1227
   527                           	global	_BRG4
   528  04CC                     _BRG4  equ     1228
   529                           	global	_BRG5
   530  04CD                     _BRG5  equ     1229
   531                           	global	_BRG6
   532  04CE                     _BRG6  equ     1230
   533                           	global	_BRG7
   534  04CF                     _BRG7  equ     1231
   535                           	global	_BRG8
   536  04D0                     _BRG8  equ     1232
   537                           	global	_BRG9
   538  04D1                     _BRG9  equ     1233
   539                           	global	_BRGH
   540  04C2                     _BRGH  equ     1218
   541                           	global	_C1IE
   542  046D                     _C1IE  equ     1133
   543                           	global	_C2IE
   544  046E                     _C2IE  equ     1134
   545                           	global	_CCP1IE
   546  0462                     _CCP1IE  equ     1122
   547                           	global	_CCP2IE
   548  0468                     _CCP2IE  equ     1128
   549                           	global	_CKE
   550  04A6                     _CKE  equ     1190
   551                           	global	_CSRC
   552  04C7                     _CSRC  equ     1223
   553                           	global	_DA
   554  04A5                     _DA  equ     1189
   555                           	global	_ECCPAS0
   556  04E4                     _ECCPAS0  equ     1252
   557                           	global	_ECCPAS1
   558  04E5                     _ECCPAS1  equ     1253
   559                           	global	_ECCPAS2
   560  04E6                     _ECCPAS2  equ     1254
   561                           	global	_ECCPASE
   562  04E7                     _ECCPASE  equ     1255
   563                           	global	_EEIE
   564  046C                     _EEIE  equ     1132
   565                           	global	_GCEN
   566  048F                     _GCEN  equ     1167
   567                           	global	_HTS
   568  047A                     _HTS  equ     1146
   569                           	global	_INTEDG
   570  040E                     _INTEDG  equ     1038
   571                           	global	_IOCB0
   572  04B0                     _IOCB0  equ     1200
   573                           	global	_IOCB1
   574  04B1                     _IOCB1  equ     1201
   575                           	global	_IOCB2
   576  04B2                     _IOCB2  equ     1202
   577                           	global	_IOCB3
   578  04B3                     _IOCB3  equ     1203
   579                           	global	_IOCB4
   580  04B4                     _IOCB4  equ     1204
   581                           	global	_IOCB5
   582  04B5                     _IOCB5  equ     1205
   583                           	global	_IOCB6
   584  04B6                     _IOCB6  equ     1206
   585                           	global	_IOCB7
   586  04B7                     _IOCB7  equ     1207
   587                           	global	_IRCF0
   588  047C                     _IRCF0  equ     1148
   589                           	global	_IRCF1
   590  047D                     _IRCF1  equ     1149
   591                           	global	_IRCF2
   592  047E                     _IRCF2  equ     1150
   593                           	global	_LTS
   594  0479                     _LTS  equ     1145
   595                           	global	_OSFIE
   596  046F                     _OSFIE  equ     1135
   597                           	global	_OSTS
   598  047B                     _OSTS  equ     1147
   599                           	global	_PDC0
   600  04D8                     _PDC0  equ     1240
   601                           	global	_PDC1
   602  04D9                     _PDC1  equ     1241
   603                           	global	_PDC2
   604  04DA                     _PDC2  equ     1242
   605                           	global	_PDC3
   606  04DB                     _PDC3  equ     1243
   607                           	global	_PDC4
   608  04DC                     _PDC4  equ     1244
   609                           	global	_PDC5
   610  04DD                     _PDC5  equ     1245
   611                           	global	_PDC6
   612  04DE                     _PDC6  equ     1246
   613                           	global	_PEN
   614  048A                     _PEN  equ     1162
   615                           	global	_POR
   616  0471                     _POR  equ     1137
   617                           	global	_PRSEN
   618  04DF                     _PRSEN  equ     1247
   619                           	global	_PS0
   620  0408                     _PS0  equ     1032
   621                           	global	_PS1
   622  0409                     _PS1  equ     1033
   623                           	global	_PS2
   624  040A                     _PS2  equ     1034
   625                           	global	_PSA
   626  040B                     _PSA  equ     1035
   627                           	global	_PSSAC0
   628  04E2                     _PSSAC0  equ     1250
   629                           	global	_PSSAC1
   630  04E3                     _PSSAC1  equ     1251
   631                           	global	_PSSBD0
   632  04E0                     _PSSBD0  equ     1248
   633                           	global	_PSSBD1
   634  04E1                     _PSSBD1  equ     1249
   635                           	global	_RABPU
   636  040F                     _RABPU  equ     1039
   637                           	global	_RBPU
   638  040F                     _RBPU  equ     1039
   639                           	global	_RCEN
   640  048B                     _RCEN  equ     1163
   641                           	global	_RCIE
   642  0465                     _RCIE  equ     1125
   643                           	global	_RSEN
   644  0489                     _RSEN  equ     1161
   645                           	global	_RW
   646  04A2                     _RW  equ     1186
   647                           	global	_SBOREN
   648  0474                     _SBOREN  equ     1140
   649                           	global	_SCS
   650  0478                     _SCS  equ     1144
   651                           	global	_SEN
   652  0488                     _SEN  equ     1160
   653                           	global	_SENDB
   654  04C3                     _SENDB  equ     1219
   655                           	global	_SMP
   656  04A7                     _SMP  equ     1191
   657                           	global	_SSPIE
   658  0463                     _SSPIE  equ     1123
   659                           	global	_START
   660  04A3                     _START  equ     1187
   661                           	global	_STOP
   662  04A4                     _STOP  equ     1188
   663                           	global	_STRA
   664  04E8                     _STRA  equ     1256
   665                           	global	_STRB
   666  04E9                     _STRB  equ     1257
   667                           	global	_STRC
   668  04EA                     _STRC  equ     1258
   669                           	global	_STRD
   670  04EB                     _STRD  equ     1259
   671                           	global	_STRSYNC
   672  04EC                     _STRSYNC  equ     1260
   673                           	global	_SYNC
   674  04C4                     _SYNC  equ     1220
   675                           	global	_T0CS
   676  040D                     _T0CS  equ     1037
   677                           	global	_T0SE
   678  040C                     _T0SE  equ     1036
   679                           	global	_TMR1IE
   680  0460                     _TMR1IE  equ     1120
   681                           	global	_TMR2IE
   682  0461                     _TMR2IE  equ     1121
   683                           	global	_TRISA0
   684  0428                     _TRISA0  equ     1064
   685                           	global	_TRISA1
   686  0429                     _TRISA1  equ     1065
   687                           	global	_TRISA2
   688  042A                     _TRISA2  equ     1066
   689                           	global	_TRISA3
   690  042B                     _TRISA3  equ     1067
   691                           	global	_TRISA4
   692  042C                     _TRISA4  equ     1068
   693                           	global	_TRISA5
   694  042D                     _TRISA5  equ     1069
   695                           	global	_TRISA6
   696  042E                     _TRISA6  equ     1070
   697                           	global	_TRISA7
   698  042F                     _TRISA7  equ     1071
   699                           	global	_TRISB0
   700  0430                     _TRISB0  equ     1072
   701                           	global	_TRISB1
   702  0431                     _TRISB1  equ     1073
   703                           	global	_TRISB2
   704  0432                     _TRISB2  equ     1074
   705                           	global	_TRISB3
   706  0433                     _TRISB3  equ     1075
   707                           	global	_TRISB4
   708  0434                     _TRISB4  equ     1076
   709                           	global	_TRISB5
   710  0435                     _TRISB5  equ     1077
   711                           	global	_TRISB6
   712  0436                     _TRISB6  equ     1078
   713                           	global	_TRISB7
   714  0437                     _TRISB7  equ     1079
   715                           	global	_TRISC0
   716  0438                     _TRISC0  equ     1080
   717                           	global	_TRISC1
   718  0439                     _TRISC1  equ     1081
   719                           	global	_TRISC2
   720  043A                     _TRISC2  equ     1082
   721                           	global	_TRISC3
   722  043B                     _TRISC3  equ     1083
   723                           	global	_TRISC4
   724  043C                     _TRISC4  equ     1084
   725                           	global	_TRISC5
   726  043D                     _TRISC5  equ     1085
   727                           	global	_TRISC6
   728  043E                     _TRISC6  equ     1086
   729                           	global	_TRISC7
   730  043F                     _TRISC7  equ     1087
   731                           	global	_TRISD0
   732  0440                     _TRISD0  equ     1088
   733                           	global	_TRISD1
   734  0441                     _TRISD1  equ     1089
   735                           	global	_TRISD2
   736  0442                     _TRISD2  equ     1090
   737                           	global	_TRISD3
   738  0443                     _TRISD3  equ     1091
   739                           	global	_TRISD4
   740  0444                     _TRISD4  equ     1092
   741                           	global	_TRISD5
   742  0445                     _TRISD5  equ     1093
   743                           	global	_TRISD6
   744  0446                     _TRISD6  equ     1094
   745                           	global	_TRISD7
   746  0447                     _TRISD7  equ     1095
   747                           	global	_TRISE0
   748  0448                     _TRISE0  equ     1096
   749                           	global	_TRISE1
   750  0449                     _TRISE1  equ     1097
   751                           	global	_TRISE2
   752  044A                     _TRISE2  equ     1098
   753                           	global	_TRISE3
   754  044B                     _TRISE3  equ     1099
   755                           	global	_TRMT
   756  04C1                     _TRMT  equ     1217
   757                           	global	_TUN0
   758  0480                     _TUN0  equ     1152
   759                           	global	_TUN1
   760  0481                     _TUN1  equ     1153
   761                           	global	_TUN2
   762  0482                     _TUN2  equ     1154
   763                           	global	_TUN3
   764  0483                     _TUN3  equ     1155
   765                           	global	_TUN4
   766  0484                     _TUN4  equ     1156
   767                           	global	_TX9
   768  04C6                     _TX9  equ     1222
   769                           	global	_TX9D
   770  04C0                     _TX9D  equ     1216
   771                           	global	_TXEN
   772  04C5                     _TXEN  equ     1221
   773                           	global	_TXIE
   774  0464                     _TXIE  equ     1124
   775                           	global	_UA
   776  04A1                     _UA  equ     1185
   777                           	global	_ULPWUE
   778  0475                     _ULPWUE  equ     1141
   779                           	global	_ULPWUIE
   780  046A                     _ULPWUIE  equ     1130
   781                           	global	_VCFG0
   782  04FC                     _VCFG0  equ     1276
   783                           	global	_VCFG1
   784  04FD                     _VCFG1  equ     1277
   785                           	global	_VR0
   786  04B8                     _VR0  equ     1208
   787                           	global	_VR1
   788  04B9                     _VR1  equ     1209
   789                           	global	_VR2
   790  04BA                     _VR2  equ     1210
   791                           	global	_VR3
   792  04BB                     _VR3  equ     1211
   793                           	global	_VREN
   794  04BF                     _VREN  equ     1215
   795                           	global	_VROE
   796  04BE                     _VROE  equ     1214
   797                           	global	_VRR
   798  04BD                     _VRR  equ     1213
   799                           	global	_VRSS
   800  04BC                     _VRSS  equ     1212
   801                           	global	_WPUB0
   802  04A8                     _WPUB0  equ     1192
   803                           	global	_WPUB1
   804  04A9                     _WPUB1  equ     1193
   805                           	global	_WPUB2
   806  04AA                     _WPUB2  equ     1194
   807                           	global	_WPUB3
   808  04AB                     _WPUB3  equ     1195
   809                           	global	_WPUB4
   810  04AC                     _WPUB4  equ     1196
   811                           	global	_WPUB5
   812  04AD                     _WPUB5  equ     1197
   813                           	global	_WPUB6
   814  04AE                     _WPUB6  equ     1198
   815                           	global	_WPUB7
   816  04AF                     _WPUB7  equ     1199
   817                           	global	_CM1CON0
   818  0107                     _CM1CON0  equ     263
   819                           	global	_CM2CON0
   820  0108                     _CM2CON0  equ     264
   821                           	global	_CM2CON1
   822  0109                     _CM2CON1  equ     265
   823                           	global	_EEADR
   824  010D                     _EEADR  equ     269
   825                           	global	_EEADRH
   826  010F                     _EEADRH  equ     271
   827                           	global	_EEADRL
   828  010D                     _EEADRL  equ     269
   829                           	global	_EEDAT
   830  010C                     _EEDAT  equ     268
   831                           	global	_EEDATA
   832  010C                     _EEDATA  equ     268
   833                           	global	_EEDATH
   834  010E                     _EEDATH  equ     270
   835                           	global	_WDTCON
   836  0105                     _WDTCON  equ     261
   837                           	global	_C1CH0
   838  0838                     _C1CH0  equ     2104
   839                           	global	_C1CH1
   840  0839                     _C1CH1  equ     2105
   841                           	global	_C1OE
   842  083D                     _C1OE  equ     2109
   843                           	global	_C1ON
   844  083F                     _C1ON  equ     2111
   845                           	global	_C1OUT
   846  083E                     _C1OUT  equ     2110
   847                           	global	_C1POL
   848  083C                     _C1POL  equ     2108
   849                           	global	_C1R
   850  083A                     _C1R  equ     2106
   851                           	global	_C1RSEL
   852  084D                     _C1RSEL  equ     2125
   853                           	global	_C2CH0
   854  0840                     _C2CH0  equ     2112
   855                           	global	_C2CH1
   856  0841                     _C2CH1  equ     2113
   857                           	global	_C2OE
   858  0845                     _C2OE  equ     2117
   859                           	global	_C2ON
   860  0847                     _C2ON  equ     2119
   861                           	global	_C2OUT
   862  0846                     _C2OUT  equ     2118
   863                           	global	_C2POL
   864  0844                     _C2POL  equ     2116
   865                           	global	_C2R
   866  0842                     _C2R  equ     2114
   867                           	global	_C2RSEL
   868  084C                     _C2RSEL  equ     2124
   869                           	global	_C2SYNC
   870  0848                     _C2SYNC  equ     2120
   871                           	global	_MC1OUT
   872  084F                     _MC1OUT  equ     2127
   873                           	global	_MC2OUT
   874  084E                     _MC2OUT  equ     2126
   875                           	global	_SWDTEN
   876  0828                     _SWDTEN  equ     2088
   877                           	global	_T1GSS
   878  0849                     _T1GSS  equ     2121
   879                           	global	_WDTPS0
   880  0829                     _WDTPS0  equ     2089
   881                           	global	_WDTPS1
   882  082A                     _WDTPS1  equ     2090
   883                           	global	_WDTPS2
   884  082B                     _WDTPS2  equ     2091
   885                           	global	_WDTPS3
   886  082C                     _WDTPS3  equ     2092
   887                           	global	_ANSEL
   888  0188                     _ANSEL  equ     392
   889                           	global	_ANSELH
   890  0189                     _ANSELH  equ     393
   891                           	global	_BAUDCTL
   892  0187                     _BAUDCTL  equ     391
   893                           	global	_EECON1
   894  018C                     _EECON1  equ     396
   895                           	global	_EECON2
   896  018D                     _EECON2  equ     397
   897                           	global	_SRCON
   898  0185                     _SRCON  equ     389
   899                           	global	_ABDEN
   900  0C38                     _ABDEN  equ     3128
   901                           	global	_ABDOVF
   902  0C3F                     _ABDOVF  equ     3135
   903                           	global	_ANS0
   904  0C40                     _ANS0  equ     3136
   905                           	global	_ANS1
   906  0C41                     _ANS1  equ     3137
   907                           	global	_ANS10
   908  0C4A                     _ANS10  equ     3146
   909                           	global	_ANS11
   910  0C4B                     _ANS11  equ     3147
   911                           	global	_ANS12
   912  0C4C                     _ANS12  equ     3148
   913                           	global	_ANS13
   914  0C4D                     _ANS13  equ     3149
   915                           	global	_ANS2
   916  0C42                     _ANS2  equ     3138
   917                           	global	_ANS3
   918  0C43                     _ANS3  equ     3139
   919                           	global	_ANS4
   920  0C44                     _ANS4  equ     3140
   921                           	global	_ANS5
   922  0C45                     _ANS5  equ     3141
   923                           	global	_ANS6
   924  0C46                     _ANS6  equ     3142
   925                           	global	_ANS7
   926  0C47                     _ANS7  equ     3143
   927                           	global	_ANS8
   928  0C48                     _ANS8  equ     3144
   929                           	global	_ANS9
   930  0C49                     _ANS9  equ     3145
   931                           	global	_BRG16
   932  0C3B                     _BRG16  equ     3131
   933                           	global	_C1SEN
   934  0C2D                     _C1SEN  equ     3117
   935                           	global	_C2REN
   936  0C2C                     _C2REN  equ     3116
   937                           	global	_EEPGD
   938  0C67                     _EEPGD  equ     3175
   939                           	global	_FVREN
   940  0C28                     _FVREN  equ     3112
   941                           	global	_PULSR
   942  0C2A                     _PULSR  equ     3114
   943                           	global	_PULSS
   944  0C2B                     _PULSS  equ     3115
   945                           	global	_RCIDL
   946  0C3E                     _RCIDL  equ     3134
   947                           	global	_RD
   948  0C60                     _RD  equ     3168
   949                           	global	_SCKP
   950  0C3C                     _SCKP  equ     3132
   951                           	global	_SR0
   952  0C2E                     _SR0  equ     3118
   953                           	global	_SR1
   954  0C2F                     _SR1  equ     3119
   955                           	global	_WR
   956  0C61                     _WR  equ     3169
   957                           	global	_WREN
   958  0C62                     _WREN  equ     3170
   959                           	global	_WRERR
   960  0C63                     _WRERR  equ     3171
   961                           	global	_WUE
   962  0C39                     _WUE  equ     3129
   963                           	file	"2 ADC.as"
   964                           	line	#
   965                           psect cinit,class=CODE,delta=2
   966                           global start_initialization
   967  0F52                     start_initialization:
   968                           
   969                           psect	bssCOMMON,class=COMMON,space=1
   970                           global __pbssCOMMON
   971  0075                     __pbssCOMMON:
   972  0075                     _DV:
   973  0075                            ds      2
   974                           
   975  0077                     _high:
   976  0077                            ds      2
   977                           
   978                           psect	bssBANK0,class=BANK0,space=1
   979                           global __pbssBANK0
   980  0054                     __pbssBANK0:
   981  0054                     _low:
   982  0054                            ds      2
   983                           
   984                           ; Clear objects allocated to COMMON
   985                           psect cinit,class=CODE,delta=2
   986  0F52  01F5               	clrf	((__pbssCOMMON)+0)&07Fh
   987  0F53  01F6               	clrf	((__pbssCOMMON)+1)&07Fh
   988  0F54  01F7               	clrf	((__pbssCOMMON)+2)&07Fh
   989  0F55  01F8               	clrf	((__pbssCOMMON)+3)&07Fh
   990                           ; Clear objects allocated to BANK0
   991                           psect cinit,class=CODE,delta=2
   992  0F56  01D4               	clrf	((__pbssBANK0)+0)&07Fh
   993  0F57  01D5               	clrf	((__pbssBANK0)+1)&07Fh
   994                           psect cinit,class=CODE,delta=2
   995                           global end_of_initialization
   996                           
   997                           ;End of C runtime variable initationation code
   998                           
   999  0F58                     end_of_initialization:
  1000  0F58  0183               clrf status
  1001  0F59  120A  118A  2832   ljmp _main	;jump to C main() function
  1002                           psect	cstackCOMMON,class=COMMON,space=1
  1003                           global __pcstackCOMMON
  1004  0070                     __pcstackCOMMON:
  1005                           	global	?_delay
  1006  0070                     ?_delay: ;@ 0x0
  1007                           	global	??_data
  1008  0070                     ??_data: ;@ 0x0
  1009                           	global	??_pulse
  1010  0070                     ??_pulse: ;@ 0x0
  1011                           	global	??___ftpack
  1012  0070                     ??___ftpack: ;@ 0x0
  1013                           	global	??_delay
  1014  0070                     ??_delay: ;@ 0x0
  1015                           	global	??___awmod
  1016  0070                     ??___awmod: ;@ 0x0
  1017                           	global	??_command
  1018  0070                     ??_command: ;@ 0x0
  1019                           	global	delay@x
  1020  0070                     delay@x:	; 2 bytes @ 0x0
  1021  0070                     	ds	1
  1022                           	global	??___awdiv
  1023  0071                     ??___awdiv: ;@ 0x1
  1024  0071                     	ds	1
  1025                           	global	??_count1
  1026  0072                     ??_count1: ;@ 0x2
  1027                           	global	??_count
  1028  0072                     ??_count: ;@ 0x2
  1029                           	global	?_pulse
  1030  0072                     ?_pulse: ;@ 0x2
  1031                           	global	data@data
  1032  0072                     data@data:	; 1 bytes @ 0x2
  1033                           	global	command@data
  1034  0072                     command@data:	; 1 bytes @ 0x2
  1035  0072                     	ds	1
  1036                           	global	??___awtoft
  1037  0073                     ??___awtoft: ;@ 0x3
  1038                           	global	?_command
  1039  0073                     ?_command: ;@ 0x3
  1040                           	global	?_data
  1041  0073                     ?_data: ;@ 0x3
  1042                           	global	??_adc
  1043  0073                     ??_adc: ;@ 0x3
  1044                           	global	??_adc1
  1045  0073                     ??_adc1: ;@ 0x3
  1046  0073                     	ds	2
  1047                           	global	?_adc
  1048  0075                     ?_adc: ;@ 0x5
  1049                           	global	??_main
  1050  0075                     ??_main: ;@ 0x5
  1051                           	global	?_adc1
  1052  0075                     ?_adc1: ;@ 0x5
  1053                           	global	??_voltage1
  1054  0075                     ??_voltage1: ;@ 0x5
  1055                           	global	??_voltage
  1056  0075                     ??_voltage: ;@ 0x5
  1057                           psect	cstackBANK0,class=BANK0,space=1
  1058                           global __pcstackBANK0
  1059  0020                     __pcstackBANK0:
  1060                           	global	___awmod@sign
  1061  0020                     ___awmod@sign:	; 1 bytes @ 0x0
  1062                           	global	?___ftpack
  1063  0020                     ?___ftpack: ;@ 0x0
  1064                           	global	___ftpack@arg
  1065  0020                     ___ftpack@arg:	; 3 bytes @ 0x0
  1066  0020                     	ds	1
  1067                           	global	___awmod@counter
  1068  0021                     ___awmod@counter:	; 1 bytes @ 0x1
  1069  0021                     	ds	1
  1070                           	global	?___awmod
  1071  0022                     ?___awmod: ;@ 0x2
  1072                           	global	___awmod@dividend
  1073  0022                     ___awmod@dividend:	; 2 bytes @ 0x2
  1074  0022                     	ds	1
  1075                           	global	___ftpack@exp
  1076  0023                     ___ftpack@exp:	; 1 bytes @ 0x3
  1077  0023                     	ds	1
  1078                           	global	___ftpack@sign
  1079  0024                     ___ftpack@sign:	; 1 bytes @ 0x4
  1080                           	global	___awmod@divisor
  1081  0024                     ___awmod@divisor:	; 2 bytes @ 0x4
  1082  0024                     	ds	1
  1083                           	global	___awtoft@sign
  1084  0025                     ___awtoft@sign:	; 1 bytes @ 0x5
  1085  0025                     	ds	1
  1086                           	global	___awdiv@counter
  1087  0026                     ___awdiv@counter:	; 1 bytes @ 0x6
  1088                           	global	?___awtoft
  1089  0026                     ?___awtoft: ;@ 0x6
  1090                           	global	___awtoft@c
  1091  0026                     ___awtoft@c:	; 2 bytes @ 0x6
  1092  0026                     	ds	1
  1093                           	global	___awdiv@sign
  1094  0027                     ___awdiv@sign:	; 1 bytes @ 0x7
  1095  0027                     	ds	1
  1096                           	global	___awdiv@quotient
  1097  0028                     ___awdiv@quotient:	; 2 bytes @ 0x8
  1098  0028                     	ds	1
  1099                           	global	??___ftmul
  1100  0029                     ??___ftmul: ;@ 0x9
  1101  0029                     	ds	1
  1102                           	global	?___awdiv
  1103  002A                     ?___awdiv: ;@ 0xA
  1104                           	global	___awdiv@dividend
  1105  002A                     ___awdiv@dividend:	; 2 bytes @ 0xA
  1106  002A                     	ds	2
  1107                           	global	___awdiv@divisor
  1108  002C                     ___awdiv@divisor:	; 2 bytes @ 0xC
  1109  002C                     	ds	1
  1110                           	global	___ftmul@exp
  1111  002D                     ___ftmul@exp:	; 1 bytes @ 0xD
  1112  002D                     	ds	1
  1113                           	global	count1@e
  1114  002E                     count1@e:	; 2 bytes @ 0xE
  1115                           	global	count@e
  1116  002E                     count@e:	; 2 bytes @ 0xE
  1117                           	global	___ftmul@f3_as_product
  1118  002E                     ___ftmul@f3_as_product:	; 3 bytes @ 0xE
  1119  002E                     	ds	2
  1120                           	global	count@f
  1121  0030                     count@f:	; 2 bytes @ 0x10
  1122                           	global	count1@f
  1123  0030                     count1@f:	; 2 bytes @ 0x10
  1124  0030                     	ds	1
  1125                           	global	___ftmul@cntr
  1126  0031                     ___ftmul@cntr:	; 1 bytes @ 0x11
  1127  0031                     	ds	1
  1128                           	global	___ftmul@sign
  1129  0032                     ___ftmul@sign:	; 1 bytes @ 0x12
  1130                           	global	count@a
  1131  0032                     count@a:	; 2 bytes @ 0x12
  1132                           	global	count1@a
  1133  0032                     count1@a:	; 2 bytes @ 0x12
  1134  0032                     	ds	1
  1135                           	global	?___ftmul
  1136  0033                     ?___ftmul: ;@ 0x13
  1137                           	global	___ftmul@f1
  1138  0033                     ___ftmul@f1:	; 3 bytes @ 0x13
  1139  0033                     	ds	1
  1140                           	global	count@c
  1141  0034                     count@c:	; 2 bytes @ 0x14
  1142                           	global	count1@c
  1143  0034                     count1@c:	; 2 bytes @ 0x14
  1144  0034                     	ds	2
  1145                           	global	?_count
  1146  0036                     ?_count: ;@ 0x16
  1147                           	global	?_count1
  1148  0036                     ?_count1: ;@ 0x16
  1149                           	global	count1@i
  1150  0036                     count1@i:	; 2 bytes @ 0x16
  1151                           	global	count@i
  1152  0036                     count@i:	; 2 bytes @ 0x16
  1153                           	global	___ftmul@f2
  1154  0036                     ___ftmul@f2:	; 3 bytes @ 0x16
  1155  0036                     	ds	3
  1156                           	global	??___fttol
  1157  0039                     ??___fttol: ;@ 0x19
  1158                           	global	??___ftdiv
  1159  0039                     ??___ftdiv: ;@ 0x19
  1160  0039                     	ds	3
  1161                           	global	___fttol@sign1
  1162  003C                     ___fttol@sign1:	; 1 bytes @ 0x1C
  1163  003C                     	ds	1
  1164                           	global	___ftdiv@cntr
  1165  003D                     ___ftdiv@cntr:	; 1 bytes @ 0x1D
  1166+                          	global	___fttol@lval
  1167+ 003D                     ___fttol@lval:	; 4 bytes @ 0x1D
  1168  003D                     	ds	1
  1169                           	global	___ftdiv@f3
  1170  003E                     ___ftdiv@f3:	; 3 bytes @ 0x1E
  1171  003E                     	ds	3
  1172                           	global	___ftdiv@exp
  1173  0041                     ___ftdiv@exp:	; 1 bytes @ 0x21
  1174                           	global	___fttol@exp1
  1175  0041                     ___fttol@exp1:	; 1 bytes @ 0x21
  1176  0041                     	ds	1
  1177                           	global	___ftdiv@sign
  1178  0042                     ___ftdiv@sign:	; 1 bytes @ 0x22
  1179                           	global	___fttol@f1
  1180  0042                     ___fttol@f1:	; 3 bytes @ 0x22
  1181                           	global	?___fttol
  1182  0042                     ?___fttol: ;@ 0x22
  1183  0042                     	ds	1
  1184                           	global	?___ftdiv
  1185  0043                     ?___ftdiv: ;@ 0x23
  1186                           	global	___ftdiv@f1
  1187  0043                     ___ftdiv@f1:	; 3 bytes @ 0x23
  1188  0043                     	ds	3
  1189                           	global	___ftdiv@f2
  1190  0046                     ___ftdiv@f2:	; 3 bytes @ 0x26
  1191  0046                     	ds	3
  1192                           	global	voltage1@z
  1193  0049                     voltage1@z:	; 3 bytes @ 0x29
  1194                           	global	voltage@z
  1195  0049                     voltage@z:	; 3 bytes @ 0x29
  1196  0049                     	ds	3
  1197                           	global	voltage1@c
  1198  004C                     voltage1@c:	; 2 bytes @ 0x2C
  1199                           	global	voltage@c
  1200  004C                     voltage@c:	; 2 bytes @ 0x2C
  1201  004C                     	ds	2
  1202                           	global	voltage@a
  1203  004E                     voltage@a:	; 2 bytes @ 0x2E
  1204                           	global	voltage1@a
  1205  004E                     voltage1@a:	; 2 bytes @ 0x2E
  1206  004E                     	ds	2
  1207                           	global	voltage@b
  1208  0050                     voltage@b:	; 2 bytes @ 0x30
  1209                           	global	voltage1@b
  1210  0050                     voltage1@b:	; 2 bytes @ 0x30
  1211  0050                     	ds	2
  1212                           	global	voltage@d
  1213  0052                     voltage@d:	; 2 bytes @ 0x32
  1214                           	global	voltage1@d
  1215  0052                     voltage1@d:	; 2 bytes @ 0x32
  1216  0052                     	ds	2
  1217                           	global	?_main
  1218  0054                     ?_main: ;@ 0x34
  1219                           	global	?_voltage1
  1220  0054                     ?_voltage1: ;@ 0x34
  1221                           	global	?_voltage
  1222  0054                     ?_voltage: ;@ 0x34
  1223                           ;Data sizes: Strings 0, constant 0, data 0, bss 6, persistent 0 stack 0
  1224                           ;Auto spaces:   Size  Autos    Used
  1225                           ; COMMON          14      5       9
  1226                           ; BANK0           80     52      54
  1227                           ; BANK1           80      0       0
  1228                           ; BANK3           96      0       0
  1229                           ; BANK2           96      0       0
  1230                           
  1231                           
  1232                           ;Pointer list with targets:
  1233                           
  1234                           ;?___awdiv	int  size(1); Largest target is 0
  1235                           ;?___awmod	int  size(1); Largest target is 0
  1236                           ;?___ftmul	float  size(1); Largest target is 0
  1237                           ;?___fttol	long  size(1); Largest target is 0
  1238                           ;?___ftdiv	float  size(1); Largest target is 0
  1239                           ;?___awtoft	float  size(1); Largest target is 0
  1240                           ;?___ftpack	float  size(1); Largest target is 0
  1241                           
  1242                           
  1243                           ;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1244                           
  1245                           
  1246                           ;Call graph:                      Base Space Used Autos Args Refs Density
  1247                           ;_main                                                0    0 10170   0.00
  1248                           ;            _command
  1249                           ;               _data
  1250                           ;                _adc
  1251                           ;            _voltage
  1252                           ;               _adc1
  1253                           ;           _voltage1
  1254                           ;  _adc                                               2    0  854   0.00
  1255                           ;                                    3 COMMO    2
  1256                           ;              _count
  1257                           ;  _voltage                                          11    0 4199   0.00
  1258                           ;                                   41 BANK0   11
  1259                           ;            _command
  1260                           ;           ___awtoft
  1261                           ;            ___ftmul
  1262                           ;            ___ftdiv
  1263                           ;            ___fttol
  1264                           ;            ___awdiv
  1265                           ;            ___awmod
  1266                           ;               _data
  1267                           ;  _adc1                                              2    0  854   0.00
  1268                           ;                                    3 COMMO    2
  1269                           ;             _count1
  1270                           ;  _voltage1                                         11    0 4199   0.00
  1271                           ;                                   41 BANK0   11
  1272                           ;            _command
  1273                           ;           ___awtoft
  1274                           ;            ___ftmul
  1275                           ;            ___ftdiv
  1276                           ;            ___fttol
  1277                           ;            ___awdiv
  1278                           ;            ___awmod
  1279                           ;               _data
  1280                           ;    ___ftmul                                        10    6  767   0.00
  1281                           ;                                    9 BANK0   16
  1282                           ;           ___awtoft (ARG)
  1283                           ;           ___ftpack
  1284                           ;    ___awtoft                                        3    3  222   0.00
  1285                           ;                                    3 COMMO    2
  1286                           ;                                    5 BANK0    4
  1287                           ;           ___ftpack
  1288                           ;    ___ftdiv                                        10    6 1352   0.00
  1289                           ;                                   25 BANK0   16
  1290                           ;            ___ftmul (ARG)
  1291                           ;           ___awtoft (ARG)
  1292                           ;           ___ftpack
  1293                           ;    ___fttol                                         9    4  953   0.00
  1294                           ;                                   25 BANK0   13
  1295                           ;            ___ftmul (ARG)
  1296                           ;    _count1                                          8    2  854   0.00
  1297                           ;                                   14 BANK0   10
  1298                           ;            ___awdiv
  1299                           ;            ___awmod
  1300                           ;            _command
  1301                           ;               _data
  1302                           ;    _count                                           8    2  854   0.00
  1303                           ;                                   14 BANK0   10
  1304                           ;            ___awdiv
  1305                           ;            ___awmod
  1306                           ;            _command
  1307                           ;               _data
  1308                           ;      ___ftpack                                      3    5  155   0.00
  1309                           ;                                    0 COMMO    3
  1310                           ;                                    0 BANK0    5
  1311                           ;      _data                                          1    0   32   0.00
  1312                           ;                                    2 COMMO    1
  1313                           ;              _pulse
  1314                           ;      _command                                       1    0   32   0.00
  1315                           ;                                    2 COMMO    1
  1316                           ;              _pulse
  1317                           ;      ___awmod                                       3    4  218   0.00
  1318                           ;                                    0 COMMO    1
  1319                           ;                                    0 BANK0    6
  1320                           ;      ___awdiv                                       5    4  440   0.00
  1321                           ;                                    1 COMMO    1
  1322                           ;                                    6 BANK0    8
  1323                           ;            ___awmod (ARG)
  1324                           ;        _pulse                                       0    0   16   0.00
  1325                           ;              _delay
  1326                           ;          _delay                                     0    2   16   0.00
  1327                           ;                                    0 COMMO    2
  1328                           ; Estimated maximum call depth 5
  1329                           ; Address spaces:
  1330                           
  1331                           ;Name               Size   Autos  Total    Cost      Usage
  1332                           ;BITCOMMON            E      0       0       0        0.0%
  1333                           ;CODE                 0      0       0       0        0.0%
  1334                           ;NULL                 0      0       0       0        0.0%
  1335                           ;COMMON               E      5       9       1       64.3%
  1336                           ;SFR0                 0      0       0       1        0.0%
  1337                           ;BITSFR0              0      0       0       1        0.0%
  1338                           ;BITSFR1              0      0       0       2        0.0%
  1339                           ;SFR1                 0      0       0       2        0.0%
  1340                           ;ABS                  0      0      3F       2        0.0%
  1341                           ;STACK                0      0       0       3        0.0%
  1342                           ;BITBANK0            50      0       0       4        0.0%
  1343                           ;SFR3                 0      0       0       4        0.0%
  1344                           ;BITSFR3              0      0       0       4        0.0%
  1345                           ;BANK0               50     34      36       5       67.5%
  1346                           ;BITSFR2              0      0       0       5        0.0%
  1347                           ;SFR2                 0      0       0       5        0.0%
  1348                           ;BITBANK1            50      0       0       6        0.0%
  1349                           ;BANK1               50      0       0       7        0.0%
  1350                           ;BITBANK3            60      0       0       8        0.0%
  1351                           ;BANK3               60      0       0       9        0.0%
  1352                           ;BITBANK2            60      0       0      10        0.0%
  1353                           ;BANK2               60      0       0      11        0.0%
  1354                           ;DATA                 0      0      3F      12        0.0%
  1355                           ;EEDATA             100      0       0    1000        0.0%
  1356                           
  1357                           	global	_main
  1358                           psect	maintext,local,class=CODE,delta=2
  1359                           global __pmaintext
  1360  0032                     __pmaintext:
  1361                           
  1362                           ; *************** function _main *****************
  1363                           ; Defined at:
  1364                           ;		line 178 in file "C:\Users\gowth\Documents\PIC Programs\ADC\2 ADC\2 ADC.c"
  1365                           ; Parameters:    Size  Location     Type
  1366                           ;		None
  1367                           ; Auto vars:     Size  Location     Type
  1368                           ;		None
  1369                           ; Return value:  Size  Location     Type
  1370                           ;		None               void
  1371                           ; Registers used:
  1372                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+1, btemp+2, btem
                                 p+3, pclath, cstack
  1373                           ; Tracked objects:
  1374                           ;		On entry : 17F/0
  1375                           ;		On exit  : 0/0
  1376                           ;		Unchanged: 0/0
  1377                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1378                           ;      Locals:         0       0       0       0       0
  1379                           ;      Temp:     0
  1380                           ;      Total:    0
  1381                           ; This function calls:
  1382                           ;		_command
  1383                           ;		_data
  1384                           ;		_adc
  1385                           ;		_voltage
  1386                           ;		_adc1
  1387                           ;		_voltage1
  1388                           ; This function is called by:
  1389                           ;		Startup code after reset
  1390                           ; This function uses a non-reentrant model
  1391                           ; 
  1392                           psect	maintext
  1393                           	file	"C:\Users\gowth\Documents\PIC Programs\ADC\2 ADC\2 ADC.c"
  1394                           	line	178
  1395                           	global	__size_of_main
  1396  0066                     	__size_of_main	equ	__end_of_main-_main
  1397                           ;2 ADC.c: 177: void main()
  1398                           ;2 ADC.c: 178: {
  1399                           	
  1400  0032                     _main:	
  1401                           	opt stack 8
  1402                           ; Regs used in _main: [allreg]
  1403                           	line	179
  1404                           	
  1405  0032                     l30001145:	
  1406                           ;2 ADC.c: 179: TRISA=0X03; PORTA=0X00;
  1407  0032  3003               	movlw	(03h)
  1408  0033  1683               	bsf	status, 5	;RP0=1, select bank1
  1409  0034  1303               	bcf	status, 6	;RP1=0, select bank1
  1410  0035  0085               	movwf	(133)^080h	;volatile
  1411                           	
  1412  0036                     l30001146:	
  1413  0036  1003               	clrc
  1414  0037  3000               	movlw	0
  1415  0038  1803               	btfsc	status,0
  1416  0039  3001               	movlw	1
  1417  003A  1283               	bcf	status, 5	;RP0=0, select bank0
  1418  003B  1303               	bcf	status, 6	;RP1=0, select bank0
  1419  003C  0085               	movwf	(5)	;volatile
  1420                           	
  1421  003D                     l30001147:	
  1422                           	line	180
  1423                           ;2 ADC.c: 180: TRISD=0X00; PORTD=0X00;
  1424  003D  1003               	clrc
  1425  003E  3000               	movlw	0
  1426  003F  1803               	btfsc	status,0
  1427  0040  3001               	movlw	1
  1428  0041  1683               	bsf	status, 5	;RP0=1, select bank1
  1429  0042  1303               	bcf	status, 6	;RP1=0, select bank1
  1430  0043  0088               	movwf	(136)^080h	;volatile
  1431                           	
  1432  0044                     l30001148:	
  1433  0044  1003               	clrc
  1434  0045  3000               	movlw	0
  1435  0046  1803               	btfsc	status,0
  1436  0047  3001               	movlw	1
  1437  0048  1283               	bcf	status, 5	;RP0=0, select bank0
  1438  0049  1303               	bcf	status, 6	;RP1=0, select bank0
  1439  004A  0088               	movwf	(8)	;volatile
  1440                           	
  1441  004B                     l30001149:	
  1442                           	line	181
  1443                           ;2 ADC.c: 181: TRISE=0X00; PORTE=0X00;
  1444  004B  1003               	clrc
  1445  004C  3000               	movlw	0
  1446  004D  1803               	btfsc	status,0
  1447  004E  3001               	movlw	1
  1448  004F  1683               	bsf	status, 5	;RP0=1, select bank1
  1449  0050  1303               	bcf	status, 6	;RP1=0, select bank1
  1450  0051  0089               	movwf	(137)^080h	;volatile
  1451                           	
  1452  0052                     l30001150:	
  1453  0052  1003               	clrc
  1454  0053  3000               	movlw	0
  1455  0054  1803               	btfsc	status,0
  1456  0055  3001               	movlw	1
  1457  0056  1283               	bcf	status, 5	;RP0=0, select bank0
  1458  0057  1303               	bcf	status, 6	;RP1=0, select bank0
  1459  0058  0089               	movwf	(9)	;volatile
  1460                           	
  1461  0059                     l30001151:	
  1462                           	line	183
  1463                           ;2 ADC.c: 183: ANSEL=0X03; ANSELH=0X00;
  1464  0059  3003               	movlw	(03h)
  1465  005A  1683               	bsf	status, 5	;RP0=1, select bank3
  1466  005B  1703               	bsf	status, 6	;RP1=1, select bank3
  1467  005C  0088               	movwf	(392)^0180h
  1468  005D  1003               	clrc
  1469  005E  3000               	movlw	0
  1470  005F  1803               	btfsc	status,0
  1471  0060  3001               	movlw	1
  1472  0061  0089               	movwf	(393)^0180h
  1473                           	
  1474  0062                     l30001152:	
  1475                           	line	185
  1476                           ;2 ADC.c: 185: command(0X38);
  1477  0062  3038               	movlw	(038h)
  1478  0063  120A  158A  275C   	fcall	_command
              120A  118A         
  1479                           	
  1480  0068                     l30001153:	
  1481                           	line	186
  1482                           ;2 ADC.c: 186: command(0X0C);
  1483  0068  300C               	movlw	(0Ch)
  1484  0069  120A  158A  275C   	fcall	_command
              120A  118A         
  1485                           	
  1486  006E                     l30001154:	
  1487                           	line	188
  1488                           ;2 ADC.c: 188: command(0X80);
  1489  006E  3080               	movlw	(080h)
  1490  006F  120A  158A  275C   	fcall	_command
              120A  118A         
  1491                           	
  1492  0074                     l30001155:	
  1493                           	line	189
  1494                           ;2 ADC.c: 189: data('0');
  1495  0074  3030               	movlw	(030h)
  1496  0075  120A  158A  2768   	fcall	_data
              120A  118A         
  1497                           	
  1498  007A                     l30001156:	
  1499                           	line	190
  1500                           ;2 ADC.c: 190: data('0');
  1501  007A  3030               	movlw	(030h)
  1502  007B  120A  158A  2768   	fcall	_data
              120A  118A         
  1503                           	
  1504  0080                     l30001157:	
  1505                           	line	195
  1506                           ;2 ADC.c: 193: {
  1507                           ;2 ADC.c: 195: adc();
  1508  0080  120A  118A  2298   	fcall	_adc
              120A  118A         
  1509                           	
  1510  0085                     l30001158:	
  1511                           	line	196
  1512                           ;2 ADC.c: 196: voltage();
  1513  0085  120A  118A  270E   	fcall	_voltage
              120A  118A         
  1514                           	
  1515  008A                     l30001159:	
  1516                           	line	197
  1517                           ;2 ADC.c: 197: adc1();
  1518  008A  120A  118A  220D   	fcall	_adc1
              120A  118A         
  1519                           	
  1520  008F                     l30001160:	
  1521                           	line	198
  1522                           ;2 ADC.c: 198: voltage1();
  1523  008F  120A  118A  261C   	fcall	_voltage1
              120A  118A         
  1524+ 0094  2880               	goto	l30001157
  1525+                          	global	start
  1526+ 0095  120A  118A  2800   	ljmp	start
  1527                           	opt stack 0
  1528                           GLOBAL	__end_of_main
  1529  0098                     	__end_of_main:
  1530                           ; =============== function _main ends ============
  1531                           
  1532                           psect	maintext
  1533                           	line	202
  1534                           	signat	_main,88
  1535                           	global	_adc
  1536                           psect	text111,local,class=CODE,delta=2
  1537                           global __ptext111
  1538  0298                     __ptext111:
  1539                           
  1540                           ; *************** function _adc *****************
  1541                           ; Defined at:
  1542                           ;		line 70 in file "C:\Users\gowth\Documents\PIC Programs\ADC\2 ADC\2 ADC.c"
  1543                           ; Parameters:    Size  Location     Type
  1544                           ;		None
  1545                           ; Auto vars:     Size  Location     Type
  1546                           ;		None
  1547                           ; Return value:  Size  Location     Type
  1548                           ;		None               void
  1549                           ; Registers used:
  1550                           ;		wreg, status,2, status,0, pclath, cstack
  1551                           ; Tracked objects:
  1552                           ;		On entry : 0/0
  1553                           ;		On exit  : 0/0
  1554                           ;		Unchanged: 0/0
  1555                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1556                           ;      Locals:         2       0       0       0       0
  1557                           ;      Temp:     2
  1558                           ;      Total:    2
  1559                           ; This function calls:
  1560                           ;		_count
  1561                           ; This function is called by:
  1562                           ;		_main
  1563                           ; This function uses a non-reentrant model
  1564                           ; 
  1565                           psect	text111
  1566                           	file	"C:\Users\gowth\Documents\PIC Programs\ADC\2 ADC\2 ADC.c"
  1567                           	line	70
  1568                           	global	__size_of_adc
  1569  008B                     	__size_of_adc	equ	__end_of_adc-_adc
  1570                           ;2 ADC.c: 69: void adc()
  1571                           ;2 ADC.c: 70: {
  1572                           	
  1573  0298                     _adc:	
  1574                           	opt stack 7
  1575                           ; Regs used in _adc: [wreg+status,2+status,0+pclath+cstack]
  1576                           	line	71
  1577                           	
  1578  0298                     l30001042:	
  1579                           ;2 ADC.c: 71: ADCON0=0X83; ADCON1=0X80;
  1580  0298  3083               	movlw	(083h)
  1581  0299  1283               	bcf	status, 5	;RP0=0, select bank0
  1582  029A  1303               	bcf	status, 6	;RP1=0, select bank0
  1583  029B  009F               	movwf	(31)	;volatile
  1584  029C  3080               	movlw	(080h)
  1585  029D  1683               	bsf	status, 5	;RP0=1, select bank1
  1586  029E  1303               	bcf	status, 6	;RP1=0, select bank1
  1587  029F  009F               	movwf	(159)^080h
  1588                           	
  1589  02A0                     l11:	
  1590                           	line	72
  1591  02A0  1283               	bcf	status, 5	;RP0=0, select bank0
  1592  02A1  189F               	btfsc	(31),(1)&7	;volatile
  1593  02A2  2AA4               	goto	u1301
  1594  02A3  2AA5               	goto	u1300
  1595  02A4                     u1301:
  1596  02A4  2AA0               	goto	l11
  1597  02A5                     u1300:
  1598                           	
  1599  02A5                     l30001043:	
  1600                           	line	73
  1601                           ;2 ADC.c: 73: high=ADRESH; low=ADRESL;
  1602  02A5  081E               	movf	(30),w	;volatile
  1603  02A6  00F3               	movwf	(??_adc+0+0)
  1604  02A7  01F4               	clrf	(??_adc+0+0+1)
  1605  02A8  0873               	movf	0+(??_adc+0+0),w
  1606  02A9  00F7               	movwf	(_high)
  1607  02AA  0874               	movf	1+(??_adc+0+0),w
  1608  02AB  00F8               	movwf	(_high+1)
  1609  02AC  1683               	bsf	status, 5	;RP0=1, select bank1
  1610  02AD  1303               	bcf	status, 6	;RP1=0, select bank1
  1611  02AE  081E               	movf	(158)^080h,w	;volatile
  1612  02AF  00F3               	movwf	(??_adc+0+0)
  1613  02B0  01F4               	clrf	(??_adc+0+0+1)
  1614  02B1  0873               	movf	0+(??_adc+0+0),w
  1615  02B2  1283               	bcf	status, 5	;RP0=0, select bank0
  1616  02B3  1303               	bcf	status, 6	;RP1=0, select bank0
  1617  02B4  00D4               	movwf	(_low)
  1618  02B5  0874               	movf	1+(??_adc+0+0),w
  1619  02B6  00D5               	movwf	(_low+1)
  1620                           	
  1621  02B7                     l30001044:	
  1622                           	line	75
  1623                           ;2 ADC.c: 75: if(high==0)
  1624  02B7  0878               	movf	((_high+1)),w
  1625  02B8  0477               	iorwf	((_high)),w
  1626  02B9  1D03               	skipz
  1627  02BA  2ABC               	goto	u1311
  1628  02BB  2ABD               	goto	u1310
  1629  02BC                     u1311:
  1630  02BC  2ACE               	goto	l30001047
  1631  02BD                     u1310:
  1632                           	
  1633  02BD                     l30001045:	
  1634                           	line	77
  1635                           ;2 ADC.c: 76: {
  1636                           ;2 ADC.c: 77: DV=low;
  1637  02BD  0855               	movf	(_low+1),w
  1638  02BE  01F6               	clrf	(_DV+1)
  1639  02BF  07F6               	addwf	(_DV+1)
  1640  02C0  0854               	movf	(_low),w
  1641  02C1  01F5               	clrf	(_DV)
  1642  02C2  07F5               	addwf	(_DV)
  1643                           
  1644                           	
  1645  02C3                     l30001046:	
  1646                           	line	78
  1647                           ;2 ADC.c: 78: count(DV);
  1648  02C3  0876               	movf	(_DV+1),w
  1649  02C4  01B7               	clrf	(?_count+1)
  1650  02C5  07B7               	addwf	(?_count+1)
  1651  02C6  0875               	movf	(_DV),w
  1652  02C7  01B6               	clrf	(?_count)
  1653  02C8  07B6               	addwf	(?_count)
  1654                           
  1655  02C9  120A  118A  23D4   	fcall	_count
              120A  118A         
  1656                           	
  1657  02CE                     l30001047:	
  1658                           	line	81
  1659                           ;2 ADC.c: 79: }
  1660                           ;2 ADC.c: 81: if(high==1)
  1661  02CE  3001               	movlw	01h
  1662  02CF  0677               	xorwf	(_high),w
  1663  02D0  0478               	iorwf	(_high+1),w
  1664  02D1  1D03               	skipz
  1665  02D2  2AD4               	goto	u1321
  1666  02D3  2AD5               	goto	u1320
  1667  02D4                     u1321:
  1668  02D4  2AEA               	goto	l30001050
  1669  02D5                     u1320:
  1670                           	
  1671  02D5                     l30001048:	
  1672                           	line	83
  1673                           ;2 ADC.c: 82: {
  1674                           ;2 ADC.c: 83: DV=low+256;
  1675  02D5  1283               	bcf	status, 5	;RP0=0, select bank0
  1676  02D6  1303               	bcf	status, 6	;RP1=0, select bank0
  1677  02D7  0854               	movf	(_low),w
  1678  02D8  3E00               	addlw	low(0100h)
  1679  02D9  00F5               	movwf	(_DV)
  1680  02DA  0855               	movf	(_low+1),w
  1681  02DB  1803               	skipnc
  1682  02DC  3E01               	addlw	1
  1683  02DD  3E01               	addlw	high(0100h)
  1684  02DE  00F6               	movwf	1+(_DV)
  1685                           	
  1686  02DF                     l30001049:	
  1687                           	line	84
  1688                           ;2 ADC.c: 84: count(DV);
  1689  02DF  0876               	movf	(_DV+1),w
  1690  02E0  01B7               	clrf	(?_count+1)
  1691  02E1  07B7               	addwf	(?_count+1)
  1692  02E2  0875               	movf	(_DV),w
  1693  02E3  01B6               	clrf	(?_count)
  1694  02E4  07B6               	addwf	(?_count)
  1695                           
  1696  02E5  120A  118A  23D4   	fcall	_count
              120A  118A         
  1697                           	
  1698  02EA                     l30001050:	
  1699                           	line	87
  1700                           ;2 ADC.c: 85: }
  1701                           ;2 ADC.c: 87: if(high==2)
  1702  02EA  3002               	movlw	02h
  1703  02EB  0677               	xorwf	(_high),w
  1704  02EC  0478               	iorwf	(_high+1),w
  1705  02ED  1D03               	skipz
  1706  02EE  2AF0               	goto	u1331
  1707  02EF  2AF1               	goto	u1330
  1708  02F0                     u1331:
  1709  02F0  2B06               	goto	l30001053
  1710  02F1                     u1330:
  1711                           	
  1712  02F1                     l30001051:	
  1713                           	line	89
  1714                           ;2 ADC.c: 88: {
  1715                           ;2 ADC.c: 89: DV=low+512;
  1716  02F1  1283               	bcf	status, 5	;RP0=0, select bank0
  1717  02F2  1303               	bcf	status, 6	;RP1=0, select bank0
  1718  02F3  0854               	movf	(_low),w
  1719  02F4  3E00               	addlw	low(0200h)
  1720  02F5  00F5               	movwf	(_DV)
  1721  02F6  0855               	movf	(_low+1),w
  1722  02F7  1803               	skipnc
  1723  02F8  3E01               	addlw	1
  1724  02F9  3E02               	addlw	high(0200h)
  1725  02FA  00F6               	movwf	1+(_DV)
  1726                           	
  1727  02FB                     l30001052:	
  1728                           	line	90
  1729                           ;2 ADC.c: 90: count(DV);
  1730  02FB  0876               	movf	(_DV+1),w
  1731  02FC  01B7               	clrf	(?_count+1)
  1732  02FD  07B7               	addwf	(?_count+1)
  1733  02FE  0875               	movf	(_DV),w
  1734  02FF  01B6               	clrf	(?_count)
  1735  0300  07B6               	addwf	(?_count)
  1736                           
  1737  0301  120A  118A  23D4   	fcall	_count
              120A  118A         
  1738                           	
  1739  0306                     l30001053:	
  1740                           	line	93
  1741                           ;2 ADC.c: 91: }
  1742                           ;2 ADC.c: 93: if(high==3)
  1743  0306  3003               	movlw	03h
  1744  0307  0677               	xorwf	(_high),w
  1745  0308  0478               	iorwf	(_high+1),w
  1746  0309  1D03               	skipz
  1747  030A  2B0C               	goto	u1341
  1748  030B  2B0D               	goto	u1340
  1749  030C                     u1341:
  1750  030C  2B22               	goto	l10
  1751  030D                     u1340:
  1752                           	
  1753  030D                     l30001054:	
  1754                           	line	95
  1755                           ;2 ADC.c: 94: {
  1756                           ;2 ADC.c: 95: DV=low+768;
  1757  030D  1283               	bcf	status, 5	;RP0=0, select bank0
  1758  030E  1303               	bcf	status, 6	;RP1=0, select bank0
  1759  030F  0854               	movf	(_low),w
  1760  0310  3E00               	addlw	low(0300h)
  1761  0311  00F5               	movwf	(_DV)
  1762  0312  0855               	movf	(_low+1),w
  1763  0313  1803               	skipnc
  1764  0314  3E01               	addlw	1
  1765  0315  3E03               	addlw	high(0300h)
  1766  0316  00F6               	movwf	1+(_DV)
  1767                           	
  1768  0317                     l30001055:	
  1769                           	line	96
  1770                           ;2 ADC.c: 96: count(DV);
  1771  0317  0876               	movf	(_DV+1),w
  1772  0318  01B7               	clrf	(?_count+1)
  1773  0319  07B7               	addwf	(?_count+1)
  1774  031A  0875               	movf	(_DV),w
  1775  031B  01B6               	clrf	(?_count)
  1776  031C  07B6               	addwf	(?_count)
  1777                           
  1778  031D  120A  118A  23D4   	fcall	_count
              120A  118A         
  1779                           	
  1780  0322                     l10:	
  1781  0322  0008               	return
  1782                           	opt stack 0
  1783                           GLOBAL	__end_of_adc
  1784  0323                     	__end_of_adc:
  1785                           ; =============== function _adc ends ============
  1786                           
  1787                           psect	text112,local,class=CODE,delta=2
  1788                           global __ptext112
  1789  070E                     __ptext112:
  1790                           	line	99
  1791                           	signat	_adc,88
  1792                           	global	_voltage
  1793                           
  1794                           ; *************** function _voltage *****************
  1795                           ; Defined at:
  1796                           ;		line 135 in file "C:\Users\gowth\Documents\PIC Programs\ADC\2 ADC\2 ADC.c"
  1797                           ; Parameters:    Size  Location     Type
  1798                           ;		None
  1799                           ; Auto vars:     Size  Location     Type
  1800                           ;  z               3   41[BANK0 ] float 
  1801                           ;  d               2   50[BANK0 ] int 
  1802                           ;  c               2   44[BANK0 ] int 
  1803                           ;  b               2   48[BANK0 ] int 
  1804                           ;  a               2   46[BANK0 ] int 
  1805                           ; Return value:  Size  Location     Type
  1806                           ;		None               void
  1807                           ; Registers used:
  1808                           ;		wreg, status,2, status,0, pclath, cstack
  1809                           ; Tracked objects:
  1810                           ;		On entry : 0/0
  1811                           ;		On exit  : 0/0
  1812                           ;		Unchanged: 0/0
  1813                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1814                           ;      Locals:         0      11       0       0       0
  1815                           ;      Temp:     0
  1816                           ;      Total:   11
  1817                           ; This function calls:
  1818                           ;		_command
  1819                           ;		___awtoft
  1820                           ;		___ftmul
  1821                           ;		___ftdiv
  1822                           ;		___fttol
  1823                           ;		___awdiv
  1824                           ;		___awmod
  1825                           ;		_data
  1826                           ; This function is called by:
  1827                           ;		_main
  1828                           ; This function uses a non-reentrant model
  1829                           ; 
  1830                           psect	text112
  1831                           	file	"C:\Users\gowth\Documents\PIC Programs\ADC\2 ADC\2 ADC.c"
  1832                           	line	135
  1833                           	global	__size_of_voltage
  1834  00F2                     	__size_of_voltage	equ	__end_of_voltage-_voltage
  1835                           ;2 ADC.c: 134: void voltage()
  1836                           ;2 ADC.c: 135: {
  1837                           	
  1838  070E                     _voltage:	
  1839                           	opt stack 7
  1840                           ; Regs used in _voltage: [wreg+status,2+status,0+pclath+cstack]
  1841                           	line	136
  1842                           	
  1843  070E                     l30001144:	
  1844                           ;2 ADC.c: 136: command(0X88);
  1845  070E  3088               	movlw	(088h)
  1846  070F  120A  158A  275C   	fcall	_command
              120A  118A         
  1847                           	line	140
  1848                           ;2 ADC.c: 137: int a,b,c,d;
  1849                           ;2 ADC.c: 138: float z;
  1850                           ;2 ADC.c: 140: z=(DV*5.0)/1023.0;
  1851  0714  0876               	movf	(_DV+1),w
  1852  0715  1283               	bcf	status, 5	;RP0=0, select bank0
  1853  0716  1303               	bcf	status, 6	;RP1=0, select bank0
  1854  0717  01A7               	clrf	(?___awtoft+1)
  1855  0718  07A7               	addwf	(?___awtoft+1)
  1856  0719  0875               	movf	(_DV),w
  1857  071A  01A6               	clrf	(?___awtoft)
  1858  071B  07A6               	addwf	(?___awtoft)
  1859                           
  1860  071C  120A  118A  2003   	fcall	___awtoft
              120A  118A         
  1861  0721  1383               	bcf	status, 7	;select IRP bank0
  1862  0722  1283               	bcf	status, 5	;RP0=0, select bank0
  1863  0723  1303               	bcf	status, 6	;RP1=0, select bank0
  1864  0724  0826               	movf	(0+(?___awtoft)),w
  1865  0725  00B3               	movwf	(?___ftmul)
  1866  0726  0827               	movf	(1+(?___awtoft)),w
  1867  0727  00B4               	movwf	(?___ftmul+1)
  1868  0728  0828               	movf	(2+(?___awtoft)),w
  1869  0729  00B5               	movwf	(?___ftmul+2)
  1870  072A  3000               	movlw	0x0
  1871  072B  00B6               	movwf	0+(?___ftmul)+03h
  1872  072C  30A0               	movlw	0xa0
  1873  072D  00B7               	movwf	1+(?___ftmul)+03h
  1874  072E  3040               	movlw	0x40
  1875  072F  00B8               	movwf	2+(?___ftmul)+03h
  1876  0730  120A  118A  2540   	fcall	___ftmul
              120A  118A         
  1877  0735  1383               	bcf	status, 7	;select IRP bank0
  1878  0736  1283               	bcf	status, 5	;RP0=0, select bank0
  1879  0737  1303               	bcf	status, 6	;RP1=0, select bank0
  1880  0738  0833               	movf	(0+(?___ftmul)),w
  1881  0739  00C3               	movwf	(?___ftdiv)
  1882  073A  0834               	movf	(1+(?___ftmul)),w
  1883  073B  00C4               	movwf	(?___ftdiv+1)
  1884  073C  0835               	movf	(2+(?___ftmul)),w
  1885  073D  00C5               	movwf	(?___ftdiv+2)
  1886  073E  30C0               	movlw	0xc0
  1887  073F  00C6               	movwf	0+(?___ftdiv)+03h
  1888  0740  307F               	movlw	0x7f
  1889  0741  00C7               	movwf	1+(?___ftdiv)+03h
  1890  0742  3044               	movlw	0x44
  1891  0743  00C8               	movwf	2+(?___ftdiv)+03h
  1892  0744  120A  118A  2485   	fcall	___ftdiv
              120A  118A         
  1893  0749  1383               	bcf	status, 7	;select IRP bank0
  1894  074A  1283               	bcf	status, 5	;RP0=0, select bank0
  1895  074B  1303               	bcf	status, 6	;RP1=0, select bank0
  1896  074C  0843               	movf	(0+(?___ftdiv)),w
  1897  074D  00C9               	movwf	(voltage@z)
  1898  074E  0844               	movf	(1+(?___ftdiv)),w
  1899  074F  00CA               	movwf	(voltage@z+1)
  1900  0750  0845               	movf	(2+(?___ftdiv)),w
  1901  0751  00CB               	movwf	(voltage@z+2)
  1902                           	line	142
  1903                           ;2 ADC.c: 142: d=z*100;
  1904  0752  0849               	movf	(voltage@z),w
  1905  0753  00B3               	movwf	(?___ftmul)
  1906  0754  084A               	movf	(voltage@z+1),w
  1907  0755  00B4               	movwf	(?___ftmul+1)
  1908  0756  084B               	movf	(voltage@z+2),w
  1909  0757  00B5               	movwf	(?___ftmul+2)
  1910  0758  3000               	movlw	0x0
  1911  0759  00B6               	movwf	0+(?___ftmul)+03h
  1912  075A  30C8               	movlw	0xc8
  1913  075B  00B7               	movwf	1+(?___ftmul)+03h
  1914  075C  3042               	movlw	0x42
  1915  075D  00B8               	movwf	2+(?___ftmul)+03h
  1916  075E  120A  118A  2540   	fcall	___ftmul
              120A  118A         
  1917  0763  1383               	bcf	status, 7	;select IRP bank0
  1918  0764  1283               	bcf	status, 5	;RP0=0, select bank0
  1919  0765  1303               	bcf	status, 6	;RP1=0, select bank0
  1920  0766  0833               	movf	(0+(?___ftmul)),w
  1921  0767  00C2               	movwf	(?___fttol)
  1922  0768  0834               	movf	(1+(?___ftmul)),w
  1923  0769  00C3               	movwf	(?___fttol+1)
  1924  076A  0835               	movf	(2+(?___ftmul)),w
  1925  076B  00C4               	movwf	(?___fttol+2)
  1926  076C  120A  118A  2186   	fcall	___fttol
              120A  118A         
  1927  0771  1383               	bcf	status, 7	;select IRP bank0
  1928  0772  1283               	bcf	status, 5	;RP0=0, select bank0
  1929  0773  1303               	bcf	status, 6	;RP1=0, select bank0
  1930  0774  0843               	movf	(1+(?___fttol)),w
  1931  0775  01D3               	clrf	(voltage@d+1)
  1932  0776  07D3               	addwf	(voltage@d+1)
  1933  0777  0842               	movf	(0+(?___fttol)),w
  1934  0778  01D2               	clrf	(voltage@d)
  1935  0779  07D2               	addwf	(voltage@d)
  1936                           
  1937                           	line	143
  1938                           ;2 ADC.c: 143: a=d/100;
  1939  077A  0853               	movf	(voltage@d+1),w
  1940  077B  01AB               	clrf	(?___awdiv+1)
  1941  077C  07AB               	addwf	(?___awdiv+1)
  1942  077D  0852               	movf	(voltage@d),w
  1943  077E  01AA               	clrf	(?___awdiv)
  1944  077F  07AA               	addwf	(?___awdiv)
  1945                           
  1946  0780  3064               	movlw	low(064h)
  1947  0781  00AC               	movwf	0+(?___awdiv)+02h
  1948  0782  3000               	movlw	high(064h)
  1949  0783  00AD               	movwf	(0+(?___awdiv)+02h)+1
  1950  0784  120A  118A  2098   	fcall	___awdiv
              120A  118A         
  1951  0789  1383               	bcf	status, 7	;select IRP bank0
  1952  078A  1283               	bcf	status, 5	;RP0=0, select bank0
  1953  078B  1303               	bcf	status, 6	;RP1=0, select bank0
  1954  078C  082B               	movf	(1+(?___awdiv)),w
  1955  078D  01CF               	clrf	(voltage@a+1)
  1956  078E  07CF               	addwf	(voltage@a+1)
  1957  078F  082A               	movf	(0+(?___awdiv)),w
  1958  0790  01CE               	clrf	(voltage@a)
  1959  0791  07CE               	addwf	(voltage@a)
  1960                           
  1961                           	line	144
  1962                           ;2 ADC.c: 144: b=(d%100)/10;
  1963  0792  0853               	movf	(voltage@d+1),w
  1964  0793  01A3               	clrf	(?___awmod+1)
  1965  0794  07A3               	addwf	(?___awmod+1)
  1966  0795  0852               	movf	(voltage@d),w
  1967  0796  01A2               	clrf	(?___awmod)
  1968  0797  07A2               	addwf	(?___awmod)
  1969                           
  1970  0798  3064               	movlw	low(064h)
  1971  0799  00A4               	movwf	0+(?___awmod)+02h
  1972  079A  3000               	movlw	high(064h)
  1973  079B  00A5               	movwf	(0+(?___awmod)+02h)+1
  1974  079C  120A  158A  279E   	fcall	___awmod
              120A  118A         
  1975  07A1  1383               	bcf	status, 7	;select IRP bank0
  1976  07A2  1283               	bcf	status, 5	;RP0=0, select bank0
  1977  07A3  1303               	bcf	status, 6	;RP1=0, select bank0
  1978  07A4  0823               	movf	(1+(?___awmod)),w
  1979  07A5  01AB               	clrf	(?___awdiv+1)
  1980  07A6  07AB               	addwf	(?___awdiv+1)
  1981  07A7  0822               	movf	(0+(?___awmod)),w
  1982  07A8  01AA               	clrf	(?___awdiv)
  1983  07A9  07AA               	addwf	(?___awdiv)
  1984                           
  1985  07AA  300A               	movlw	low(0Ah)
  1986  07AB  00AC               	movwf	0+(?___awdiv)+02h
  1987  07AC  3000               	movlw	high(0Ah)
  1988  07AD  00AD               	movwf	(0+(?___awdiv)+02h)+1
  1989  07AE  120A  118A  2098   	fcall	___awdiv
              120A  118A         
  1990  07B3  1383               	bcf	status, 7	;select IRP bank0
  1991  07B4  1283               	bcf	status, 5	;RP0=0, select bank0
  1992  07B5  1303               	bcf	status, 6	;RP1=0, select bank0
  1993  07B6  082B               	movf	(1+(?___awdiv)),w
  1994  07B7  01D1               	clrf	(voltage@b+1)
  1995  07B8  07D1               	addwf	(voltage@b+1)
  1996  07B9  082A               	movf	(0+(?___awdiv)),w
  1997  07BA  01D0               	clrf	(voltage@b)
  1998  07BB  07D0               	addwf	(voltage@b)
  1999                           
  2000                           	line	145
  2001                           ;2 ADC.c: 145: c=d%10;
  2002  07BC  0853               	movf	(voltage@d+1),w
  2003  07BD  01A3               	clrf	(?___awmod+1)
  2004  07BE  07A3               	addwf	(?___awmod+1)
  2005  07BF  0852               	movf	(voltage@d),w
  2006  07C0  01A2               	clrf	(?___awmod)
  2007  07C1  07A2               	addwf	(?___awmod)
  2008                           
  2009  07C2  300A               	movlw	low(0Ah)
  2010  07C3  00A4               	movwf	0+(?___awmod)+02h
  2011  07C4  3000               	movlw	high(0Ah)
  2012  07C5  00A5               	movwf	(0+(?___awmod)+02h)+1
  2013  07C6  120A  158A  279E   	fcall	___awmod
              120A  118A         
  2014  07CB  1383               	bcf	status, 7	;select IRP bank0
  2015  07CC  1283               	bcf	status, 5	;RP0=0, select bank0
  2016  07CD  1303               	bcf	status, 6	;RP1=0, select bank0
  2017  07CE  0823               	movf	(1+(?___awmod)),w
  2018  07CF  01CD               	clrf	(voltage@c+1)
  2019  07D0  07CD               	addwf	(voltage@c+1)
  2020  07D1  0822               	movf	(0+(?___awmod)),w
  2021  07D2  01CC               	clrf	(voltage@c)
  2022  07D3  07CC               	addwf	(voltage@c)
  2023                           
  2024                           	line	147
  2025                           ;2 ADC.c: 147: data(a+48);
  2026  07D4  084E               	movf	(voltage@a),w
  2027  07D5  3E30               	addlw	030h
  2028  07D6  120A  158A  2768   	fcall	_data
              120A  118A         
  2029                           	line	148
  2030                           ;2 ADC.c: 148: data(0X2E);
  2031  07DB  302E               	movlw	(02Eh)
  2032  07DC  120A  158A  2768   	fcall	_data
              120A  118A         
  2033                           	line	149
  2034                           ;2 ADC.c: 149: data(b+48);
  2035  07E1  1283               	bcf	status, 5	;RP0=0, select bank0
  2036  07E2  1303               	bcf	status, 6	;RP1=0, select bank0
  2037  07E3  0850               	movf	(voltage@b),w
  2038  07E4  3E30               	addlw	030h
  2039  07E5  120A  158A  2768   	fcall	_data
              120A  118A         
  2040                           	line	150
  2041                           ;2 ADC.c: 150: data(c+48);
  2042  07EA  1283               	bcf	status, 5	;RP0=0, select bank0
  2043  07EB  1303               	bcf	status, 6	;RP1=0, select bank0
  2044  07EC  084C               	movf	(voltage@c),w
  2045  07ED  3E30               	addlw	030h
  2046  07EE  120A  158A  2768   	fcall	_data
              120A  118A         
  2047                           	line	151
  2048                           ;2 ADC.c: 151: data(0X20);
  2049  07F3  3020               	movlw	(020h)
  2050  07F4  120A  158A  2768   	fcall	_data
              120A  118A         
  2051                           	line	152
  2052                           ;2 ADC.c: 152: data(0X56);
  2053  07F9  3056               	movlw	(056h)
  2054  07FA  120A  158A  2768   	fcall	_data
              120A  118A         
  2055                           	
  2056  07FF                     l26:	
  2057  07FF  0008               	return
  2058                           	opt stack 0
  2059                           GLOBAL	__end_of_voltage
  2060  0800                     	__end_of_voltage:
  2061                           ; =============== function _voltage ends ============
  2062                           
  2063                           psect	text113,local,class=CODE,delta=2
  2064                           global __ptext113
  2065  020D                     __ptext113:
  2066                           	line	153
  2067                           	signat	_voltage,88
  2068                           	global	_adc1
  2069                           
  2070                           ; *************** function _adc1 *****************
  2071                           ; Defined at:
  2072                           ;		line 102 in file "C:\Users\gowth\Documents\PIC Programs\ADC\2 ADC\2 ADC.c"
  2073                           ; Parameters:    Size  Location     Type
  2074                           ;		None
  2075                           ; Auto vars:     Size  Location     Type
  2076                           ;		None
  2077                           ; Return value:  Size  Location     Type
  2078                           ;		None               void
  2079                           ; Registers used:
  2080                           ;		wreg, status,2, status,0, pclath, cstack
  2081                           ; Tracked objects:
  2082                           ;		On entry : 0/0
  2083                           ;		On exit  : 0/0
  2084                           ;		Unchanged: 0/0
  2085                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2086                           ;      Locals:         2       0       0       0       0
  2087                           ;      Temp:     2
  2088                           ;      Total:    2
  2089                           ; This function calls:
  2090                           ;		_count1
  2091                           ; This function is called by:
  2092                           ;		_main
  2093                           ; This function uses a non-reentrant model
  2094                           ; 
  2095                           psect	text113
  2096                           	file	"C:\Users\gowth\Documents\PIC Programs\ADC\2 ADC\2 ADC.c"
  2097                           	line	102
  2098                           	global	__size_of_adc1
  2099  008B                     	__size_of_adc1	equ	__end_of_adc1-_adc1
  2100                           ;2 ADC.c: 101: void adc1()
  2101                           ;2 ADC.c: 102: {
  2102                           	
  2103  020D                     _adc1:	
  2104                           	opt stack 7
  2105                           ; Regs used in _adc1: [wreg+status,2+status,0+pclath+cstack]
  2106                           	line	103
  2107                           	
  2108  020D                     l30001057:	
  2109                           ;2 ADC.c: 103: ADCON0=0X87; ADCON1=0X80;
  2110  020D  3087               	movlw	(087h)
  2111  020E  1283               	bcf	status, 5	;RP0=0, select bank0
  2112  020F  1303               	bcf	status, 6	;RP1=0, select bank0
  2113  0210  009F               	movwf	(31)	;volatile
  2114  0211  3080               	movlw	(080h)
  2115  0212  1683               	bsf	status, 5	;RP0=1, select bank1
  2116  0213  1303               	bcf	status, 6	;RP1=0, select bank1
  2117  0214  009F               	movwf	(159)^080h
  2118                           	
  2119  0215                     l19:	
  2120                           	line	104
  2121  0215  1283               	bcf	status, 5	;RP0=0, select bank0
  2122  0216  189F               	btfsc	(31),(1)&7	;volatile
  2123  0217  2A19               	goto	u1351
  2124  0218  2A1A               	goto	u1350
  2125  0219                     u1351:
  2126  0219  2A15               	goto	l19
  2127  021A                     u1350:
  2128                           	
  2129  021A                     l30001058:	
  2130                           	line	105
  2131                           ;2 ADC.c: 105: high=ADRESH; low=ADRESL;
  2132  021A  081E               	movf	(30),w	;volatile
  2133  021B  00F3               	movwf	(??_adc1+0+0)
  2134  021C  01F4               	clrf	(??_adc1+0+0+1)
  2135  021D  0873               	movf	0+(??_adc1+0+0),w
  2136  021E  00F7               	movwf	(_high)
  2137  021F  0874               	movf	1+(??_adc1+0+0),w
  2138  0220  00F8               	movwf	(_high+1)
  2139  0221  1683               	bsf	status, 5	;RP0=1, select bank1
  2140  0222  1303               	bcf	status, 6	;RP1=0, select bank1
  2141  0223  081E               	movf	(158)^080h,w	;volatile
  2142  0224  00F3               	movwf	(??_adc1+0+0)
  2143  0225  01F4               	clrf	(??_adc1+0+0+1)
  2144  0226  0873               	movf	0+(??_adc1+0+0),w
  2145  0227  1283               	bcf	status, 5	;RP0=0, select bank0
  2146  0228  1303               	bcf	status, 6	;RP1=0, select bank0
  2147  0229  00D4               	movwf	(_low)
  2148  022A  0874               	movf	1+(??_adc1+0+0),w
  2149  022B  00D5               	movwf	(_low+1)
  2150                           	
  2151  022C                     l30001059:	
  2152                           	line	107
  2153                           ;2 ADC.c: 107: if(high==0)
  2154  022C  0878               	movf	((_high+1)),w
  2155  022D  0477               	iorwf	((_high)),w
  2156  022E  1D03               	skipz
  2157  022F  2A31               	goto	u1361
  2158  0230  2A32               	goto	u1360
  2159  0231                     u1361:
  2160  0231  2A43               	goto	l30001062
  2161  0232                     u1360:
  2162                           	
  2163  0232                     l30001060:	
  2164                           	line	109
  2165                           ;2 ADC.c: 108: {
  2166                           ;2 ADC.c: 109: DV=low;
  2167  0232  0855               	movf	(_low+1),w
  2168  0233  01F6               	clrf	(_DV+1)
  2169  0234  07F6               	addwf	(_DV+1)
  2170  0235  0854               	movf	(_low),w
  2171  0236  01F5               	clrf	(_DV)
  2172  0237  07F5               	addwf	(_DV)
  2173                           
  2174                           	
  2175  0238                     l30001061:	
  2176                           	line	110
  2177                           ;2 ADC.c: 110: count1(DV);
  2178  0238  0876               	movf	(_DV+1),w
  2179  0239  01B7               	clrf	(?_count1+1)
  2180  023A  07B7               	addwf	(?_count1+1)
  2181  023B  0875               	movf	(_DV),w
  2182  023C  01B6               	clrf	(?_count1)
  2183  023D  07B6               	addwf	(?_count1)
  2184                           
  2185  023E  120A  118A  2323   	fcall	_count1
              120A  118A         
  2186                           	
  2187  0243                     l30001062:	
  2188                           	line	113
  2189                           ;2 ADC.c: 111: }
  2190                           ;2 ADC.c: 113: if(high==1)
  2191  0243  3001               	movlw	01h
  2192  0244  0677               	xorwf	(_high),w
  2193  0245  0478               	iorwf	(_high+1),w
  2194  0246  1D03               	skipz
  2195  0247  2A49               	goto	u1371
  2196  0248  2A4A               	goto	u1370
  2197  0249                     u1371:
  2198  0249  2A5F               	goto	l30001065
  2199  024A                     u1370:
  2200                           	
  2201  024A                     l30001063:	
  2202                           	line	115
  2203                           ;2 ADC.c: 114: {
  2204                           ;2 ADC.c: 115: DV=low+256;
  2205  024A  1283               	bcf	status, 5	;RP0=0, select bank0
  2206  024B  1303               	bcf	status, 6	;RP1=0, select bank0
  2207  024C  0854               	movf	(_low),w
  2208  024D  3E00               	addlw	low(0100h)
  2209  024E  00F5               	movwf	(_DV)
  2210  024F  0855               	movf	(_low+1),w
  2211  0250  1803               	skipnc
  2212  0251  3E01               	addlw	1
  2213  0252  3E01               	addlw	high(0100h)
  2214  0253  00F6               	movwf	1+(_DV)
  2215                           	
  2216  0254                     l30001064:	
  2217                           	line	116
  2218                           ;2 ADC.c: 116: count1(DV);
  2219  0254  0876               	movf	(_DV+1),w
  2220  0255  01B7               	clrf	(?_count1+1)
  2221  0256  07B7               	addwf	(?_count1+1)
  2222  0257  0875               	movf	(_DV),w
  2223  0258  01B6               	clrf	(?_count1)
  2224  0259  07B6               	addwf	(?_count1)
  2225                           
  2226  025A  120A  118A  2323   	fcall	_count1
              120A  118A         
  2227                           	
  2228  025F                     l30001065:	
  2229                           	line	119
  2230                           ;2 ADC.c: 117: }
  2231                           ;2 ADC.c: 119: if(high==2)
  2232  025F  3002               	movlw	02h
  2233  0260  0677               	xorwf	(_high),w
  2234  0261  0478               	iorwf	(_high+1),w
  2235  0262  1D03               	skipz
  2236  0263  2A65               	goto	u1381
  2237  0264  2A66               	goto	u1380
  2238  0265                     u1381:
  2239  0265  2A7B               	goto	l30001068
  2240  0266                     u1380:
  2241                           	
  2242  0266                     l30001066:	
  2243                           	line	121
  2244                           ;2 ADC.c: 120: {
  2245                           ;2 ADC.c: 121: DV=low+512;
  2246  0266  1283               	bcf	status, 5	;RP0=0, select bank0
  2247  0267  1303               	bcf	status, 6	;RP1=0, select bank0
  2248  0268  0854               	movf	(_low),w
  2249  0269  3E00               	addlw	low(0200h)
  2250  026A  00F5               	movwf	(_DV)
  2251  026B  0855               	movf	(_low+1),w
  2252  026C  1803               	skipnc
  2253  026D  3E01               	addlw	1
  2254  026E  3E02               	addlw	high(0200h)
  2255  026F  00F6               	movwf	1+(_DV)
  2256                           	
  2257  0270                     l30001067:	
  2258                           	line	122
  2259                           ;2 ADC.c: 122: count1(DV);
  2260  0270  0876               	movf	(_DV+1),w
  2261  0271  01B7               	clrf	(?_count1+1)
  2262  0272  07B7               	addwf	(?_count1+1)
  2263  0273  0875               	movf	(_DV),w
  2264  0274  01B6               	clrf	(?_count1)
  2265  0275  07B6               	addwf	(?_count1)
  2266                           
  2267  0276  120A  118A  2323   	fcall	_count1
              120A  118A         
  2268                           	
  2269  027B                     l30001068:	
  2270                           	line	125
  2271                           ;2 ADC.c: 123: }
  2272                           ;2 ADC.c: 125: if(high==3)
  2273  027B  3003               	movlw	03h
  2274  027C  0677               	xorwf	(_high),w
  2275  027D  0478               	iorwf	(_high+1),w
  2276  027E  1D03               	skipz
  2277  027F  2A81               	goto	u1391
  2278  0280  2A82               	goto	u1390
  2279  0281                     u1391:
  2280  0281  2A97               	goto	l18
  2281  0282                     u1390:
  2282                           	
  2283  0282                     l30001069:	
  2284                           	line	127
  2285                           ;2 ADC.c: 126: {
  2286                           ;2 ADC.c: 127: DV=low+768;
  2287  0282  1283               	bcf	status, 5	;RP0=0, select bank0
  2288  0283  1303               	bcf	status, 6	;RP1=0, select bank0
  2289  0284  0854               	movf	(_low),w
  2290  0285  3E00               	addlw	low(0300h)
  2291  0286  00F5               	movwf	(_DV)
  2292  0287  0855               	movf	(_low+1),w
  2293  0288  1803               	skipnc
  2294  0289  3E01               	addlw	1
  2295  028A  3E03               	addlw	high(0300h)
  2296  028B  00F6               	movwf	1+(_DV)
  2297                           	
  2298  028C                     l30001070:	
  2299                           	line	128
  2300                           ;2 ADC.c: 128: count1(DV);
  2301  028C  0876               	movf	(_DV+1),w
  2302  028D  01B7               	clrf	(?_count1+1)
  2303  028E  07B7               	addwf	(?_count1+1)
  2304  028F  0875               	movf	(_DV),w
  2305  0290  01B6               	clrf	(?_count1)
  2306  0291  07B6               	addwf	(?_count1)
  2307                           
  2308  0292  120A  118A  2323   	fcall	_count1
              120A  118A         
  2309                           	
  2310  0297                     l18:	
  2311  0297  0008               	return
  2312                           	opt stack 0
  2313                           GLOBAL	__end_of_adc1
  2314  0298                     	__end_of_adc1:
  2315                           ; =============== function _adc1 ends ============
  2316                           
  2317                           psect	text114,local,class=CODE,delta=2
  2318                           global __ptext114
  2319  061C                     __ptext114:
  2320                           	line	131
  2321                           	signat	_adc1,88
  2322                           	global	_voltage1
  2323                           
  2324                           ; *************** function _voltage1 *****************
  2325                           ; Defined at:
  2326                           ;		line 157 in file "C:\Users\gowth\Documents\PIC Programs\ADC\2 ADC\2 ADC.c"
  2327                           ; Parameters:    Size  Location     Type
  2328                           ;		None
  2329                           ; Auto vars:     Size  Location     Type
  2330                           ;  z               3   41[BANK0 ] float 
  2331                           ;  d               2   50[BANK0 ] int 
  2332                           ;  c               2   44[BANK0 ] int 
  2333                           ;  b               2   48[BANK0 ] int 
  2334                           ;  a               2   46[BANK0 ] int 
  2335                           ; Return value:  Size  Location     Type
  2336                           ;		None               void
  2337                           ; Registers used:
  2338                           ;		wreg, status,2, status,0, pclath, cstack
  2339                           ; Tracked objects:
  2340                           ;		On entry : 0/0
  2341                           ;		On exit  : 0/0
  2342                           ;		Unchanged: 0/0
  2343                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2344                           ;      Locals:         0      11       0       0       0
  2345                           ;      Temp:     0
  2346                           ;      Total:   11
  2347                           ; This function calls:
  2348                           ;		_command
  2349                           ;		___awtoft
  2350                           ;		___ftmul
  2351                           ;		___ftdiv
  2352                           ;		___fttol
  2353                           ;		___awdiv
  2354                           ;		___awmod
  2355                           ;		_data
  2356                           ; This function is called by:
  2357                           ;		_main
  2358                           ; This function uses a non-reentrant model
  2359                           ; 
  2360                           psect	text114
  2361                           	file	"C:\Users\gowth\Documents\PIC Programs\ADC\2 ADC\2 ADC.c"
  2362                           	line	157
  2363                           	global	__size_of_voltage1
  2364  00F2                     	__size_of_voltage1	equ	__end_of_voltage1-_voltage1
  2365                           ;2 ADC.c: 156: void voltage1()
  2366                           ;2 ADC.c: 157: {
  2367                           	
  2368  061C                     _voltage1:	
  2369                           	opt stack 7
  2370                           ; Regs used in _voltage1: [wreg+status,2+status,0+pclath+cstack]
  2371                           	line	158
  2372                           	
  2373  061C                     l30001161:	
  2374                           ;2 ADC.c: 158: command(0XC8);
  2375  061C  30C8               	movlw	(0C8h)
  2376  061D  120A  158A  275C   	fcall	_command
              120A  118A         
  2377                           	line	162
  2378                           ;2 ADC.c: 159: int a,b,c,d;
  2379                           ;2 ADC.c: 160: float z;
  2380                           ;2 ADC.c: 162: z=(DV*5.0)/1023.0;
  2381  0622  0876               	movf	(_DV+1),w
  2382  0623  1283               	bcf	status, 5	;RP0=0, select bank0
  2383  0624  1303               	bcf	status, 6	;RP1=0, select bank0
  2384  0625  01A7               	clrf	(?___awtoft+1)
  2385  0626  07A7               	addwf	(?___awtoft+1)
  2386  0627  0875               	movf	(_DV),w
  2387  0628  01A6               	clrf	(?___awtoft)
  2388  0629  07A6               	addwf	(?___awtoft)
  2389                           
  2390  062A  120A  118A  2003   	fcall	___awtoft
              120A  118A         
  2391  062F  1383               	bcf	status, 7	;select IRP bank0
  2392  0630  1283               	bcf	status, 5	;RP0=0, select bank0
  2393  0631  1303               	bcf	status, 6	;RP1=0, select bank0
  2394  0632  0826               	movf	(0+(?___awtoft)),w
  2395  0633  00B3               	movwf	(?___ftmul)
  2396  0634  0827               	movf	(1+(?___awtoft)),w
  2397  0635  00B4               	movwf	(?___ftmul+1)
  2398  0636  0828               	movf	(2+(?___awtoft)),w
  2399  0637  00B5               	movwf	(?___ftmul+2)
  2400  0638  3000               	movlw	0x0
  2401  0639  00B6               	movwf	0+(?___ftmul)+03h
  2402  063A  30A0               	movlw	0xa0
  2403  063B  00B7               	movwf	1+(?___ftmul)+03h
  2404  063C  3040               	movlw	0x40
  2405  063D  00B8               	movwf	2+(?___ftmul)+03h
  2406  063E  120A  118A  2540   	fcall	___ftmul
              120A  118A         
  2407  0643  1383               	bcf	status, 7	;select IRP bank0
  2408  0644  1283               	bcf	status, 5	;RP0=0, select bank0
  2409  0645  1303               	bcf	status, 6	;RP1=0, select bank0
  2410  0646  0833               	movf	(0+(?___ftmul)),w
  2411  0647  00C3               	movwf	(?___ftdiv)
  2412  0648  0834               	movf	(1+(?___ftmul)),w
  2413  0649  00C4               	movwf	(?___ftdiv+1)
  2414  064A  0835               	movf	(2+(?___ftmul)),w
  2415  064B  00C5               	movwf	(?___ftdiv+2)
  2416  064C  30C0               	movlw	0xc0
  2417  064D  00C6               	movwf	0+(?___ftdiv)+03h
  2418  064E  307F               	movlw	0x7f
  2419  064F  00C7               	movwf	1+(?___ftdiv)+03h
  2420  0650  3044               	movlw	0x44
  2421  0651  00C8               	movwf	2+(?___ftdiv)+03h
  2422  0652  120A  118A  2485   	fcall	___ftdiv
              120A  118A         
  2423  0657  1383               	bcf	status, 7	;select IRP bank0
  2424  0658  1283               	bcf	status, 5	;RP0=0, select bank0
  2425  0659  1303               	bcf	status, 6	;RP1=0, select bank0
  2426  065A  0843               	movf	(0+(?___ftdiv)),w
  2427  065B  00C9               	movwf	(voltage1@z)
  2428  065C  0844               	movf	(1+(?___ftdiv)),w
  2429  065D  00CA               	movwf	(voltage1@z+1)
  2430  065E  0845               	movf	(2+(?___ftdiv)),w
  2431  065F  00CB               	movwf	(voltage1@z+2)
  2432                           	line	164
  2433                           ;2 ADC.c: 164: d=z*100;
  2434  0660  0849               	movf	(voltage1@z),w
  2435  0661  00B3               	movwf	(?___ftmul)
  2436  0662  084A               	movf	(voltage1@z+1),w
  2437  0663  00B4               	movwf	(?___ftmul+1)
  2438  0664  084B               	movf	(voltage1@z+2),w
  2439  0665  00B5               	movwf	(?___ftmul+2)
  2440  0666  3000               	movlw	0x0
  2441  0667  00B6               	movwf	0+(?___ftmul)+03h
  2442  0668  30C8               	movlw	0xc8
  2443  0669  00B7               	movwf	1+(?___ftmul)+03h
  2444  066A  3042               	movlw	0x42
  2445  066B  00B8               	movwf	2+(?___ftmul)+03h
  2446  066C  120A  118A  2540   	fcall	___ftmul
              120A  118A         
  2447  0671  1383               	bcf	status, 7	;select IRP bank0
  2448  0672  1283               	bcf	status, 5	;RP0=0, select bank0
  2449  0673  1303               	bcf	status, 6	;RP1=0, select bank0
  2450  0674  0833               	movf	(0+(?___ftmul)),w
  2451  0675  00C2               	movwf	(?___fttol)
  2452  0676  0834               	movf	(1+(?___ftmul)),w
  2453  0677  00C3               	movwf	(?___fttol+1)
  2454  0678  0835               	movf	(2+(?___ftmul)),w
  2455  0679  00C4               	movwf	(?___fttol+2)
  2456  067A  120A  118A  2186   	fcall	___fttol
              120A  118A         
  2457  067F  1383               	bcf	status, 7	;select IRP bank0
  2458  0680  1283               	bcf	status, 5	;RP0=0, select bank0
  2459  0681  1303               	bcf	status, 6	;RP1=0, select bank0
  2460  0682  0843               	movf	(1+(?___fttol)),w
  2461  0683  01D3               	clrf	(voltage1@d+1)
  2462  0684  07D3               	addwf	(voltage1@d+1)
  2463  0685  0842               	movf	(0+(?___fttol)),w
  2464  0686  01D2               	clrf	(voltage1@d)
  2465  0687  07D2               	addwf	(voltage1@d)
  2466                           
  2467                           	line	165
  2468                           ;2 ADC.c: 165: a=d/100;
  2469  0688  0853               	movf	(voltage1@d+1),w
  2470  0689  01AB               	clrf	(?___awdiv+1)
  2471  068A  07AB               	addwf	(?___awdiv+1)
  2472  068B  0852               	movf	(voltage1@d),w
  2473  068C  01AA               	clrf	(?___awdiv)
  2474  068D  07AA               	addwf	(?___awdiv)
  2475                           
  2476  068E  3064               	movlw	low(064h)
  2477  068F  00AC               	movwf	0+(?___awdiv)+02h
  2478  0690  3000               	movlw	high(064h)
  2479  0691  00AD               	movwf	(0+(?___awdiv)+02h)+1
  2480  0692  120A  118A  2098   	fcall	___awdiv
              120A  118A         
  2481  0697  1383               	bcf	status, 7	;select IRP bank0
  2482  0698  1283               	bcf	status, 5	;RP0=0, select bank0
  2483  0699  1303               	bcf	status, 6	;RP1=0, select bank0
  2484  069A  082B               	movf	(1+(?___awdiv)),w
  2485  069B  01CF               	clrf	(voltage1@a+1)
  2486  069C  07CF               	addwf	(voltage1@a+1)
  2487  069D  082A               	movf	(0+(?___awdiv)),w
  2488  069E  01CE               	clrf	(voltage1@a)
  2489  069F  07CE               	addwf	(voltage1@a)
  2490                           
  2491                           	line	166
  2492                           ;2 ADC.c: 166: b=(d%100)/10;
  2493  06A0  0853               	movf	(voltage1@d+1),w
  2494  06A1  01A3               	clrf	(?___awmod+1)
  2495  06A2  07A3               	addwf	(?___awmod+1)
  2496  06A3  0852               	movf	(voltage1@d),w
  2497  06A4  01A2               	clrf	(?___awmod)
  2498  06A5  07A2               	addwf	(?___awmod)
  2499                           
  2500  06A6  3064               	movlw	low(064h)
  2501  06A7  00A4               	movwf	0+(?___awmod)+02h
  2502  06A8  3000               	movlw	high(064h)
  2503  06A9  00A5               	movwf	(0+(?___awmod)+02h)+1
  2504  06AA  120A  158A  279E   	fcall	___awmod
              120A  118A         
  2505  06AF  1383               	bcf	status, 7	;select IRP bank0
  2506  06B0  1283               	bcf	status, 5	;RP0=0, select bank0
  2507  06B1  1303               	bcf	status, 6	;RP1=0, select bank0
  2508  06B2  0823               	movf	(1+(?___awmod)),w
  2509  06B3  01AB               	clrf	(?___awdiv+1)
  2510  06B4  07AB               	addwf	(?___awdiv+1)
  2511  06B5  0822               	movf	(0+(?___awmod)),w
  2512  06B6  01AA               	clrf	(?___awdiv)
  2513  06B7  07AA               	addwf	(?___awdiv)
  2514                           
  2515  06B8  300A               	movlw	low(0Ah)
  2516  06B9  00AC               	movwf	0+(?___awdiv)+02h
  2517  06BA  3000               	movlw	high(0Ah)
  2518  06BB  00AD               	movwf	(0+(?___awdiv)+02h)+1
  2519  06BC  120A  118A  2098   	fcall	___awdiv
              120A  118A         
  2520  06C1  1383               	bcf	status, 7	;select IRP bank0
  2521  06C2  1283               	bcf	status, 5	;RP0=0, select bank0
  2522  06C3  1303               	bcf	status, 6	;RP1=0, select bank0
  2523  06C4  082B               	movf	(1+(?___awdiv)),w
  2524  06C5  01D1               	clrf	(voltage1@b+1)
  2525  06C6  07D1               	addwf	(voltage1@b+1)
  2526  06C7  082A               	movf	(0+(?___awdiv)),w
  2527  06C8  01D0               	clrf	(voltage1@b)
  2528  06C9  07D0               	addwf	(voltage1@b)
  2529                           
  2530                           	line	167
  2531                           ;2 ADC.c: 167: c=d%10;
  2532  06CA  0853               	movf	(voltage1@d+1),w
  2533  06CB  01A3               	clrf	(?___awmod+1)
  2534  06CC  07A3               	addwf	(?___awmod+1)
  2535  06CD  0852               	movf	(voltage1@d),w
  2536  06CE  01A2               	clrf	(?___awmod)
  2537  06CF  07A2               	addwf	(?___awmod)
  2538                           
  2539  06D0  300A               	movlw	low(0Ah)
  2540  06D1  00A4               	movwf	0+(?___awmod)+02h
  2541  06D2  3000               	movlw	high(0Ah)
  2542  06D3  00A5               	movwf	(0+(?___awmod)+02h)+1
  2543  06D4  120A  158A  279E   	fcall	___awmod
              120A  118A         
  2544  06D9  1383               	bcf	status, 7	;select IRP bank0
  2545  06DA  1283               	bcf	status, 5	;RP0=0, select bank0
  2546  06DB  1303               	bcf	status, 6	;RP1=0, select bank0
  2547  06DC  0823               	movf	(1+(?___awmod)),w
  2548  06DD  01CD               	clrf	(voltage1@c+1)
  2549  06DE  07CD               	addwf	(voltage1@c+1)
  2550  06DF  0822               	movf	(0+(?___awmod)),w
  2551  06E0  01CC               	clrf	(voltage1@c)
  2552  06E1  07CC               	addwf	(voltage1@c)
  2553                           
  2554                           	line	169
  2555                           ;2 ADC.c: 169: data(a+48);
  2556  06E2  084E               	movf	(voltage1@a),w
  2557  06E3  3E30               	addlw	030h
  2558  06E4  120A  158A  2768   	fcall	_data
              120A  118A         
  2559                           	line	170
  2560                           ;2 ADC.c: 170: data(0X2E);
  2561  06E9  302E               	movlw	(02Eh)
  2562  06EA  120A  158A  2768   	fcall	_data
              120A  118A         
  2563                           	line	171
  2564                           ;2 ADC.c: 171: data(b+48);
  2565  06EF  1283               	bcf	status, 5	;RP0=0, select bank0
  2566  06F0  1303               	bcf	status, 6	;RP1=0, select bank0
  2567  06F1  0850               	movf	(voltage1@b),w
  2568  06F2  3E30               	addlw	030h
  2569  06F3  120A  158A  2768   	fcall	_data
              120A  118A         
  2570                           	line	172
  2571                           ;2 ADC.c: 172: data(c+48);
  2572  06F8  1283               	bcf	status, 5	;RP0=0, select bank0
  2573  06F9  1303               	bcf	status, 6	;RP1=0, select bank0
  2574  06FA  084C               	movf	(voltage1@c),w
  2575  06FB  3E30               	addlw	030h
  2576  06FC  120A  158A  2768   	fcall	_data
              120A  118A         
  2577                           	line	173
  2578                           ;2 ADC.c: 173: data(0X20);
  2579  0701  3020               	movlw	(020h)
  2580  0702  120A  158A  2768   	fcall	_data
              120A  118A         
  2581                           	line	174
  2582                           ;2 ADC.c: 174: data(0X56);
  2583  0707  3056               	movlw	(056h)
  2584  0708  120A  158A  2768   	fcall	_data
              120A  118A         
  2585                           	
  2586  070D                     l27:	
  2587  070D  0008               	return
  2588                           	opt stack 0
  2589                           GLOBAL	__end_of_voltage1
  2590  070E                     	__end_of_voltage1:
  2591                           ; =============== function _voltage1 ends ============
  2592                           
  2593                           psect	text115,local,class=CODE,delta=2
  2594                           global __ptext115
  2595  0540                     __ptext115:
  2596                           	line	175
  2597                           	signat	_voltage1,88
  2598                           	global	___ftmul
  2599                           
  2600                           ; *************** function ___ftmul *****************
  2601                           ; Defined at:
  2602                           ;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.70\sources\ftmul.c"
  2603                           ; Parameters:    Size  Location     Type
  2604                           ;  f1              3   19[BANK0 ] float 
  2605                           ;  f2              3   22[BANK0 ] float 
  2606                           ; Auto vars:     Size  Location     Type
  2607                           ;  f3_as_produc    3   14[BANK0 ] unsigned um
  2608                           ;  sign            1   18[BANK0 ] unsigned char 
  2609                           ;  cntr            1   17[BANK0 ] unsigned char 
  2610                           ;  exp             1   13[BANK0 ] unsigned char 
  2611                           ; Return value:  Size  Location     Type
  2612                           ;                  3   19[BANK0 ] float 
  2613                           ; Registers used:
  2614                           ;		wreg, status,2, status,0, pclath, cstack
  2615                           ; Tracked objects:
  2616                           ;		On entry : 0/0
  2617                           ;		On exit  : 0/0
  2618                           ;		Unchanged: 0/0
  2619                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2620                           ;      Locals:         0      16       0       0       0
  2621                           ;      Temp:     4
  2622                           ;      Total:   16
  2623                           ; This function calls:
  2624                           ;		___ftpack
  2625                           ; This function is called by:
  2626                           ;		_voltage
  2627                           ;		_voltage1
  2628                           ; This function uses a non-reentrant model
  2629                           ; 
  2630                           psect	text115
  2631                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.70\sources\ftmul.c"
  2632                           	line	52
  2633                           	global	__size_of___ftmul
  2634  00DC                     	__size_of___ftmul	equ	__end_of___ftmul-___ftmul
  2635                           	
  2636  0540                     ___ftmul:	
  2637                           	opt stack 6
  2638                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2639                           	line	56
  2640                           	
  2641  0540                     l30001119:	
  2642  0540  1283               	bcf	status, 5	;RP0=0, select bank0
  2643  0541  1303               	bcf	status, 6	;RP1=0, select bank0
  2644  0542  0833               	movf	(___ftmul@f1),w
  2645  0543  00A9               	movwf	(??___ftmul+0+0)
  2646  0544  0834               	movf	(___ftmul@f1+1),w
  2647  0545  00AA               	movwf	(??___ftmul+0+0+1)
  2648  0546  0835               	movf	(___ftmul@f1+2),w
  2649  0547  00AB               	movwf	(??___ftmul+0+0+2)
  2650  0548  1003               	clrc
  2651  0549  0D2A               	rlf	(??___ftmul+0+1),w
  2652  054A  0D2B               	rlf	(??___ftmul+0+2),w
  2653  054B  00AD               	movwf	(___ftmul@exp)
  2654  054C  08AD               	movf	((___ftmul@exp))&07fh,f
  2655  054D  1D03               	skipz
  2656  054E  2D50               	goto	u1511
  2657  054F  2D51               	goto	u1510
  2658  0550                     u1511:
  2659  0550  2D58               	goto	l30001122
  2660  0551                     u1510:
  2661                           	
  2662  0551                     l30001120:	
  2663                           	line	57
  2664  0551  3000               	movlw	0x0
  2665  0552  00B3               	movwf	(?___ftmul)
  2666  0553  3000               	movlw	0x0
  2667  0554  00B4               	movwf	(?___ftmul+1)
  2668  0555  3000               	movlw	0x0
  2669  0556  00B5               	movwf	(?___ftmul+2)
  2670  0557  2E1B               	goto	l110
  2671                           	
  2672  0558                     l30001122:	
  2673                           	line	58
  2674  0558  0836               	movf	(___ftmul@f2),w
  2675  0559  00A9               	movwf	(??___ftmul+0+0)
  2676  055A  0837               	movf	(___ftmul@f2+1),w
  2677  055B  00AA               	movwf	(??___ftmul+0+0+1)
  2678  055C  0838               	movf	(___ftmul@f2+2),w
  2679  055D  00AB               	movwf	(??___ftmul+0+0+2)
  2680  055E  1003               	clrc
  2681  055F  0D2A               	rlf	(??___ftmul+0+1),w
  2682  0560  0D2B               	rlf	(??___ftmul+0+2),w
  2683  0561  00B2               	movwf	(___ftmul@sign)
  2684  0562  08B2               	movf	((___ftmul@sign))&07fh,f
  2685  0563  1D03               	skipz
  2686  0564  2D66               	goto	u1521
  2687  0565  2D67               	goto	u1520
  2688  0566                     u1521:
  2689  0566  2D6E               	goto	l30001125
  2690  0567                     u1520:
  2691                           	
  2692  0567                     l30001123:	
  2693                           	line	59
  2694  0567  3000               	movlw	0x0
  2695  0568  00B3               	movwf	(?___ftmul)
  2696  0569  3000               	movlw	0x0
  2697  056A  00B4               	movwf	(?___ftmul+1)
  2698  056B  3000               	movlw	0x0
  2699  056C  00B5               	movwf	(?___ftmul+2)
  2700  056D  2E1B               	goto	l110
  2701                           	
  2702  056E                     l30001125:	
  2703                           	line	60
  2704  056E  0832               	movf	(___ftmul@sign),w
  2705  056F  3E7B               	addlw	07Bh
  2706  0570  00A9               	movwf	(??___ftmul+0+0)
  2707  0571  0829               	movf	(??___ftmul+0+0),w
  2708  0572  07AD               	addwf	(___ftmul@exp),f
  2709                           	line	61
  2710  0573  0833               	movf	(___ftmul@f1),w
  2711  0574  00A9               	movwf	(??___ftmul+0+0)
  2712  0575  0834               	movf	(___ftmul@f1+1),w
  2713  0576  00AA               	movwf	(??___ftmul+0+0+1)
  2714  0577  0835               	movf	(___ftmul@f1+2),w
  2715  0578  00AB               	movwf	(??___ftmul+0+0+2)
  2716  0579  3010               	movlw	010h
  2717  057A                     u1535:
  2718  057A  1003               	clrc
  2719  057B  0CAB               	rrf	(??___ftmul+0+2),f
  2720  057C  0CAA               	rrf	(??___ftmul+0+1),f
  2721  057D  0CA9               	rrf	(??___ftmul+0+0),f
  2722  057E                     u1530:
  2723  057E  3EFF               	addlw	-1
  2724  057F  1D03               	skipz
  2725  0580  2D7A               	goto	u1535
  2726  0581  0829               	movf	0+(??___ftmul+0+0),w
  2727  0582  00B2               	movwf	(___ftmul@sign)
  2728                           	line	62
  2729  0583  0836               	movf	(___ftmul@f2),w
  2730  0584  00A9               	movwf	(??___ftmul+0+0)
  2731  0585  0837               	movf	(___ftmul@f2+1),w
  2732  0586  00AA               	movwf	(??___ftmul+0+0+1)
  2733  0587  0838               	movf	(___ftmul@f2+2),w
  2734  0588  00AB               	movwf	(??___ftmul+0+0+2)
  2735  0589  3010               	movlw	010h
  2736  058A                     u1545:
  2737  058A  1003               	clrc
  2738  058B  0CAB               	rrf	(??___ftmul+0+2),f
  2739  058C  0CAA               	rrf	(??___ftmul+0+1),f
  2740  058D  0CA9               	rrf	(??___ftmul+0+0),f
  2741  058E                     u1540:
  2742  058E  3EFF               	addlw	-1
  2743  058F  1D03               	skipz
  2744  0590  2D8A               	goto	u1545
  2745  0591  0829               	movf	0+(??___ftmul+0+0),w
  2746  0592  00AC               	movwf	(??___ftmul+3+0)
  2747  0593  082C               	movf	(??___ftmul+3+0),w
  2748  0594  06B2               	xorwf	(___ftmul@sign),f
  2749                           	line	63
  2750  0595  3080               	movlw	(080h)
  2751  0596  00A9               	movwf	(??___ftmul+0+0)
  2752  0597  0829               	movf	(??___ftmul+0+0),w
  2753  0598  05B2               	andwf	(___ftmul@sign),f
  2754                           	
  2755  0599                     l30001126:	
  2756                           	line	64
  2757  0599  17B4               	bsf	(___ftmul@f1)+(15/8),(15)&7
  2758                           	
  2759  059A                     l30001127:	
  2760                           	line	66
  2761  059A  17B7               	bsf	(___ftmul@f2)+(15/8),(15)&7
  2762                           	
  2763  059B                     l30001128:	
  2764                           	line	67
  2765  059B  30FF               	movlw	0FFh
  2766  059C  05B6               	andwf	(___ftmul@f2),f
  2767  059D  30FF               	movlw	0FFh
  2768  059E  05B7               	andwf	(___ftmul@f2+1),f
  2769  059F  3000               	movlw	0
  2770  05A0  05B8               	andwf	(___ftmul@f2+2),f
  2771                           	
  2772  05A1                     l30001129:	
  2773                           	line	68
  2774  05A1  3000               	movlw	0
  2775  05A2  00AE               	movwf	(___ftmul@f3_as_product)
  2776  05A3  3000               	movlw	0
  2777  05A4  00AF               	movwf	(___ftmul@f3_as_product+1)
  2778  05A5  3000               	movlw	0
  2779  05A6  00B0               	movwf	(___ftmul@f3_as_product+2)
  2780                           	
  2781  05A7                     l30001130:	
  2782                           	line	69
  2783  05A7  3007               	movlw	(07h)
  2784  05A8  00B1               	movwf	(___ftmul@cntr)
  2785                           	
  2786  05A9                     l30001131:	
  2787                           	line	71
  2788  05A9  1C33               	btfss	(___ftmul@f1),(0)&7
  2789  05AA  2DAC               	goto	u1551
  2790  05AB  2DAD               	goto	u1550
  2791  05AC                     u1551:
  2792  05AC  2DBD               	goto	l30001133
  2793  05AD                     u1550:
  2794                           	
  2795  05AD                     l30001132:	
  2796                           	line	72
  2797  05AD  0836               	movf	(___ftmul@f2),w
  2798  05AE  07AE               	addwf	(___ftmul@f3_as_product),f
  2799  05AF  0837               	movf	(___ftmul@f2+1),w
  2800  05B0  1103               	clrz
  2801  05B1  1803               	skipnc
  2802  05B2  0A37               	incf	(___ftmul@f2+1),w
  2803  05B3  1903               	skipnz
  2804  05B4  2DB6               	goto	u1561
  2805  05B5  07AF               	addwf	(___ftmul@f3_as_product+1),f
  2806  05B6                     u1561:
  2807  05B6  0838               	movf	(___ftmul@f2+2),w
  2808  05B7  1103               	clrz
  2809  05B8  1803               	skipnc
  2810  05B9  0A38               	incf	(___ftmul@f2+2),w
  2811  05BA  1903               	skipnz
  2812  05BB  2DBD               	goto	u1562
  2813  05BC  07B0               	addwf	(___ftmul@f3_as_product+2),f
  2814  05BD                     u1562:
  2815                           
  2816                           	
  2817  05BD                     l30001133:	
  2818                           	line	73
  2819  05BD  3001               	movlw	01h
  2820  05BE                     u1575:
  2821  05BE  1003               	clrc
  2822  05BF  0CB5               	rrf	(___ftmul@f1+2),f
  2823  05C0  0CB4               	rrf	(___ftmul@f1+1),f
  2824  05C1  0CB3               	rrf	(___ftmul@f1),f
  2825  05C2  3EFF               	addlw	-1
  2826  05C3  1D03               	skipz
  2827  05C4  2DBE               	goto	u1575
  2828                           
  2829                           	
  2830  05C5                     l30001134:	
  2831                           	line	74
  2832  05C5  3001               	movlw	01h
  2833  05C6                     u1585:
  2834  05C6  1003               	clrc
  2835  05C7  0DB6               	rlf	(___ftmul@f2),f
  2836  05C8  0DB7               	rlf	(___ftmul@f2+1),f
  2837  05C9  0DB8               	rlf	(___ftmul@f2+2),f
  2838  05CA  3EFF               	addlw	-1
  2839  05CB  1D03               	skipz
  2840  05CC  2DC6               	goto	u1585
  2841                           	
  2842  05CD                     l30001135:	
  2843                           	line	75
  2844  05CD  3001               	movlw	low(01h)
  2845  05CE  02B1               	subwf	(___ftmul@cntr),f
  2846  05CF  1D03               	btfss	status,2
  2847  05D0  2DD2               	goto	u1591
  2848  05D1  2DD3               	goto	u1590
  2849  05D2                     u1591:
  2850  05D2  2DA9               	goto	l30001131
  2851  05D3                     u1590:
  2852                           	
  2853  05D3                     l30001136:	
  2854                           	line	76
  2855  05D3  3009               	movlw	(09h)
  2856  05D4  00B1               	movwf	(___ftmul@cntr)
  2857                           	
  2858  05D5                     l30001137:	
  2859                           	line	78
  2860  05D5  1C33               	btfss	(___ftmul@f1),(0)&7
  2861  05D6  2DD8               	goto	u1601
  2862  05D7  2DD9               	goto	u1600
  2863  05D8                     u1601:
  2864  05D8  2DE9               	goto	l30001139
  2865  05D9                     u1600:
  2866                           	
  2867  05D9                     l30001138:	
  2868                           	line	79
  2869  05D9  0836               	movf	(___ftmul@f2),w
  2870  05DA  07AE               	addwf	(___ftmul@f3_as_product),f
  2871  05DB  0837               	movf	(___ftmul@f2+1),w
  2872  05DC  1103               	clrz
  2873  05DD  1803               	skipnc
  2874  05DE  0A37               	incf	(___ftmul@f2+1),w
  2875  05DF  1903               	skipnz
  2876  05E0  2DE2               	goto	u1611
  2877  05E1  07AF               	addwf	(___ftmul@f3_as_product+1),f
  2878  05E2                     u1611:
  2879  05E2  0838               	movf	(___ftmul@f2+2),w
  2880  05E3  1103               	clrz
  2881  05E4  1803               	skipnc
  2882  05E5  0A38               	incf	(___ftmul@f2+2),w
  2883  05E6  1903               	skipnz
  2884  05E7  2DE9               	goto	u1612
  2885  05E8  07B0               	addwf	(___ftmul@f3_as_product+2),f
  2886  05E9                     u1612:
  2887                           
  2888                           	
  2889  05E9                     l30001139:	
  2890                           	line	80
  2891  05E9  3001               	movlw	01h
  2892  05EA                     u1625:
  2893  05EA  1003               	clrc
  2894  05EB  0CB5               	rrf	(___ftmul@f1+2),f
  2895  05EC  0CB4               	rrf	(___ftmul@f1+1),f
  2896  05ED  0CB3               	rrf	(___ftmul@f1),f
  2897  05EE  3EFF               	addlw	-1
  2898  05EF  1D03               	skipz
  2899  05F0  2DEA               	goto	u1625
  2900                           
  2901                           	
  2902  05F1                     l30001140:	
  2903                           	line	81
  2904  05F1  3001               	movlw	01h
  2905  05F2                     u1635:
  2906  05F2  1003               	clrc
  2907  05F3  0CB0               	rrf	(___ftmul@f3_as_product+2),f
  2908  05F4  0CAF               	rrf	(___ftmul@f3_as_product+1),f
  2909  05F5  0CAE               	rrf	(___ftmul@f3_as_product),f
  2910  05F6  3EFF               	addlw	-1
  2911  05F7  1D03               	skipz
  2912  05F8  2DF2               	goto	u1635
  2913                           
  2914                           	
  2915  05F9                     l30001141:	
  2916                           	line	82
  2917  05F9  3001               	movlw	low(01h)
  2918  05FA  02B1               	subwf	(___ftmul@cntr),f
  2919  05FB  1D03               	btfss	status,2
  2920  05FC  2DFE               	goto	u1641
  2921  05FD  2DFF               	goto	u1640
  2922  05FE                     u1641:
  2923  05FE  2DD5               	goto	l30001137
  2924  05FF                     u1640:
  2925                           	
  2926  05FF                     l30001142:	
  2927                           	line	83
  2928  05FF  082E               	movf	(___ftmul@f3_as_product),w
  2929  0600  00A0               	movwf	(?___ftpack)
  2930  0601  082F               	movf	(___ftmul@f3_as_product+1),w
  2931  0602  00A1               	movwf	(?___ftpack+1)
  2932  0603  0830               	movf	(___ftmul@f3_as_product+2),w
  2933  0604  00A2               	movwf	(?___ftpack+2)
  2934  0605  082D               	movf	(___ftmul@exp),w
  2935  0606  00A9               	movwf	(??___ftmul+0+0)
  2936  0607  0829               	movf	(??___ftmul+0+0),w
  2937  0608  00A3               	movwf	0+(?___ftpack)+03h
  2938  0609  0832               	movf	(___ftmul@sign),w
  2939  060A  00AA               	movwf	(??___ftmul+1+0)
  2940  060B  082A               	movf	(??___ftmul+1+0),w
  2941  060C  00A4               	movwf	0+(?___ftpack)+04h
  2942  060D  120A  118A  210A   	fcall	___ftpack
              120A  118A         
  2943  0612  1383               	bcf	status, 7	;select IRP bank0
  2944  0613  1283               	bcf	status, 5	;RP0=0, select bank0
  2945  0614  1303               	bcf	status, 6	;RP1=0, select bank0
  2946  0615  0820               	movf	(0+(?___ftpack)),w
  2947  0616  00B3               	movwf	(?___ftmul)
  2948  0617  0821               	movf	(1+(?___ftpack)),w
  2949  0618  00B4               	movwf	(?___ftmul+1)
  2950  0619  0822               	movf	(2+(?___ftpack)),w
  2951  061A  00B5               	movwf	(?___ftmul+2)
  2952                           	
  2953  061B                     l110:	
  2954  061B  0008               	return
  2955                           	opt stack 0
  2956                           GLOBAL	__end_of___ftmul
  2957  061C                     	__end_of___ftmul:
  2958                           ; =============== function ___ftmul ends ============
  2959                           
  2960                           psect	text116,local,class=CODE,delta=2
  2961                           global __ptext116
  2962  0003                     __ptext116:
  2963                           	line	84
  2964                           	signat	___ftmul,8315
  2965                           	global	___awtoft
  2966                           
  2967                           ; *************** function ___awtoft *****************
  2968                           ; Defined at:
  2969                           ;		line 33 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.70\sources\awtoft.c"
  2970                           ; Parameters:    Size  Location     Type
  2971                           ;  c               2    6[BANK0 ] int 
  2972                           ; Auto vars:     Size  Location     Type
  2973                           ;  sign            1    5[BANK0 ] unsigned char 
  2974                           ; Return value:  Size  Location     Type
  2975                           ;                  3    6[BANK0 ] float 
  2976                           ; Registers used:
  2977                           ;		wreg, status,2, status,0, pclath, cstack
  2978                           ; Tracked objects:
  2979                           ;		On entry : 0/0
  2980                           ;		On exit  : 0/0
  2981                           ;		Unchanged: 0/0
  2982                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2983                           ;      Locals:         2       4       0       0       0
  2984                           ;      Temp:     2
  2985                           ;      Total:    6
  2986                           ; This function calls:
  2987                           ;		___ftpack
  2988                           ; This function is called by:
  2989                           ;		_voltage
  2990                           ;		_voltage1
  2991                           ; This function uses a non-reentrant model
  2992                           ; 
  2993                           psect	text116
  2994                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.70\sources\awtoft.c"
  2995                           	line	33
  2996                           	global	__size_of___awtoft
  2997  002F                     	__size_of___awtoft	equ	__end_of___awtoft-___awtoft
  2998                           	
  2999  0003                     ___awtoft:	
  3000                           	opt stack 6
  3001                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  3002                           	line	36
  3003                           	
  3004  0003                     l30001018:	
  3005  0003  1003               	clrc
  3006  0004  3000               	movlw	0
  3007  0005  1803               	btfsc	status,0
  3008  0006  3001               	movlw	1
  3009  0007  1283               	bcf	status, 5	;RP0=0, select bank0
  3010  0008  1303               	bcf	status, 6	;RP1=0, select bank0
  3011  0009  00A5               	movwf	(___awtoft@sign)
  3012                           	
  3013  000A                     l30001019:	
  3014                           	line	37
  3015  000A  1FA7               	btfss	(___awtoft@c+1),7
  3016  000B  280D               	goto	u1201
  3017  000C  280E               	goto	u1200
  3018  000D                     u1201:
  3019  000D  2816               	goto	l30001021
  3020  000E                     u1200:
  3021                           	
  3022  000E                     l30001020:	
  3023                           	line	38
  3024  000E  09A6               	comf	(___awtoft@c),f
  3025  000F  09A7               	comf	(___awtoft@c+1),f
  3026  0010  0AA6               	incf	(___awtoft@c),f
  3027  0011  1903               	skipnz
  3028  0012  0AA7               	incf	(___awtoft@c+1),f
  3029                           	line	39
  3030  0013  01A5               	clrf	(___awtoft@sign)
  3031  0014  1403               	bsf	status,0
  3032  0015  0DA5               	rlf	(___awtoft@sign),f
  3033                           	
  3034  0016                     l30001021:	
  3035                           	line	41
  3036  0016  0826               	movf	(___awtoft@c),w
  3037  0017  00A0               	movwf	(?___ftpack)
  3038  0018  0827               	movf	(___awtoft@c+1),w
  3039  0019  00A1               	movwf	(?___ftpack+1)
  3040  001A  01A2               	clrf	(?___ftpack+2)
  3041  001B  308E               	movlw	(08Eh)
  3042  001C  00F3               	movwf	(??___awtoft+0+0)
  3043  001D  0873               	movf	(??___awtoft+0+0),w
  3044  001E  00A3               	movwf	0+(?___ftpack)+03h
  3045  001F  0825               	movf	(___awtoft@sign),w
  3046  0020  00F4               	movwf	(??___awtoft+1+0)
  3047  0021  0874               	movf	(??___awtoft+1+0),w
  3048  0022  00A4               	movwf	0+(?___ftpack)+04h
  3049  0023  120A  118A  210A   	fcall	___ftpack
              120A  118A         
  3050  0028  1383               	bcf	status, 7	;select IRP bank0
  3051  0029  1283               	bcf	status, 5	;RP0=0, select bank0
  3052  002A  1303               	bcf	status, 6	;RP1=0, select bank0
  3053  002B  0820               	movf	(0+(?___ftpack)),w
  3054  002C  00A6               	movwf	(?___awtoft)
  3055  002D  0821               	movf	(1+(?___ftpack)),w
  3056  002E  00A7               	movwf	(?___awtoft+1)
  3057  002F  0822               	movf	(2+(?___ftpack)),w
  3058  0030  00A8               	movwf	(?___awtoft+2)
  3059                           	
  3060  0031                     l179:	
  3061  0031  0008               	return
  3062                           	opt stack 0
  3063                           GLOBAL	__end_of___awtoft
  3064  0032                     	__end_of___awtoft:
  3065                           ; =============== function ___awtoft ends ============
  3066                           
  3067                           psect	text117,local,class=CODE,delta=2
  3068                           global __ptext117
  3069  0485                     __ptext117:
  3070                           	line	42
  3071                           	signat	___awtoft,4219
  3072                           	global	___ftdiv
  3073                           
  3074                           ; *************** function ___ftdiv *****************
  3075                           ; Defined at:
  3076                           ;		line 50 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.70\sources\ftdiv.c"
  3077                           ; Parameters:    Size  Location     Type
  3078                           ;  f1              3   35[BANK0 ] float 
  3079                           ;  f2              3   38[BANK0 ] float 
  3080                           ; Auto vars:     Size  Location     Type
  3081                           ;  f3              3   30[BANK0 ] float 
  3082                           ;  sign            1   34[BANK0 ] unsigned char 
  3083                           ;  exp             1   33[BANK0 ] unsigned char 
  3084                           ;  cntr            1   29[BANK0 ] unsigned char 
  3085                           ; Return value:  Size  Location     Type
  3086                           ;                  3   35[BANK0 ] float 
  3087                           ; Registers used:
  3088                           ;		wreg, status,2, status,0, pclath, cstack
  3089                           ; Tracked objects:
  3090                           ;		On entry : 0/0
  3091                           ;		On exit  : 0/0
  3092                           ;		Unchanged: 0/0
  3093                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3094                           ;      Locals:         0      16       0       0       0
  3095                           ;      Temp:     4
  3096                           ;      Total:   16
  3097                           ; This function calls:
  3098                           ;		___ftpack
  3099                           ; This function is called by:
  3100                           ;		_voltage
  3101                           ;		_voltage1
  3102                           ; This function uses a non-reentrant model
  3103                           ; 
  3104                           psect	text117
  3105                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.70\sources\ftdiv.c"
  3106                           	line	50
  3107                           	global	__size_of___ftdiv
  3108  00BB                     	__size_of___ftdiv	equ	__end_of___ftdiv-___ftdiv
  3109                           	
  3110  0485                     ___ftdiv:	
  3111                           	opt stack 6
  3112                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  3113                           	line	55
  3114                           	
  3115  0485                     l30000913:	
  3116  0485  1283               	bcf	status, 5	;RP0=0, select bank0
  3117  0486  1303               	bcf	status, 6	;RP1=0, select bank0
  3118  0487  0843               	movf	(___ftdiv@f1),w
  3119  0488  00B9               	movwf	(??___ftdiv+0+0)
  3120  0489  0844               	movf	(___ftdiv@f1+1),w
  3121  048A  00BA               	movwf	(??___ftdiv+0+0+1)
  3122  048B  0845               	movf	(___ftdiv@f1+2),w
  3123  048C  00BB               	movwf	(??___ftdiv+0+0+2)
  3124  048D  1003               	clrc
  3125  048E  0D3A               	rlf	(??___ftdiv+0+1),w
  3126  048F  0D3B               	rlf	(??___ftdiv+0+2),w
  3127  0490  00C1               	movwf	(___ftdiv@exp)
  3128  0491  08C1               	movf	((___ftdiv@exp))&07fh,f
  3129  0492  1D03               	skipz
  3130  0493  2C95               	goto	u761
  3131  0494  2C96               	goto	u760
  3132  0495                     u761:
  3133  0495  2C9D               	goto	l30000916
  3134  0496                     u760:
  3135                           	
  3136  0496                     l30000914:	
  3137                           	line	56
  3138  0496  3000               	movlw	0x0
  3139  0497  00C3               	movwf	(?___ftdiv)
  3140  0498  3000               	movlw	0x0
  3141  0499  00C4               	movwf	(?___ftdiv+1)
  3142  049A  3000               	movlw	0x0
  3143  049B  00C5               	movwf	(?___ftdiv+2)
  3144  049C  2D3F               	goto	l103
  3145                           	
  3146  049D                     l30000916:	
  3147                           	line	57
  3148  049D  0846               	movf	(___ftdiv@f2),w
  3149  049E  00B9               	movwf	(??___ftdiv+0+0)
  3150  049F  0847               	movf	(___ftdiv@f2+1),w
  3151  04A0  00BA               	movwf	(??___ftdiv+0+0+1)
  3152  04A1  0848               	movf	(___ftdiv@f2+2),w
  3153  04A2  00BB               	movwf	(??___ftdiv+0+0+2)
  3154  04A3  1003               	clrc
  3155  04A4  0D3A               	rlf	(??___ftdiv+0+1),w
  3156  04A5  0D3B               	rlf	(??___ftdiv+0+2),w
  3157  04A6  00C2               	movwf	(___ftdiv@sign)
  3158  04A7  08C2               	movf	((___ftdiv@sign))&07fh,f
  3159  04A8  1D03               	skipz
  3160  04A9  2CAB               	goto	u771
  3161  04AA  2CAC               	goto	u770
  3162  04AB                     u771:
  3163  04AB  2CB3               	goto	l30000919
  3164  04AC                     u770:
  3165                           	
  3166  04AC                     l30000917:	
  3167                           	line	58
  3168  04AC  3000               	movlw	0x0
  3169  04AD  00C3               	movwf	(?___ftdiv)
  3170  04AE  3000               	movlw	0x0
  3171  04AF  00C4               	movwf	(?___ftdiv+1)
  3172  04B0  3000               	movlw	0x0
  3173  04B1  00C5               	movwf	(?___ftdiv+2)
  3174  04B2  2D3F               	goto	l103
  3175                           	
  3176  04B3                     l30000919:	
  3177                           	line	59
  3178  04B3  3000               	movlw	0
  3179  04B4  00BE               	movwf	(___ftdiv@f3)
  3180  04B5  3000               	movlw	0
  3181  04B6  00BF               	movwf	(___ftdiv@f3+1)
  3182  04B7  3000               	movlw	0
  3183  04B8  00C0               	movwf	(___ftdiv@f3+2)
  3184                           	
  3185  04B9                     l30000920:	
  3186                           	line	60
  3187  04B9  0842               	movf	(___ftdiv@sign),w
  3188  04BA  3E89               	addlw	089h
  3189  04BB  00B9               	movwf	(??___ftdiv+0+0)
  3190  04BC  0839               	movf	(??___ftdiv+0+0),w
  3191  04BD  02C1               	subwf	(___ftdiv@exp),f
  3192                           	
  3193  04BE                     l30000921:	
  3194                           	line	61
  3195  04BE  0843               	movf	(___ftdiv@f1),w
  3196  04BF  00B9               	movwf	(??___ftdiv+0+0)
  3197  04C0  0844               	movf	(___ftdiv@f1+1),w
  3198  04C1  00BA               	movwf	(??___ftdiv+0+0+1)
  3199  04C2  0845               	movf	(___ftdiv@f1+2),w
  3200  04C3  00BB               	movwf	(??___ftdiv+0+0+2)
  3201  04C4  3010               	movlw	010h
  3202  04C5                     u785:
  3203  04C5  1003               	clrc
  3204  04C6  0CBB               	rrf	(??___ftdiv+0+2),f
  3205  04C7  0CBA               	rrf	(??___ftdiv+0+1),f
  3206  04C8  0CB9               	rrf	(??___ftdiv+0+0),f
  3207  04C9                     u780:
  3208  04C9  3EFF               	addlw	-1
  3209  04CA  1D03               	skipz
  3210  04CB  2CC5               	goto	u785
  3211  04CC  0839               	movf	0+(??___ftdiv+0+0),w
  3212  04CD  00C2               	movwf	(___ftdiv@sign)
  3213                           	
  3214  04CE                     l30000922:	
  3215                           	line	62
  3216  04CE  0846               	movf	(___ftdiv@f2),w
  3217  04CF  00B9               	movwf	(??___ftdiv+0+0)
  3218  04D0  0847               	movf	(___ftdiv@f2+1),w
  3219  04D1  00BA               	movwf	(??___ftdiv+0+0+1)
  3220  04D2  0848               	movf	(___ftdiv@f2+2),w
  3221  04D3  00BB               	movwf	(??___ftdiv+0+0+2)
  3222  04D4  3010               	movlw	010h
  3223  04D5                     u795:
  3224  04D5  1003               	clrc
  3225  04D6  0CBB               	rrf	(??___ftdiv+0+2),f
  3226  04D7  0CBA               	rrf	(??___ftdiv+0+1),f
  3227  04D8  0CB9               	rrf	(??___ftdiv+0+0),f
  3228  04D9                     u790:
  3229  04D9  3EFF               	addlw	-1
  3230  04DA  1D03               	skipz
  3231  04DB  2CD5               	goto	u795
  3232  04DC  0839               	movf	0+(??___ftdiv+0+0),w
  3233  04DD  00BC               	movwf	(??___ftdiv+3+0)
  3234  04DE  083C               	movf	(??___ftdiv+3+0),w
  3235  04DF  06C2               	xorwf	(___ftdiv@sign),f
  3236                           	
  3237  04E0                     l30000923:	
  3238                           	line	63
  3239  04E0  3080               	movlw	(080h)
  3240  04E1  00B9               	movwf	(??___ftdiv+0+0)
  3241  04E2  0839               	movf	(??___ftdiv+0+0),w
  3242  04E3  05C2               	andwf	(___ftdiv@sign),f
  3243                           	
  3244  04E4                     l30000924:	
  3245                           	line	64
  3246  04E4  17C4               	bsf	(___ftdiv@f1)+(15/8),(15)&7
  3247                           	line	65
  3248  04E5  30FF               	movlw	0FFh
  3249  04E6  05C3               	andwf	(___ftdiv@f1),f
  3250  04E7  30FF               	movlw	0FFh
  3251  04E8  05C4               	andwf	(___ftdiv@f1+1),f
  3252  04E9  3000               	movlw	0
  3253  04EA  05C5               	andwf	(___ftdiv@f1+2),f
  3254                           	
  3255  04EB                     l30000925:	
  3256                           	line	66
  3257  04EB  17C7               	bsf	(___ftdiv@f2)+(15/8),(15)&7
  3258                           	line	67
  3259  04EC  30FF               	movlw	0FFh
  3260  04ED  05C6               	andwf	(___ftdiv@f2),f
  3261  04EE  30FF               	movlw	0FFh
  3262  04EF  05C7               	andwf	(___ftdiv@f2+1),f
  3263  04F0  3000               	movlw	0
  3264  04F1  05C8               	andwf	(___ftdiv@f2+2),f
  3265                           	line	68
  3266  04F2  3018               	movlw	(018h)
  3267  04F3  00BD               	movwf	(___ftdiv@cntr)
  3268                           	
  3269  04F4                     l30000926:	
  3270                           	line	70
  3271  04F4  3001               	movlw	01h
  3272  04F5                     u805:
  3273  04F5  1003               	clrc
  3274  04F6  0DBE               	rlf	(___ftdiv@f3),f
  3275  04F7  0DBF               	rlf	(___ftdiv@f3+1),f
  3276  04F8  0DC0               	rlf	(___ftdiv@f3+2),f
  3277  04F9  3EFF               	addlw	-1
  3278  04FA  1D03               	skipz
  3279  04FB  2CF5               	goto	u805
  3280                           	
  3281  04FC                     l30000927:	
  3282                           	line	71
  3283  04FC  0848               	movf	(___ftdiv@f2+2),w
  3284  04FD  0245               	subwf	(___ftdiv@f1+2),w
  3285  04FE  1D03               	skipz
  3286  04FF  2D06               	goto	u815
  3287  0500  0847               	movf	(___ftdiv@f2+1),w
  3288  0501  0244               	subwf	(___ftdiv@f1+1),w
  3289  0502  1D03               	skipz
  3290  0503  2D06               	goto	u815
  3291  0504  0846               	movf	(___ftdiv@f2),w
  3292  0505  0243               	subwf	(___ftdiv@f1),w
  3293  0506                     u815:
  3294  0506  1C03               	skipc
  3295  0507  2D09               	goto	u811
  3296  0508  2D0A               	goto	u810
  3297  0509                     u811:
  3298  0509  2D15               	goto	l30000930
  3299  050A                     u810:
  3300                           	
  3301  050A                     l30000928:	
  3302                           	line	72
  3303  050A  0846               	movf	(___ftdiv@f2),w
  3304  050B  02C3               	subwf	(___ftdiv@f1),f
  3305  050C  0847               	movf	(___ftdiv@f2+1),w
  3306  050D  1C03               	skipc
  3307  050E  0F47               	incfsz	(___ftdiv@f2+1),w
  3308  050F  02C4               	subwf	(___ftdiv@f1+1),f
  3309  0510  0848               	movf	(___ftdiv@f2+2),w
  3310  0511  1C03               	skipc
  3311  0512  0A48               	incf	(___ftdiv@f2+2),w
  3312  0513  02C5               	subwf	(___ftdiv@f1+2),f
  3313                           	
  3314  0514                     l30000929:	
  3315                           	line	73
  3316  0514  143E               	bsf	(___ftdiv@f3)+(0/8),(0)&7
  3317                           	
  3318  0515                     l30000930:	
  3319                           	line	75
  3320  0515  3001               	movlw	01h
  3321  0516                     u825:
  3322  0516  1003               	clrc
  3323  0517  0DC3               	rlf	(___ftdiv@f1),f
  3324  0518  0DC4               	rlf	(___ftdiv@f1+1),f
  3325  0519  0DC5               	rlf	(___ftdiv@f1+2),f
  3326  051A  3EFF               	addlw	-1
  3327  051B  1D03               	skipz
  3328  051C  2D16               	goto	u825
  3329                           	
  3330  051D                     l30000931:	
  3331                           	line	76
  3332  051D  3001               	movlw	low(01h)
  3333  051E  02BD               	subwf	(___ftdiv@cntr),f
  3334  051F  1D03               	btfss	status,2
  3335  0520  2D22               	goto	u831
  3336  0521  2D23               	goto	u830
  3337  0522                     u831:
  3338  0522  2CF4               	goto	l30000926
  3339  0523                     u830:
  3340                           	
  3341  0523                     l30000932:	
  3342                           	line	77
  3343  0523  083E               	movf	(___ftdiv@f3),w
  3344  0524  00A0               	movwf	(?___ftpack)
  3345  0525  083F               	movf	(___ftdiv@f3+1),w
  3346  0526  00A1               	movwf	(?___ftpack+1)
  3347  0527  0840               	movf	(___ftdiv@f3+2),w
  3348  0528  00A2               	movwf	(?___ftpack+2)
  3349  0529  0841               	movf	(___ftdiv@exp),w
  3350  052A  00B9               	movwf	(??___ftdiv+0+0)
  3351  052B  0839               	movf	(??___ftdiv+0+0),w
  3352  052C  00A3               	movwf	0+(?___ftpack)+03h
  3353  052D  0842               	movf	(___ftdiv@sign),w
  3354  052E  00BA               	movwf	(??___ftdiv+1+0)
  3355  052F  083A               	movf	(??___ftdiv+1+0),w
  3356  0530  00A4               	movwf	0+(?___ftpack)+04h
  3357  0531  120A  118A  210A   	fcall	___ftpack
              120A  118A         
  3358  0536  1383               	bcf	status, 7	;select IRP bank0
  3359  0537  1283               	bcf	status, 5	;RP0=0, select bank0
  3360  0538  1303               	bcf	status, 6	;RP1=0, select bank0
  3361  0539  0820               	movf	(0+(?___ftpack)),w
  3362  053A  00C3               	movwf	(?___ftdiv)
  3363  053B  0821               	movf	(1+(?___ftpack)),w
  3364  053C  00C4               	movwf	(?___ftdiv+1)
  3365  053D  0822               	movf	(2+(?___ftpack)),w
  3366  053E  00C5               	movwf	(?___ftdiv+2)
  3367                           	
  3368  053F                     l103:	
  3369  053F  0008               	return
  3370                           	opt stack 0
  3371                           GLOBAL	__end_of___ftdiv
  3372  0540                     	__end_of___ftdiv:
  3373                           ; =============== function ___ftdiv ends ============
  3374                           
  3375                           psect	text118,local,class=CODE,delta=2
  3376                           global __ptext118
  3377  0186                     __ptext118:
  3378                           	line	78
  3379                           	signat	___ftdiv,8315
  3380                           	global	___fttol
  3381                           
  3382                           ; *************** function ___fttol *****************
  3383                           ; Defined at:
  3384                           ;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.70\sources\fttol.c"
  3385                           ; Parameters:    Size  Location     Type
  3386                           ;  f1              3   34[BANK0 ] float 
  3387                           ; Auto vars:     Size  Location     Type
  3388                           ;  lval            4   29[BANK0 ] unsigned long 
  3389                           ;  exp1            1   33[BANK0 ] unsigned char 
  3390                           ;  sign1           1   28[BANK0 ] unsigned char 
  3391                           ; Return value:  Size  Location     Type
  3392                           ;                  4   34[BANK0 ] long 
  3393                           ; Registers used:
  3394                           ;		wreg, status,2, status,0
  3395                           ; Tracked objects:
  3396                           ;		On entry : 0/0
  3397                           ;		On exit  : 0/0
  3398                           ;		Unchanged: 0/0
  3399                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3400                           ;      Locals:         0      13       0       0       0
  3401                           ;      Temp:     3
  3402                           ;      Total:   13
  3403                           ; This function calls:
  3404                           ; This function is called by:
  3405                           ;		_voltage
  3406                           ;		_voltage1
  3407                           ; This function uses a non-reentrant model
  3408                           ; 
  3409                           psect	text118
  3410                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.70\sources\fttol.c"
  3411                           	line	45
  3412                           	global	__size_of___fttol
  3413  0087                     	__size_of___fttol	equ	__end_of___fttol-___fttol
  3414                           	
  3415  0186                     ___fttol:	
  3416                           	opt stack 6
  3417                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3418                           	line	49
  3419                           	
  3420  0186                     l30000956:	
  3421  0186  1283               	bcf	status, 5	;RP0=0, select bank0
  3422  0187  1303               	bcf	status, 6	;RP1=0, select bank0
  3423  0188  0842               	movf	(___fttol@f1),w
  3424  0189  00B9               	movwf	(??___fttol+0+0)
  3425  018A  0843               	movf	(___fttol@f1+1),w
  3426  018B  00BA               	movwf	(??___fttol+0+0+1)
  3427  018C  0844               	movf	(___fttol@f1+2),w
  3428  018D  00BB               	movwf	(??___fttol+0+0+2)
  3429  018E  1003               	clrc
  3430  018F  0D3A               	rlf	(??___fttol+0+1),w
  3431  0190  0D3B               	rlf	(??___fttol+0+2),w
  3432  0191  00C1               	movwf	(___fttol@exp1)
  3433  0192  08C1               	movf	((___fttol@exp1))&07fh,f
  3434  0193  1D03               	skipz
  3435  0194  2996               	goto	u841
  3436  0195  2997               	goto	u840
  3437  0196                     u841:
  3438  0196  29A0               	goto	l30000959
  3439  0197                     u840:
  3440                           	
  3441  0197                     l30000957:	
  3442                           	line	50
  3443  0197  3000               	movlw	0
  3444  0198  00C5               	movwf	(?___fttol+3)
  3445  0199  3000               	movlw	0
  3446  019A  00C4               	movwf	(?___fttol+2)
  3447  019B  3000               	movlw	0
  3448  019C  00C3               	movwf	(?___fttol+1)
  3449  019D  3000               	movlw	0
  3450  019E  00C2               	movwf	(?___fttol)
  3451                           
  3452  019F  2A0C               	goto	l163
  3453                           	
  3454  01A0                     l30000959:	
  3455                           	line	51
  3456  01A0  0842               	movf	(___fttol@f1),w
  3457  01A1  00B9               	movwf	(??___fttol+0+0)
  3458  01A2  0843               	movf	(___fttol@f1+1),w
  3459  01A3  00BA               	movwf	(??___fttol+0+0+1)
  3460  01A4  0844               	movf	(___fttol@f1+2),w
  3461  01A5  00BB               	movwf	(??___fttol+0+0+2)
  3462  01A6  3017               	movlw	017h
  3463  01A7                     u855:
  3464  01A7  1003               	clrc
  3465  01A8  0CBB               	rrf	(??___fttol+0+2),f
  3466  01A9  0CBA               	rrf	(??___fttol+0+1),f
  3467  01AA  0CB9               	rrf	(??___fttol+0+0),f
  3468  01AB                     u850:
  3469  01AB  3EFF               	addlw	-1
  3470  01AC  1D03               	skipz
  3471  01AD  29A7               	goto	u855
  3472  01AE  0839               	movf	0+(??___fttol+0+0),w
  3473  01AF  00BC               	movwf	(___fttol@sign1)
  3474                           	
  3475  01B0                     l30000960:	
  3476                           	line	52
  3477  01B0  17C3               	bsf	(___fttol@f1)+(15/8),(15)&7
  3478                           	
  3479  01B1                     l30000961:	
  3480                           	line	53
  3481  01B1  30FF               	movlw	0FFh
  3482  01B2  05C2               	andwf	(___fttol@f1),f
  3483  01B3  30FF               	movlw	0FFh
  3484  01B4  05C3               	andwf	(___fttol@f1+1),f
  3485  01B5  3000               	movlw	0
  3486  01B6  05C4               	andwf	(___fttol@f1+2),f
  3487                           	
  3488  01B7                     l30000962:	
  3489                           	line	54
  3490  01B7  0842               	movf	(___fttol@f1),w
  3491  01B8  00BD               	movwf	(___fttol@lval)
  3492  01B9  0843               	movf	(___fttol@f1+1),w
  3493  01BA  00BE               	movwf	((___fttol@lval))+1
  3494                           	
  3495  01BB  0844               	movf	(___fttol@f1+2),w
  3496  01BC  00BF               	movwf	((___fttol@lval))+2
  3497                           	
  3498  01BD  01C0               	clrf	3+(___fttol@lval)
  3499                           	
  3500  01BE                     l30000963:	
  3501                           	line	55
  3502  01BE  308E               	movlw	low(08Eh)
  3503  01BF  02C1               	subwf	(___fttol@exp1),f
  3504                           	
  3505  01C0                     l30000964:	
  3506                           	line	56
  3507  01C0  1FC1               	btfss	(___fttol@exp1),7
  3508  01C1  29C3               	goto	u861
  3509  01C2  29C4               	goto	u860
  3510  01C3                     u861:
  3511  01C3  29DE               	goto	l30000969
  3512  01C4                     u860:
  3513                           	
  3514  01C4                     l30000965:	
  3515                           	line	57
  3516  01C4  0841               	movf	(___fttol@exp1),w
  3517  01C5  3A80               	xorlw	80h
  3518  01C6  3E8F               	addlw	-((-15)^80h)
  3519  01C7  1803               	skipnc
  3520  01C8  29CA               	goto	u871
  3521  01C9  29CB               	goto	u870
  3522  01CA                     u871:
  3523  01CA  29CC               	goto	l30000968
  3524  01CB                     u870:
  3525  01CB  2997               	goto	l30000957
  3526                           	
  3527  01CC                     l30000968:	
  3528                           	line	60
  3529  01CC  3001               	movlw	01h
  3530  01CD                     u885:
  3531  01CD  1003               	clrc
  3532  01CE  0CC0               	rrf	(___fttol@lval+3),f
  3533  01CF  0CBF               	rrf	(___fttol@lval+2),f
  3534  01D0  0CBE               	rrf	(___fttol@lval+1),f
  3535  01D1  0CBD               	rrf	(___fttol@lval),f
  3536  01D2  3EFF               	addlw	-1
  3537  01D3  1D03               	skipz
  3538  01D4  29CD               	goto	u885
  3539                           
  3540                           	line	61
  3541  01D5  3001               	movlw	(01h)
  3542  01D6  00B9               	movwf	(??___fttol+0+0)
  3543  01D7  0839               	movf	(??___fttol+0+0),w
  3544  01D8  07C1               	addwf	(___fttol@exp1),f
  3545  01D9  1D03               	btfss	status,2
  3546  01DA  29DC               	goto	u891
  3547  01DB  29DD               	goto	u890
  3548  01DC                     u891:
  3549  01DC  29CC               	goto	l30000968
  3550  01DD                     u890:
  3551  01DD  29F5               	goto	l30000974
  3552                           	
  3553  01DE                     l30000969:	
  3554                           	line	63
  3555  01DE  3018               	movlw	(018h)
  3556  01DF  0241               	subwf	(___fttol@exp1),w
  3557  01E0  1C03               	skipc
  3558  01E1  29E3               	goto	u901
  3559  01E2  29E4               	goto	u900
  3560  01E3                     u901:
  3561  01E3  29F0               	goto	l30000973
  3562  01E4                     u900:
  3563  01E4  2997               	goto	l30000957
  3564                           	
  3565  01E5                     l30000972:	
  3566                           	line	66
  3567  01E5  3001               	movlw	01h
  3568  01E6  00B9               	movwf	(??___fttol+0+0)
  3569  01E7                     u915:
  3570  01E7  1003               	clrc
  3571  01E8  0DBD               	rlf	(___fttol@lval),f
  3572  01E9  0DBE               	rlf	(___fttol@lval+1),f
  3573  01EA  0DBF               	rlf	(___fttol@lval+2),f
  3574  01EB  0DC0               	rlf	(___fttol@lval+3),f
  3575  01EC  0BB9               	decfsz	(??___fttol+0+0)
  3576  01ED  29E7               	goto	u915
  3577                           	line	67
  3578  01EE  3001               	movlw	low(01h)
  3579  01EF  02C1               	subwf	(___fttol@exp1),f
  3580                           	
  3581  01F0                     l30000973:	
  3582                           	line	65
  3583  01F0  08C1               	movf	(___fttol@exp1),f
  3584  01F1  1D03               	skipz
  3585  01F2  29F4               	goto	u921
  3586  01F3  29F5               	goto	u920
  3587  01F4                     u921:
  3588  01F4  29E5               	goto	l30000972
  3589  01F5                     u920:
  3590                           	
  3591  01F5                     l30000974:	
  3592                           	line	70
  3593  01F5  083C               	movf	(___fttol@sign1),w
  3594  01F6  1D03               	skipz
  3595  01F7  29F9               	goto	u930
  3596  01F8  2A04               	goto	l30000976
  3597  01F9                     u930:
  3598                           	
  3599  01F9                     l30000975:	
  3600                           	line	71
  3601  01F9  09BD               	comf	(___fttol@lval),f
  3602  01FA  09BE               	comf	(___fttol@lval+1),f
  3603  01FB  09BF               	comf	(___fttol@lval+2),f
  3604  01FC  09C0               	comf	(___fttol@lval+3),f
  3605  01FD  0ABD               	incf	(___fttol@lval),f
  3606  01FE  1903               	skipnz
  3607  01FF  0ABE               	incf	(___fttol@lval+1),f
  3608  0200  1903               	skipnz
  3609  0201  0ABF               	incf	(___fttol@lval+2),f
  3610  0202  1903               	skipnz
  3611  0203  0AC0               	incf	(___fttol@lval+3),f
  3612                           	
  3613  0204                     l30000976:	
  3614                           	line	72
  3615  0204  0840               	movf	(___fttol@lval+3),w
  3616  0205  00C5               	movwf	(?___fttol+3)
  3617  0206  083F               	movf	(___fttol@lval+2),w
  3618  0207  00C4               	movwf	(?___fttol+2)
  3619  0208  083E               	movf	(___fttol@lval+1),w
  3620  0209  00C3               	movwf	(?___fttol+1)
  3621  020A  083D               	movf	(___fttol@lval),w
  3622  020B  00C2               	movwf	(?___fttol)
  3623                           
  3624                           	
  3625  020C                     l163:	
  3626  020C  0008               	return
  3627                           	opt stack 0
  3628                           GLOBAL	__end_of___fttol
  3629  020D                     	__end_of___fttol:
  3630                           ; =============== function ___fttol ends ============
  3631                           
  3632                           psect	text119,local,class=CODE,delta=2
  3633                           global __ptext119
  3634  0323                     __ptext119:
  3635                           	line	73
  3636                           	signat	___fttol,4220
  3637                           	global	_count1
  3638                           
  3639                           ; *************** function _count1 *****************
  3640                           ; Defined at:
  3641                           ;		line 54 in file "C:\Users\gowth\Documents\PIC Programs\ADC\2 ADC\2 ADC.c"
  3642                           ; Parameters:    Size  Location     Type
  3643                           ;  i               2   22[BANK0 ] int 
  3644                           ; Auto vars:     Size  Location     Type
  3645                           ;  f               2   16[BANK0 ] int 
  3646                           ;  e               2   14[BANK0 ] int 
  3647                           ;  c               2   20[BANK0 ] int 
  3648                           ;  a               2   18[BANK0 ] int 
  3649                           ; Return value:  Size  Location     Type
  3650                           ;		None               void
  3651                           ; Registers used:
  3652                           ;		wreg, status,2, status,0, pclath, cstack
  3653                           ; Tracked objects:
  3654                           ;		On entry : 0/0
  3655                           ;		On exit  : 0/0
  3656                           ;		Unchanged: 0/0
  3657                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3658                           ;      Locals:         0      10       0       0       0
  3659                           ;      Temp:     0
  3660                           ;      Total:   10
  3661                           ; This function calls:
  3662                           ;		___awdiv
  3663                           ;		___awmod
  3664                           ;		_command
  3665                           ;		_data
  3666                           ; This function is called by:
  3667                           ;		_adc1
  3668                           ; This function uses a non-reentrant model
  3669                           ; 
  3670                           psect	text119
  3671                           	file	"C:\Users\gowth\Documents\PIC Programs\ADC\2 ADC\2 ADC.c"
  3672                           	line	54
  3673                           	global	__size_of_count1
  3674  00B1                     	__size_of_count1	equ	__end_of_count1-_count1
  3675                           ;2 ADC.c: 53: void count1(int i)
  3676                           ;2 ADC.c: 54: {
  3677                           	
  3678  0323                     _count1:	
  3679                           	opt stack 6
  3680                           ; Regs used in _count1: [wreg+status,2+status,0+pclath+cstack]
  3681                           	line	57
  3682                           	
  3683  0323                     l30001056:	
  3684                           ;2 ADC.c: 55: int a,c,e,f;
  3685                           ;2 ADC.c: 57: a=i/1000;
  3686  0323  1283               	bcf	status, 5	;RP0=0, select bank0
  3687  0324  1303               	bcf	status, 6	;RP1=0, select bank0
  3688  0325  0837               	movf	(count1@i+1),w
  3689  0326  01AB               	clrf	(?___awdiv+1)
  3690  0327  07AB               	addwf	(?___awdiv+1)
  3691  0328  0836               	movf	(count1@i),w
  3692  0329  01AA               	clrf	(?___awdiv)
  3693  032A  07AA               	addwf	(?___awdiv)
  3694                           
  3695  032B  30E8               	movlw	low(03E8h)
  3696  032C  00AC               	movwf	0+(?___awdiv)+02h
  3697  032D  3003               	movlw	high(03E8h)
  3698  032E  00AD               	movwf	(0+(?___awdiv)+02h)+1
  3699  032F  120A  118A  2098   	fcall	___awdiv
              120A  118A         
  3700  0334  1383               	bcf	status, 7	;select IRP bank0
  3701  0335  1283               	bcf	status, 5	;RP0=0, select bank0
  3702  0336  1303               	bcf	status, 6	;RP1=0, select bank0
  3703  0337  082B               	movf	(1+(?___awdiv)),w
  3704  0338  01B3               	clrf	(count1@a+1)
  3705  0339  07B3               	addwf	(count1@a+1)
  3706  033A  082A               	movf	(0+(?___awdiv)),w
  3707  033B  01B2               	clrf	(count1@a)
  3708  033C  07B2               	addwf	(count1@a)
  3709                           
  3710                           	line	58
  3711                           ;2 ADC.c: 58: c=(i%1000)/100;
  3712  033D  0837               	movf	(count1@i+1),w
  3713  033E  01A3               	clrf	(?___awmod+1)
  3714  033F  07A3               	addwf	(?___awmod+1)
  3715  0340  0836               	movf	(count1@i),w
  3716  0341  01A2               	clrf	(?___awmod)
  3717  0342  07A2               	addwf	(?___awmod)
  3718                           
  3719  0343  30E8               	movlw	low(03E8h)
  3720  0344  00A4               	movwf	0+(?___awmod)+02h
  3721  0345  3003               	movlw	high(03E8h)
  3722  0346  00A5               	movwf	(0+(?___awmod)+02h)+1
  3723  0347  120A  158A  279E   	fcall	___awmod
              120A  118A         
  3724  034C  1383               	bcf	status, 7	;select IRP bank0
  3725  034D  1283               	bcf	status, 5	;RP0=0, select bank0
  3726  034E  1303               	bcf	status, 6	;RP1=0, select bank0
  3727  034F  0823               	movf	(1+(?___awmod)),w
  3728  0350  01AB               	clrf	(?___awdiv+1)
  3729  0351  07AB               	addwf	(?___awdiv+1)
  3730  0352  0822               	movf	(0+(?___awmod)),w
  3731  0353  01AA               	clrf	(?___awdiv)
  3732  0354  07AA               	addwf	(?___awdiv)
  3733                           
  3734  0355  3064               	movlw	low(064h)
  3735  0356  00AC               	movwf	0+(?___awdiv)+02h
  3736  0357  3000               	movlw	high(064h)
  3737  0358  00AD               	movwf	(0+(?___awdiv)+02h)+1
  3738  0359  120A  118A  2098   	fcall	___awdiv
              120A  118A         
  3739  035E  1383               	bcf	status, 7	;select IRP bank0
  3740  035F  1283               	bcf	status, 5	;RP0=0, select bank0
  3741  0360  1303               	bcf	status, 6	;RP1=0, select bank0
  3742  0361  082B               	movf	(1+(?___awdiv)),w
  3743  0362  01B5               	clrf	(count1@c+1)
  3744  0363  07B5               	addwf	(count1@c+1)
  3745  0364  082A               	movf	(0+(?___awdiv)),w
  3746  0365  01B4               	clrf	(count1@c)
  3747  0366  07B4               	addwf	(count1@c)
  3748                           
  3749                           	line	59
  3750                           ;2 ADC.c: 59: e=(i%100)/10;
  3751  0367  0837               	movf	(count1@i+1),w
  3752  0368  01A3               	clrf	(?___awmod+1)
  3753  0369  07A3               	addwf	(?___awmod+1)
  3754  036A  0836               	movf	(count1@i),w
  3755  036B  01A2               	clrf	(?___awmod)
  3756  036C  07A2               	addwf	(?___awmod)
  3757                           
  3758  036D  3064               	movlw	low(064h)
  3759  036E  00A4               	movwf	0+(?___awmod)+02h
  3760  036F  3000               	movlw	high(064h)
  3761  0370  00A5               	movwf	(0+(?___awmod)+02h)+1
  3762  0371  120A  158A  279E   	fcall	___awmod
              120A  118A         
  3763  0376  1383               	bcf	status, 7	;select IRP bank0
  3764  0377  1283               	bcf	status, 5	;RP0=0, select bank0
  3765  0378  1303               	bcf	status, 6	;RP1=0, select bank0
  3766  0379  0823               	movf	(1+(?___awmod)),w
  3767  037A  01AB               	clrf	(?___awdiv+1)
  3768  037B  07AB               	addwf	(?___awdiv+1)
  3769  037C  0822               	movf	(0+(?___awmod)),w
  3770  037D  01AA               	clrf	(?___awdiv)
  3771  037E  07AA               	addwf	(?___awdiv)
  3772                           
  3773  037F  300A               	movlw	low(0Ah)
  3774  0380  00AC               	movwf	0+(?___awdiv)+02h
  3775  0381  3000               	movlw	high(0Ah)
  3776  0382  00AD               	movwf	(0+(?___awdiv)+02h)+1
  3777  0383  120A  118A  2098   	fcall	___awdiv
              120A  118A         
  3778  0388  1383               	bcf	status, 7	;select IRP bank0
  3779  0389  1283               	bcf	status, 5	;RP0=0, select bank0
  3780  038A  1303               	bcf	status, 6	;RP1=0, select bank0
  3781  038B  082B               	movf	(1+(?___awdiv)),w
  3782  038C  01AF               	clrf	(count1@e+1)
  3783  038D  07AF               	addwf	(count1@e+1)
  3784  038E  082A               	movf	(0+(?___awdiv)),w
  3785  038F  01AE               	clrf	(count1@e)
  3786  0390  07AE               	addwf	(count1@e)
  3787                           
  3788                           	line	60
  3789                           ;2 ADC.c: 60: f=i%10;
  3790  0391  0837               	movf	(count1@i+1),w
  3791  0392  01A3               	clrf	(?___awmod+1)
  3792  0393  07A3               	addwf	(?___awmod+1)
  3793  0394  0836               	movf	(count1@i),w
  3794  0395  01A2               	clrf	(?___awmod)
  3795  0396  07A2               	addwf	(?___awmod)
  3796                           
  3797  0397  300A               	movlw	low(0Ah)
  3798  0398  00A4               	movwf	0+(?___awmod)+02h
  3799  0399  3000               	movlw	high(0Ah)
  3800  039A  00A5               	movwf	(0+(?___awmod)+02h)+1
  3801  039B  120A  158A  279E   	fcall	___awmod
              120A  118A         
  3802  03A0  1383               	bcf	status, 7	;select IRP bank0
  3803  03A1  1283               	bcf	status, 5	;RP0=0, select bank0
  3804  03A2  1303               	bcf	status, 6	;RP1=0, select bank0
  3805  03A3  0823               	movf	(1+(?___awmod)),w
  3806  03A4  01B1               	clrf	(count1@f+1)
  3807  03A5  07B1               	addwf	(count1@f+1)
  3808  03A6  0822               	movf	(0+(?___awmod)),w
  3809  03A7  01B0               	clrf	(count1@f)
  3810  03A8  07B0               	addwf	(count1@f)
  3811                           
  3812                           	line	62
  3813                           ;2 ADC.c: 62: command(0XC0);
  3814  03A9  30C0               	movlw	(0C0h)
  3815  03AA  120A  158A  275C   	fcall	_command
              120A  118A         
  3816                           	line	63
  3817                           ;2 ADC.c: 63: data(a+48);
  3818  03AF  1283               	bcf	status, 5	;RP0=0, select bank0
  3819  03B0  1303               	bcf	status, 6	;RP1=0, select bank0
  3820  03B1  0832               	movf	(count1@a),w
  3821  03B2  3E30               	addlw	030h
  3822  03B3  120A  158A  2768   	fcall	_data
              120A  118A         
  3823                           	line	64
  3824                           ;2 ADC.c: 64: data(c+48);
  3825  03B8  1283               	bcf	status, 5	;RP0=0, select bank0
  3826  03B9  1303               	bcf	status, 6	;RP1=0, select bank0
  3827  03BA  0834               	movf	(count1@c),w
  3828  03BB  3E30               	addlw	030h
  3829  03BC  120A  158A  2768   	fcall	_data
              120A  118A         
  3830                           	line	65
  3831                           ;2 ADC.c: 65: data(e+48);
  3832  03C1  1283               	bcf	status, 5	;RP0=0, select bank0
  3833  03C2  1303               	bcf	status, 6	;RP1=0, select bank0
  3834  03C3  082E               	movf	(count1@e),w
  3835  03C4  3E30               	addlw	030h
  3836  03C5  120A  158A  2768   	fcall	_data
              120A  118A         
  3837                           	line	66
  3838                           ;2 ADC.c: 66: data(f+48);
  3839  03CA  1283               	bcf	status, 5	;RP0=0, select bank0
  3840  03CB  1303               	bcf	status, 6	;RP1=0, select bank0
  3841  03CC  0830               	movf	(count1@f),w
  3842  03CD  3E30               	addlw	030h
  3843  03CE  120A  158A  2768   	fcall	_data
              120A  118A         
  3844                           	
  3845  03D3                     l9:	
  3846  03D3  0008               	return
  3847                           	opt stack 0
  3848                           GLOBAL	__end_of_count1
  3849  03D4                     	__end_of_count1:
  3850                           ; =============== function _count1 ends ============
  3851                           
  3852                           psect	text120,local,class=CODE,delta=2
  3853                           global __ptext120
  3854  03D4                     __ptext120:
  3855                           	line	67
  3856                           	signat	_count1,4216
  3857                           	global	_count
  3858                           
  3859                           ; *************** function _count *****************
  3860                           ; Defined at:
  3861                           ;		line 38 in file "C:\Users\gowth\Documents\PIC Programs\ADC\2 ADC\2 ADC.c"
  3862                           ; Parameters:    Size  Location     Type
  3863                           ;  i               2   22[BANK0 ] int 
  3864                           ; Auto vars:     Size  Location     Type
  3865                           ;  f               2   16[BANK0 ] int 
  3866                           ;  e               2   14[BANK0 ] int 
  3867                           ;  c               2   20[BANK0 ] int 
  3868                           ;  a               2   18[BANK0 ] int 
  3869                           ; Return value:  Size  Location     Type
  3870                           ;		None               void
  3871                           ; Registers used:
  3872                           ;		wreg, status,2, status,0, pclath, cstack
  3873                           ; Tracked objects:
  3874                           ;		On entry : 0/0
  3875                           ;		On exit  : 0/0
  3876                           ;		Unchanged: 0/0
  3877                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3878                           ;      Locals:         0      10       0       0       0
  3879                           ;      Temp:     0
  3880                           ;      Total:   10
  3881                           ; This function calls:
  3882                           ;		___awdiv
  3883                           ;		___awmod
  3884                           ;		_command
  3885                           ;		_data
  3886                           ; This function is called by:
  3887                           ;		_adc
  3888                           ; This function uses a non-reentrant model
  3889                           ; 
  3890                           psect	text120
  3891                           	file	"C:\Users\gowth\Documents\PIC Programs\ADC\2 ADC\2 ADC.c"
  3892                           	line	38
  3893                           	global	__size_of_count
  3894  00B1                     	__size_of_count	equ	__end_of_count-_count
  3895                           ;2 ADC.c: 37: void count(int i)
  3896                           ;2 ADC.c: 38: {
  3897                           	
  3898  03D4                     _count:	
  3899                           	opt stack 6
  3900                           ; Regs used in _count: [wreg+status,2+status,0+pclath+cstack]
  3901                           	line	41
  3902                           	
  3903  03D4                     l30001041:	
  3904                           ;2 ADC.c: 39: int a,c,e,f;
  3905                           ;2 ADC.c: 41: a=i/1000;
  3906  03D4  1283               	bcf	status, 5	;RP0=0, select bank0
  3907  03D5  1303               	bcf	status, 6	;RP1=0, select bank0
  3908  03D6  0837               	movf	(count@i+1),w
  3909  03D7  01AB               	clrf	(?___awdiv+1)
  3910  03D8  07AB               	addwf	(?___awdiv+1)
  3911  03D9  0836               	movf	(count@i),w
  3912  03DA  01AA               	clrf	(?___awdiv)
  3913  03DB  07AA               	addwf	(?___awdiv)
  3914                           
  3915  03DC  30E8               	movlw	low(03E8h)
  3916  03DD  00AC               	movwf	0+(?___awdiv)+02h
  3917  03DE  3003               	movlw	high(03E8h)
  3918  03DF  00AD               	movwf	(0+(?___awdiv)+02h)+1
  3919  03E0  120A  118A  2098   	fcall	___awdiv
              120A  118A         
  3920  03E5  1383               	bcf	status, 7	;select IRP bank0
  3921  03E6  1283               	bcf	status, 5	;RP0=0, select bank0
  3922  03E7  1303               	bcf	status, 6	;RP1=0, select bank0
  3923  03E8  082B               	movf	(1+(?___awdiv)),w
  3924  03E9  01B3               	clrf	(count@a+1)
  3925  03EA  07B3               	addwf	(count@a+1)
  3926  03EB  082A               	movf	(0+(?___awdiv)),w
  3927  03EC  01B2               	clrf	(count@a)
  3928  03ED  07B2               	addwf	(count@a)
  3929                           
  3930                           	line	42
  3931                           ;2 ADC.c: 42: c=(i%1000)/100;
  3932  03EE  0837               	movf	(count@i+1),w
  3933  03EF  01A3               	clrf	(?___awmod+1)
  3934  03F0  07A3               	addwf	(?___awmod+1)
  3935  03F1  0836               	movf	(count@i),w
  3936  03F2  01A2               	clrf	(?___awmod)
  3937  03F3  07A2               	addwf	(?___awmod)
  3938                           
  3939  03F4  30E8               	movlw	low(03E8h)
  3940  03F5  00A4               	movwf	0+(?___awmod)+02h
  3941  03F6  3003               	movlw	high(03E8h)
  3942  03F7  00A5               	movwf	(0+(?___awmod)+02h)+1
  3943  03F8  120A  158A  279E   	fcall	___awmod
              120A  118A         
  3944  03FD  1383               	bcf	status, 7	;select IRP bank0
  3945  03FE  1283               	bcf	status, 5	;RP0=0, select bank0
  3946  03FF  1303               	bcf	status, 6	;RP1=0, select bank0
  3947  0400  0823               	movf	(1+(?___awmod)),w
  3948  0401  01AB               	clrf	(?___awdiv+1)
  3949  0402  07AB               	addwf	(?___awdiv+1)
  3950  0403  0822               	movf	(0+(?___awmod)),w
  3951  0404  01AA               	clrf	(?___awdiv)
  3952  0405  07AA               	addwf	(?___awdiv)
  3953                           
  3954  0406  3064               	movlw	low(064h)
  3955  0407  00AC               	movwf	0+(?___awdiv)+02h
  3956  0408  3000               	movlw	high(064h)
  3957  0409  00AD               	movwf	(0+(?___awdiv)+02h)+1
  3958  040A  120A  118A  2098   	fcall	___awdiv
              120A  118A         
  3959  040F  1383               	bcf	status, 7	;select IRP bank0
  3960  0410  1283               	bcf	status, 5	;RP0=0, select bank0
  3961  0411  1303               	bcf	status, 6	;RP1=0, select bank0
  3962  0412  082B               	movf	(1+(?___awdiv)),w
  3963  0413  01B5               	clrf	(count@c+1)
  3964  0414  07B5               	addwf	(count@c+1)
  3965  0415  082A               	movf	(0+(?___awdiv)),w
  3966  0416  01B4               	clrf	(count@c)
  3967  0417  07B4               	addwf	(count@c)
  3968                           
  3969                           	line	43
  3970                           ;2 ADC.c: 43: e=(i%100)/10;
  3971  0418  0837               	movf	(count@i+1),w
  3972  0419  01A3               	clrf	(?___awmod+1)
  3973  041A  07A3               	addwf	(?___awmod+1)
  3974  041B  0836               	movf	(count@i),w
  3975  041C  01A2               	clrf	(?___awmod)
  3976  041D  07A2               	addwf	(?___awmod)
  3977                           
  3978  041E  3064               	movlw	low(064h)
  3979  041F  00A4               	movwf	0+(?___awmod)+02h
  3980  0420  3000               	movlw	high(064h)
  3981  0421  00A5               	movwf	(0+(?___awmod)+02h)+1
  3982  0422  120A  158A  279E   	fcall	___awmod
              120A  118A         
  3983  0427  1383               	bcf	status, 7	;select IRP bank0
  3984  0428  1283               	bcf	status, 5	;RP0=0, select bank0
  3985  0429  1303               	bcf	status, 6	;RP1=0, select bank0
  3986  042A  0823               	movf	(1+(?___awmod)),w
  3987  042B  01AB               	clrf	(?___awdiv+1)
  3988  042C  07AB               	addwf	(?___awdiv+1)
  3989  042D  0822               	movf	(0+(?___awmod)),w
  3990  042E  01AA               	clrf	(?___awdiv)
  3991  042F  07AA               	addwf	(?___awdiv)
  3992                           
  3993  0430  300A               	movlw	low(0Ah)
  3994  0431  00AC               	movwf	0+(?___awdiv)+02h
  3995  0432  3000               	movlw	high(0Ah)
  3996  0433  00AD               	movwf	(0+(?___awdiv)+02h)+1
  3997  0434  120A  118A  2098   	fcall	___awdiv
              120A  118A         
  3998  0439  1383               	bcf	status, 7	;select IRP bank0
  3999  043A  1283               	bcf	status, 5	;RP0=0, select bank0
  4000  043B  1303               	bcf	status, 6	;RP1=0, select bank0
  4001  043C  082B               	movf	(1+(?___awdiv)),w
  4002  043D  01AF               	clrf	(count@e+1)
  4003  043E  07AF               	addwf	(count@e+1)
  4004  043F  082A               	movf	(0+(?___awdiv)),w
  4005  0440  01AE               	clrf	(count@e)
  4006  0441  07AE               	addwf	(count@e)
  4007                           
  4008                           	line	44
  4009                           ;2 ADC.c: 44: f=i%10;
  4010  0442  0837               	movf	(count@i+1),w
  4011  0443  01A3               	clrf	(?___awmod+1)
  4012  0444  07A3               	addwf	(?___awmod+1)
  4013  0445  0836               	movf	(count@i),w
  4014  0446  01A2               	clrf	(?___awmod)
  4015  0447  07A2               	addwf	(?___awmod)
  4016                           
  4017  0448  300A               	movlw	low(0Ah)
  4018  0449  00A4               	movwf	0+(?___awmod)+02h
  4019  044A  3000               	movlw	high(0Ah)
  4020  044B  00A5               	movwf	(0+(?___awmod)+02h)+1
  4021  044C  120A  158A  279E   	fcall	___awmod
              120A  118A         
  4022  0451  1383               	bcf	status, 7	;select IRP bank0
  4023  0452  1283               	bcf	status, 5	;RP0=0, select bank0
  4024  0453  1303               	bcf	status, 6	;RP1=0, select bank0
  4025  0454  0823               	movf	(1+(?___awmod)),w
  4026  0455  01B1               	clrf	(count@f+1)
  4027  0456  07B1               	addwf	(count@f+1)
  4028  0457  0822               	movf	(0+(?___awmod)),w
  4029  0458  01B0               	clrf	(count@f)
  4030  0459  07B0               	addwf	(count@f)
  4031                           
  4032                           	line	46
  4033                           ;2 ADC.c: 46: command(0X80);
  4034  045A  3080               	movlw	(080h)
  4035  045B  120A  158A  275C   	fcall	_command
              120A  118A         
  4036                           	line	47
  4037                           ;2 ADC.c: 47: data(a+48);
  4038  0460  1283               	bcf	status, 5	;RP0=0, select bank0
  4039  0461  1303               	bcf	status, 6	;RP1=0, select bank0
  4040  0462  0832               	movf	(count@a),w
  4041  0463  3E30               	addlw	030h
  4042  0464  120A  158A  2768   	fcall	_data
              120A  118A         
  4043                           	line	48
  4044                           ;2 ADC.c: 48: data(c+48);
  4045  0469  1283               	bcf	status, 5	;RP0=0, select bank0
  4046  046A  1303               	bcf	status, 6	;RP1=0, select bank0
  4047  046B  0834               	movf	(count@c),w
  4048  046C  3E30               	addlw	030h
  4049  046D  120A  158A  2768   	fcall	_data
              120A  118A         
  4050                           	line	49
  4051                           ;2 ADC.c: 49: data(e+48);
  4052  0472  1283               	bcf	status, 5	;RP0=0, select bank0
  4053  0473  1303               	bcf	status, 6	;RP1=0, select bank0
  4054  0474  082E               	movf	(count@e),w
  4055  0475  3E30               	addlw	030h
  4056  0476  120A  158A  2768   	fcall	_data
              120A  118A         
  4057                           	line	50
  4058                           ;2 ADC.c: 50: data(f+48);
  4059  047B  1283               	bcf	status, 5	;RP0=0, select bank0
  4060  047C  1303               	bcf	status, 6	;RP1=0, select bank0
  4061  047D  0830               	movf	(count@f),w
  4062  047E  3E30               	addlw	030h
  4063  047F  120A  158A  2768   	fcall	_data
              120A  118A         
  4064                           	
  4065  0484                     l8:	
  4066  0484  0008               	return
  4067                           	opt stack 0
  4068                           GLOBAL	__end_of_count
  4069  0485                     	__end_of_count:
  4070                           ; =============== function _count ends ============
  4071                           
  4072                           psect	text121,local,class=CODE,delta=2
  4073                           global __ptext121
  4074  010A                     __ptext121:
  4075                           	line	51
  4076                           	signat	_count,4216
  4077                           	global	___ftpack
  4078                           
  4079                           ; *************** function ___ftpack *****************
  4080                           ; Defined at:
  4081                           ;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.70\sources\float.c"
  4082                           ; Parameters:    Size  Location     Type
  4083                           ;  arg             3    0[BANK0 ] unsigned um
  4084                           ;  exp             1    3[BANK0 ] unsigned char 
  4085                           ;  sign            1    4[BANK0 ] unsigned char 
  4086                           ; Auto vars:     Size  Location     Type
  4087                           ;		None
  4088                           ; Return value:  Size  Location     Type
  4089                           ;                  3    0[BANK0 ] float 
  4090                           ; Registers used:
  4091                           ;		wreg, status,2, status,0
  4092                           ; Tracked objects:
  4093                           ;		On entry : 0/0
  4094                           ;		On exit  : 0/0
  4095                           ;		Unchanged: 0/0
  4096                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4097                           ;      Locals:         3       5       0       0       0
  4098                           ;      Temp:     3
  4099                           ;      Total:    8
  4100                           ; This function calls:
  4101                           ;		Nothing
  4102                           ; This function is called by:
  4103                           ;		___ftdiv
  4104                           ;		___ftmul
  4105                           ;		___awtoft
  4106                           ; This function uses a non-reentrant model
  4107                           ; 
  4108                           psect	text121
  4109                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.70\sources\float.c"
  4110                           	line	63
  4111                           	global	__size_of___ftpack
  4112  007C                     	__size_of___ftpack	equ	__end_of___ftpack-___ftpack
  4113                           	
  4114  010A                     ___ftpack:	
  4115                           	opt stack 5
  4116                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4117                           	line	64
  4118                           	
  4119  010A                     l30000978:	
  4120  010A  1283               	bcf	status, 5	;RP0=0, select bank0
  4121  010B  1303               	bcf	status, 6	;RP1=0, select bank0
  4122  010C  0823               	movf	(___ftpack@exp),w
  4123  010D  1D03               	skipz
  4124  010E  2910               	goto	u940
  4125  010F  2917               	goto	l30000980
  4126  0110                     u940:
  4127                           	
  4128  0110                     l30000979:	
  4129  0110  0822               	movf	(___ftpack@arg+2),w
  4130  0111  0421               	iorwf	(___ftpack@arg+1),w
  4131  0112  0420               	iorwf	(___ftpack@arg),w
  4132  0113  1D03               	skipz
  4133  0114  2916               	goto	u951
  4134  0115  2917               	goto	u950
  4135  0116                     u951:
  4136  0116  292A               	goto	l30000983
  4137  0117                     u950:
  4138                           	
  4139  0117                     l30000980:	
  4140                           	line	65
  4141  0117  3000               	movlw	0x0
  4142  0118  00A0               	movwf	(?___ftpack)
  4143  0119  3000               	movlw	0x0
  4144  011A  00A1               	movwf	(?___ftpack+1)
  4145  011B  3000               	movlw	0x0
  4146  011C  00A2               	movwf	(?___ftpack+2)
  4147  011D  2985               	goto	l366
  4148                           	
  4149  011E                     l30000982:	
  4150                           	line	67
  4151  011E  3001               	movlw	(01h)
  4152  011F  00F0               	movwf	(??___ftpack+0+0)
  4153  0120  0870               	movf	(??___ftpack+0+0),w
  4154  0121  07A3               	addwf	(___ftpack@exp),f
  4155                           	line	68
  4156  0122  3001               	movlw	01h
  4157  0123                     u965:
  4158  0123  1003               	clrc
  4159  0124  0CA2               	rrf	(___ftpack@arg+2),f
  4160  0125  0CA1               	rrf	(___ftpack@arg+1),f
  4161  0126  0CA0               	rrf	(___ftpack@arg),f
  4162  0127  3EFF               	addlw	-1
  4163  0128  1D03               	skipz
  4164  0129  2923               	goto	u965
  4165                           
  4166                           	
  4167  012A                     l30000983:	
  4168                           	line	66
  4169  012A  30FE               	movlw	low highword(0FE0000h)
  4170  012B  0522               	andwf	(___ftpack@arg+2),w
  4171  012C  1D03               	btfss	status,2
  4172  012D  292F               	goto	u971
  4173  012E  2930               	goto	u970
  4174  012F                     u971:
  4175  012F  291E               	goto	l30000982
  4176  0130                     u970:
  4177  0130  294D               	goto	l371
  4178                           	
  4179  0131                     l30000984:	
  4180                           	line	71
  4181  0131  3001               	movlw	(01h)
  4182  0132  00F0               	movwf	(??___ftpack+0+0)
  4183  0133  0870               	movf	(??___ftpack+0+0),w
  4184  0134  07A3               	addwf	(___ftpack@exp),f
  4185                           	
  4186  0135                     l30000985:	
  4187                           	line	72
  4188  0135  3001               	movlw	01h
  4189  0136  07A0               	addwf	(___ftpack@arg),f
  4190  0137  3000               	movlw	0
  4191  0138  1103               	clrz
  4192  0139  1803               	skipnc
  4193  013A  3E01               	addlw	1
  4194  013B  1903               	skipnz
  4195  013C  293E               	goto	u981
  4196  013D  07A1               	addwf	(___ftpack@arg+1),f
  4197  013E                     u981:
  4198  013E  3000               	movlw	0
  4199  013F  1103               	clrz
  4200  0140  1803               	skipnc
  4201  0141  3E01               	addlw	1
  4202  0142  1903               	skipnz
  4203  0143  2945               	goto	u982
  4204  0144  07A2               	addwf	(___ftpack@arg+2),f
  4205  0145                     u982:
  4206                           
  4207                           	
  4208  0145                     l30000986:	
  4209                           	line	73
  4210  0145  3001               	movlw	01h
  4211  0146                     u995:
  4212  0146  1003               	clrc
  4213  0147  0CA2               	rrf	(___ftpack@arg+2),f
  4214  0148  0CA1               	rrf	(___ftpack@arg+1),f
  4215  0149  0CA0               	rrf	(___ftpack@arg),f
  4216  014A  3EFF               	addlw	-1
  4217  014B  1D03               	skipz
  4218  014C  2946               	goto	u995
  4219                           
  4220                           	
  4221  014D                     l371:	
  4222                           	line	70
  4223  014D  30FF               	movlw	low highword(0FF0000h)
  4224  014E  0522               	andwf	(___ftpack@arg+2),w
  4225  014F  1D03               	btfss	status,2
  4226  0150  2952               	goto	u1001
  4227  0151  2953               	goto	u1000
  4228  0152                     u1001:
  4229  0152  2931               	goto	l30000984
  4230  0153                     u1000:
  4231  0153  295E               	goto	l30000988
  4232                           	
  4233  0154                     l30000987:	
  4234                           	line	76
  4235  0154  3001               	movlw	low(01h)
  4236  0155  02A3               	subwf	(___ftpack@exp),f
  4237                           	line	77
  4238  0156  3001               	movlw	01h
  4239  0157                     u1015:
  4240  0157  1003               	clrc
  4241  0158  0DA0               	rlf	(___ftpack@arg),f
  4242  0159  0DA1               	rlf	(___ftpack@arg+1),f
  4243  015A  0DA2               	rlf	(___ftpack@arg+2),f
  4244  015B  3EFF               	addlw	-1
  4245  015C  1D03               	skipz
  4246  015D  2957               	goto	u1015
  4247                           	
  4248  015E                     l30000988:	
  4249                           	line	75
  4250  015E  1FA1               	btfss	(___ftpack@arg+1),(15)&7
  4251  015F  2961               	goto	u1021
  4252  0160  2962               	goto	u1020
  4253  0161                     u1021:
  4254  0161  2954               	goto	l30000987
  4255  0162                     u1020:
  4256                           	
  4257  0162                     l376:	
  4258                           	line	79
  4259  0162  1823               	btfsc	(___ftpack@exp),(0)&7
  4260  0163  2965               	goto	u1031
  4261  0164  2966               	goto	u1030
  4262  0165                     u1031:
  4263  0165  296C               	goto	l377
  4264  0166                     u1030:
  4265                           	
  4266  0166                     l30000989:	
  4267                           	line	80
  4268  0166  30FF               	movlw	0FFh
  4269  0167  05A0               	andwf	(___ftpack@arg),f
  4270  0168  307F               	movlw	07Fh
  4271  0169  05A1               	andwf	(___ftpack@arg+1),f
  4272  016A  30FF               	movlw	0FFh
  4273  016B  05A2               	andwf	(___ftpack@arg+2),f
  4274                           	
  4275  016C                     l377:	
  4276                           	line	81
  4277  016C  1003               	clrc
  4278  016D  0CA3               	rrf	(___ftpack@exp),f
  4279                           
  4280                           	
  4281  016E                     l30000990:	
  4282                           	line	82
  4283  016E  0823               	movf	(___ftpack@exp),w
  4284  016F  00F0               	movwf	(??___ftpack+0+0)
  4285  0170  01F1               	clrf	(??___ftpack+0+0+1)
  4286  0171  01F2               	clrf	(??___ftpack+0+0+2)
  4287  0172  3010               	movlw	010h
  4288  0173                     u1045:
  4289  0173  1003               	clrc
  4290  0174  0DF0               	rlf	(??___ftpack+0+0),f
  4291  0175  0DF1               	rlf	(??___ftpack+0+1),f
  4292  0176  0DF2               	rlf	(??___ftpack+0+2),f
  4293  0177                     u1040:
  4294  0177  3EFF               	addlw	-1
  4295  0178  1D03               	skipz
  4296  0179  2973               	goto	u1045
  4297  017A  0870               	movf	0+(??___ftpack+0+0),w
  4298  017B  04A0               	iorwf	(___ftpack@arg),f
  4299  017C  0871               	movf	1+(??___ftpack+0+0),w
  4300  017D  04A1               	iorwf	(___ftpack@arg+1),f
  4301  017E  0872               	movf	2+(??___ftpack+0+0),w
  4302  017F  04A2               	iorwf	(___ftpack@arg+2),f
  4303                           	
  4304  0180                     l30000991:	
  4305                           	line	83
  4306  0180  0824               	movf	(___ftpack@sign),w
  4307  0181  1D03               	skipz
  4308  0182  2984               	goto	u1050
  4309  0183  2985               	goto	l378
  4310  0184                     u1050:
  4311                           	
  4312  0184                     l30000992:	
  4313                           	line	84
  4314  0184  17A2               	bsf	(___ftpack@arg)+(23/8),(23)&7
  4315                           	
  4316  0185                     l378:	
  4317                           	line	85
  4318                           	
  4319  0185                     l366:	
  4320  0185  0008               	return
  4321                           	opt stack 0
  4322                           GLOBAL	__end_of___ftpack
  4323  0186                     	__end_of___ftpack:
  4324                           ; =============== function ___ftpack ends ============
  4325                           
  4326                           psect	text122,local,class=CODE,delta=2
  4327                           global __ptext122
  4328  0F68                     __ptext122:
  4329                           	line	86
  4330                           	signat	___ftpack,12411
  4331                           	global	_data
  4332                           
  4333                           ; *************** function _data *****************
  4334                           ; Defined at:
  4335                           ;		line 31 in file "C:\Users\gowth\Documents\PIC Programs\ADC\2 ADC\2 ADC.c"
  4336                           ; Parameters:    Size  Location     Type
  4337                           ;  data            1    wreg     unsigned char 
  4338                           ; Auto vars:     Size  Location     Type
  4339                           ;  data            1    2[COMMON] unsigned char 
  4340                           ; Return value:  Size  Location     Type
  4341                           ;		None               void
  4342                           ; Registers used:
  4343                           ;		wreg, status,2, status,0, pclath, cstack
  4344                           ; Tracked objects:
  4345                           ;		On entry : 0/0
  4346                           ;		On exit  : 0/0
  4347                           ;		Unchanged: 0/0
  4348                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4349                           ;      Locals:         1       0       0       0       0
  4350                           ;      Temp:     0
  4351                           ;      Total:    1
  4352                           ; This function calls:
  4353                           ;		_pulse
  4354                           ; This function is called by:
  4355                           ;		_count
  4356                           ;		_count1
  4357                           ;		_voltage
  4358                           ;		_voltage1
  4359                           ;		_main
  4360                           ; This function uses a non-reentrant model
  4361                           ; 
  4362                           psect	text122
  4363                           	file	"C:\Users\gowth\Documents\PIC Programs\ADC\2 ADC\2 ADC.c"
  4364                           	line	31
  4365                           	global	__size_of_data
  4366  000C                     	__size_of_data	equ	__end_of_data-_data
  4367                           ;2 ADC.c: 30: void data(char data)
  4368                           ;2 ADC.c: 31: {
  4369                           	
  4370  0F68                     _data:	
  4371                           	opt stack 5
  4372                           ; Regs used in _data: [wreg+status,2+status,0+pclath+cstack]
  4373                           ;data@data stored from wreg
  4374  0F68  00F2               	movwf	(data@data)
  4375                           	
  4376  0F69                     l30001093:	
  4377                           	line	32
  4378                           ;2 ADC.c: 32: RE0=1;
  4379  0F69  1283               	bcf	status, 5	;RP0=0, select bank0
  4380  0F6A  1303               	bcf	status, 6	;RP1=0, select bank0
  4381  0F6B  1409               	bsf	(72/8),(72)&7
  4382                           	
  4383  0F6C                     l30001094:	
  4384                           	line	33
  4385                           ;2 ADC.c: 33: PORTD=data;
  4386  0F6C  0872               	movf	(data@data),w
  4387  0F6D  0088               	movwf	(8)	;volatile
  4388                           	
  4389  0F6E                     l30001095:	
  4390                           	line	34
  4391                           ;2 ADC.c: 34: pulse();
  4392  0F6E  120A  158A  2785   	fcall	_pulse
              120A  158A         
  4393                           	
  4394  0F73                     l7:	
  4395  0F73  0008               	return
  4396                           	opt stack 0
  4397                           GLOBAL	__end_of_data
  4398  0F74                     	__end_of_data:
  4399                           ; =============== function _data ends ============
  4400                           
  4401                           psect	text123,local,class=CODE,delta=2
  4402                           global __ptext123
  4403  0F5C                     __ptext123:
  4404                           	line	35
  4405                           	signat	_data,4216
  4406                           	global	_command
  4407                           
  4408                           ; *************** function _command *****************
  4409                           ; Defined at:
  4410                           ;		line 24 in file "C:\Users\gowth\Documents\PIC Programs\ADC\2 ADC\2 ADC.c"
  4411                           ; Parameters:    Size  Location     Type
  4412                           ;  data            1    wreg     unsigned char 
  4413                           ; Auto vars:     Size  Location     Type
  4414                           ;  data            1    2[COMMON] unsigned char 
  4415                           ; Return value:  Size  Location     Type
  4416                           ;		None               void
  4417                           ; Registers used:
  4418                           ;		wreg, status,2, status,0, pclath, cstack
  4419                           ; Tracked objects:
  4420                           ;		On entry : 0/0
  4421                           ;		On exit  : 0/0
  4422                           ;		Unchanged: 0/0
  4423                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4424                           ;      Locals:         1       0       0       0       0
  4425                           ;      Temp:     0
  4426                           ;      Total:    1
  4427                           ; This function calls:
  4428                           ;		_pulse
  4429                           ; This function is called by:
  4430                           ;		_count
  4431                           ;		_count1
  4432                           ;		_voltage
  4433                           ;		_voltage1
  4434                           ;		_main
  4435                           ; This function uses a non-reentrant model
  4436                           ; 
  4437                           psect	text123
  4438                           	file	"C:\Users\gowth\Documents\PIC Programs\ADC\2 ADC\2 ADC.c"
  4439                           	line	24
  4440                           	global	__size_of_command
  4441  000C                     	__size_of_command	equ	__end_of_command-_command
  4442                           ;2 ADC.c: 23: void command(char data)
  4443                           ;2 ADC.c: 24: {
  4444                           	
  4445  0F5C                     _command:	
  4446                           	opt stack 5
  4447                           ; Regs used in _command: [wreg+status,2+status,0+pclath+cstack]
  4448                           ;command@data stored from wreg
  4449  0F5C  00F2               	movwf	(command@data)
  4450                           	
  4451  0F5D                     l30001090:	
  4452                           	line	25
  4453                           ;2 ADC.c: 25: RE0=0;
  4454  0F5D  1283               	bcf	status, 5	;RP0=0, select bank0
  4455  0F5E  1303               	bcf	status, 6	;RP1=0, select bank0
  4456  0F5F  1009               	bcf	(72/8),(72)&7
  4457                           	
  4458  0F60                     l30001091:	
  4459                           	line	26
  4460                           ;2 ADC.c: 26: PORTD=data;
  4461  0F60  0872               	movf	(command@data),w
  4462  0F61  0088               	movwf	(8)	;volatile
  4463                           	
  4464  0F62                     l30001092:	
  4465                           	line	27
  4466                           ;2 ADC.c: 27: pulse();
  4467  0F62  120A  158A  2785   	fcall	_pulse
              120A  158A         
  4468                           	
  4469  0F67                     l6:	
  4470  0F67  0008               	return
  4471                           	opt stack 0
  4472                           GLOBAL	__end_of_command
  4473  0F68                     	__end_of_command:
  4474                           ; =============== function _command ends ============
  4475                           
  4476                           psect	text124,local,class=CODE,delta=2
  4477                           global __ptext124
  4478  0F9E                     __ptext124:
  4479                           	line	28
  4480                           	signat	_command,4216
  4481                           	global	___awmod
  4482                           
  4483                           ; *************** function ___awmod *****************
  4484                           ; Defined at:
  4485                           ;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.70\sources\awmod.c"
  4486                           ; Parameters:    Size  Location     Type
  4487                           ;  dividend        2    2[BANK0 ] int 
  4488                           ;  divisor         2    4[BANK0 ] int 
  4489                           ; Auto vars:     Size  Location     Type
  4490                           ;  sign            1    0[BANK0 ] unsigned char 
  4491                           ;  counter         1    1[BANK0 ] unsigned char 
  4492                           ; Return value:  Size  Location     Type
  4493                           ;                  2    2[BANK0 ] int 
  4494                           ; Registers used:
  4495                           ;		wreg, status,2, status,0
  4496                           ; Tracked objects:
  4497                           ;		On entry : 0/0
  4498                           ;		On exit  : 0/0
  4499                           ;		Unchanged: 0/0
  4500                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4501                           ;      Locals:         1       6       0       0       0
  4502                           ;      Temp:     1
  4503                           ;      Total:    7
  4504                           ; This function calls:
  4505                           ;		Nothing
  4506                           ; This function is called by:
  4507                           ;		_count
  4508                           ;		_count1
  4509                           ;		_voltage
  4510                           ;		_voltage1
  4511                           ; This function uses a non-reentrant model
  4512                           ; 
  4513                           psect	text124
  4514                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.70\sources\awmod.c"
  4515                           	line	5
  4516                           	global	__size_of___awmod
  4517  0062                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  4518                           	
  4519  0F9E                     ___awmod:	
  4520                           	opt stack 5
  4521                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4522                           	line	8
  4523                           	
  4524  0F9E                     l30001023:	
  4525  0F9E  1003               	clrc
  4526  0F9F  3000               	movlw	0
  4527  0FA0  1803               	btfsc	status,0
  4528  0FA1  3001               	movlw	1
  4529  0FA2  1283               	bcf	status, 5	;RP0=0, select bank0
  4530  0FA3  1303               	bcf	status, 6	;RP1=0, select bank0
  4531  0FA4  00A0               	movwf	(___awmod@sign)
  4532                           	
  4533  0FA5                     l30001024:	
  4534                           	line	9
  4535  0FA5  1FA3               	btfss	(___awmod@dividend+1),7
  4536  0FA6  2FA8               	goto	u1211
  4537  0FA7  2FA9               	goto	u1210
  4538  0FA8                     u1211:
  4539  0FA8  2FB1               	goto	l30001026
  4540  0FA9                     u1210:
  4541                           	
  4542  0FA9                     l30001025:	
  4543                           	line	10
  4544  0FA9  09A2               	comf	(___awmod@dividend),f
  4545  0FAA  09A3               	comf	(___awmod@dividend+1),f
  4546  0FAB  0AA2               	incf	(___awmod@dividend),f
  4547  0FAC  1903               	skipnz
  4548  0FAD  0AA3               	incf	(___awmod@dividend+1),f
  4549                           	line	11
  4550  0FAE  01A0               	clrf	(___awmod@sign)
  4551  0FAF  1403               	bsf	status,0
  4552  0FB0  0DA0               	rlf	(___awmod@sign),f
  4553                           	
  4554  0FB1                     l30001026:	
  4555                           	line	13
  4556  0FB1  1FA5               	btfss	(___awmod@divisor+1),7
  4557  0FB2  2FB4               	goto	u1221
  4558  0FB3  2FB5               	goto	u1220
  4559  0FB4                     u1221:
  4560  0FB4  2FBA               	goto	l30001028
  4561  0FB5                     u1220:
  4562                           	
  4563  0FB5                     l30001027:	
  4564                           	line	14
  4565  0FB5  09A4               	comf	(___awmod@divisor),f
  4566  0FB6  09A5               	comf	(___awmod@divisor+1),f
  4567  0FB7  0AA4               	incf	(___awmod@divisor),f
  4568  0FB8  1903               	skipnz
  4569  0FB9  0AA5               	incf	(___awmod@divisor+1),f
  4570                           	
  4571  0FBA                     l30001028:	
  4572                           	line	15
  4573  0FBA  0825               	movf	(___awmod@divisor+1),w
  4574  0FBB  0424               	iorwf	(___awmod@divisor),w
  4575  0FBC  1903               	skipnz
  4576  0FBD  2FBF               	goto	u1231
  4577  0FBE  2FC0               	goto	u1230
  4578  0FBF                     u1231:
  4579  0FBF  2FF0               	goto	l30001037
  4580  0FC0                     u1230:
  4581                           	
  4582  0FC0                     l30001029:	
  4583                           	line	16
  4584  0FC0  01A1               	clrf	(___awmod@counter)
  4585  0FC1  1403               	bsf	status,0
  4586  0FC2  0DA1               	rlf	(___awmod@counter),f
  4587  0FC3  2FCF               	goto	l30001032
  4588                           	
  4589  0FC4                     l30001030:	
  4590                           	line	18
  4591  0FC4  3001               	movlw	01h
  4592  0FC5                     u1245:
  4593  0FC5  1003               	clrc
  4594  0FC6  0DA4               	rlf	(___awmod@divisor),f
  4595  0FC7  0DA5               	rlf	(___awmod@divisor+1),f
  4596  0FC8  3EFF               	addlw	-1
  4597  0FC9  1D03               	skipz
  4598  0FCA  2FC5               	goto	u1245
  4599                           	
  4600  0FCB                     l30001031:	
  4601                           	line	19
  4602  0FCB  3001               	movlw	(01h)
  4603  0FCC  00F0               	movwf	(??___awmod+0+0)
  4604  0FCD  0870               	movf	(??___awmod+0+0),w
  4605  0FCE  07A1               	addwf	(___awmod@counter),f
  4606                           	
  4607  0FCF                     l30001032:	
  4608                           	line	17
  4609  0FCF  1FA5               	btfss	(___awmod@divisor+1),(15)&7
  4610  0FD0  2FD2               	goto	u1251
  4611  0FD1  2FD3               	goto	u1250
  4612  0FD2                     u1251:
  4613  0FD2  2FC4               	goto	l30001030
  4614  0FD3                     u1250:
  4615                           	
  4616  0FD3                     l30001033:	
  4617                           	line	22
  4618  0FD3  0825               	movf	(___awmod@divisor+1),w
  4619  0FD4  0223               	subwf	(___awmod@dividend+1),w
  4620  0FD5  1D03               	skipz
  4621  0FD6  2FD9               	goto	u1265
  4622  0FD7  0824               	movf	(___awmod@divisor),w
  4623  0FD8  0222               	subwf	(___awmod@dividend),w
  4624  0FD9                     u1265:
  4625  0FD9  1C03               	skipc
  4626  0FDA  2FDC               	goto	u1261
  4627  0FDB  2FDD               	goto	u1260
  4628  0FDC                     u1261:
  4629  0FDC  2FE3               	goto	l30001035
  4630  0FDD                     u1260:
  4631                           	
  4632  0FDD                     l30001034:	
  4633                           	line	23
  4634  0FDD  0824               	movf	(___awmod@divisor),w
  4635  0FDE  02A2               	subwf	(___awmod@dividend),f
  4636  0FDF  0825               	movf	(___awmod@divisor+1),w
  4637  0FE0  1C03               	skipc
  4638  0FE1  03A3               	decf	(___awmod@dividend+1),f
  4639  0FE2  02A3               	subwf	(___awmod@dividend+1),f
  4640                           	
  4641  0FE3                     l30001035:	
  4642                           	line	24
  4643  0FE3  3001               	movlw	01h
  4644  0FE4                     u1275:
  4645  0FE4  1003               	clrc
  4646  0FE5  0CA5               	rrf	(___awmod@divisor+1),f
  4647  0FE6  0CA4               	rrf	(___awmod@divisor),f
  4648  0FE7  3EFF               	addlw	-1
  4649  0FE8  1D03               	skipz
  4650  0FE9  2FE4               	goto	u1275
  4651                           	
  4652  0FEA                     l30001036:	
  4653                           	line	25
  4654  0FEA  3001               	movlw	low(01h)
  4655  0FEB  02A1               	subwf	(___awmod@counter),f
  4656  0FEC  1D03               	btfss	status,2
  4657  0FED  2FEF               	goto	u1281
  4658  0FEE  2FF0               	goto	u1280
  4659  0FEF                     u1281:
  4660  0FEF  2FD3               	goto	l30001033
  4661  0FF0                     u1280:
  4662                           	
  4663  0FF0                     l30001037:	
  4664                           	line	27
  4665  0FF0  0820               	movf	(___awmod@sign),w
  4666  0FF1  1D03               	skipz
  4667  0FF2  2FF4               	goto	u1290
  4668  0FF3  2FF9               	goto	l30001039
  4669  0FF4                     u1290:
  4670                           	
  4671  0FF4                     l30001038:	
  4672                           	line	28
  4673  0FF4  09A2               	comf	(___awmod@dividend),f
  4674  0FF5  09A3               	comf	(___awmod@dividend+1),f
  4675  0FF6  0AA2               	incf	(___awmod@dividend),f
  4676  0FF7  1903               	skipnz
  4677  0FF8  0AA3               	incf	(___awmod@dividend+1),f
  4678                           	
  4679  0FF9                     l30001039:	
  4680                           	line	29
  4681  0FF9  0823               	movf	(___awmod@dividend+1),w
  4682  0FFA  01A3               	clrf	(?___awmod+1)
  4683  0FFB  07A3               	addwf	(?___awmod+1)
  4684  0FFC  0822               	movf	(___awmod@dividend),w
  4685  0FFD  01A2               	clrf	(?___awmod)
  4686  0FFE  07A2               	addwf	(?___awmod)
  4687                           
  4688                           	
  4689  0FFF                     l261:	
  4690  0FFF  0008               	return
  4691                           	opt stack 0
  4692                           GLOBAL	__end_of___awmod
  4693  1000                     	__end_of___awmod:
  4694                           ; =============== function ___awmod ends ============
  4695                           
  4696                           psect	text125,local,class=CODE,delta=2
  4697                           global __ptext125
  4698  0098                     __ptext125:
  4699                           	line	30
  4700                           	signat	___awmod,8314
  4701                           	global	___awdiv
  4702                           
  4703                           ; *************** function ___awdiv *****************
  4704                           ; Defined at:
  4705                           ;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.70\sources\awdiv.c"
  4706                           ; Parameters:    Size  Location     Type
  4707                           ;  dividend        2   10[BANK0 ] int 
  4708                           ;  divisor         2   12[BANK0 ] int 
  4709                           ; Auto vars:     Size  Location     Type
  4710                           ;  quotient        2    8[BANK0 ] int 
  4711                           ;  sign            1    7[BANK0 ] unsigned char 
  4712                           ;  counter         1    6[BANK0 ] unsigned char 
  4713                           ; Return value:  Size  Location     Type
  4714                           ;                  2   10[BANK0 ] int 
  4715                           ; Registers used:
  4716                           ;		wreg, status,2, status,0
  4717                           ; Tracked objects:
  4718                           ;		On entry : 0/0
  4719                           ;		On exit  : 0/0
  4720                           ;		Unchanged: 0/0
  4721                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4722                           ;      Locals:         1       8       0       0       0
  4723                           ;      Temp:     1
  4724                           ;      Total:    9
  4725                           ; This function calls:
  4726                           ; This function is called by:
  4727                           ;		_count
  4728                           ;		_count1
  4729                           ;		_voltage
  4730                           ;		_voltage1
  4731                           ; This function uses a non-reentrant model
  4732                           ; 
  4733                           psect	text125
  4734                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.70\sources\awdiv.c"
  4735                           	line	5
  4736                           	global	__size_of___awdiv
  4737  0072                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  4738                           	
  4739  0098                     ___awdiv:	
  4740                           	opt stack 5
  4741                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4742                           	line	9
  4743                           	
  4744  0098                     l30001071:	
  4745  0098  1003               	clrc
  4746  0099  3000               	movlw	0
  4747  009A  1803               	btfsc	status,0
  4748  009B  3001               	movlw	1
  4749  009C  1283               	bcf	status, 5	;RP0=0, select bank0
  4750  009D  1303               	bcf	status, 6	;RP1=0, select bank0
  4751  009E  00A7               	movwf	(___awdiv@sign)
  4752                           	
  4753  009F                     l30001072:	
  4754                           	line	10
  4755  009F  1FAD               	btfss	(___awdiv@divisor+1),7
  4756  00A0  28A2               	goto	u1401
  4757  00A1  28A3               	goto	u1400
  4758  00A2                     u1401:
  4759  00A2  28AB               	goto	l30001074
  4760  00A3                     u1400:
  4761                           	
  4762  00A3                     l30001073:	
  4763                           	line	11
  4764  00A3  09AC               	comf	(___awdiv@divisor),f
  4765  00A4  09AD               	comf	(___awdiv@divisor+1),f
  4766  00A5  0AAC               	incf	(___awdiv@divisor),f
  4767  00A6  1903               	skipnz
  4768  00A7  0AAD               	incf	(___awdiv@divisor+1),f
  4769                           	line	12
  4770  00A8  01A7               	clrf	(___awdiv@sign)
  4771  00A9  1403               	bsf	status,0
  4772  00AA  0DA7               	rlf	(___awdiv@sign),f
  4773                           	
  4774  00AB                     l30001074:	
  4775                           	line	14
  4776  00AB  1FAB               	btfss	(___awdiv@dividend+1),7
  4777  00AC  28AE               	goto	u1411
  4778  00AD  28AF               	goto	u1410
  4779  00AE                     u1411:
  4780  00AE  28B8               	goto	l183
  4781  00AF                     u1410:
  4782                           	
  4783  00AF                     l30001075:	
  4784                           	line	15
  4785  00AF  09AA               	comf	(___awdiv@dividend),f
  4786  00B0  09AB               	comf	(___awdiv@dividend+1),f
  4787  00B1  0AAA               	incf	(___awdiv@dividend),f
  4788  00B2  1903               	skipnz
  4789  00B3  0AAB               	incf	(___awdiv@dividend+1),f
  4790                           	
  4791  00B4                     l30001076:	
  4792                           	line	16
  4793  00B4  3001               	movlw	(01h)
  4794  00B5  00F1               	movwf	(??___awdiv+0+0)
  4795  00B6  0871               	movf	(??___awdiv+0+0),w
  4796  00B7  06A7               	xorwf	(___awdiv@sign),f
  4797                           	
  4798  00B8                     l183:	
  4799                           	line	18
  4800  00B8  3000               	movlw	low(0)
  4801  00B9  00A8               	movwf	(___awdiv@quotient)
  4802  00BA  3000               	movlw	high(0)
  4803  00BB  00A9               	movwf	((___awdiv@quotient))+1
  4804                           	line	19
  4805  00BC  082D               	movf	(___awdiv@divisor+1),w
  4806  00BD  042C               	iorwf	(___awdiv@divisor),w
  4807  00BE  1903               	skipnz
  4808  00BF  28C1               	goto	u1421
  4809  00C0  28C2               	goto	u1420
  4810  00C1                     u1421:
  4811  00C1  28FA               	goto	l30001086
  4812  00C2                     u1420:
  4813                           	
  4814  00C2                     l30001077:	
  4815                           	line	20
  4816  00C2  01A6               	clrf	(___awdiv@counter)
  4817  00C3  1403               	bsf	status,0
  4818  00C4  0DA6               	rlf	(___awdiv@counter),f
  4819  00C5  28D1               	goto	l30001080
  4820                           	
  4821  00C6                     l30001078:	
  4822                           	line	22
  4823  00C6  3001               	movlw	01h
  4824  00C7                     u1435:
  4825  00C7  1003               	clrc
  4826  00C8  0DAC               	rlf	(___awdiv@divisor),f
  4827  00C9  0DAD               	rlf	(___awdiv@divisor+1),f
  4828  00CA  3EFF               	addlw	-1
  4829  00CB  1D03               	skipz
  4830  00CC  28C7               	goto	u1435
  4831                           	
  4832  00CD                     l30001079:	
  4833                           	line	23
  4834  00CD  3001               	movlw	(01h)
  4835  00CE  00F1               	movwf	(??___awdiv+0+0)
  4836  00CF  0871               	movf	(??___awdiv+0+0),w
  4837  00D0  07A6               	addwf	(___awdiv@counter),f
  4838                           	
  4839  00D1                     l30001080:	
  4840                           	line	21
  4841  00D1  1FAD               	btfss	(___awdiv@divisor+1),(15)&7
  4842  00D2  28D4               	goto	u1441
  4843  00D3  28D5               	goto	u1440
  4844  00D4                     u1441:
  4845  00D4  28C6               	goto	l30001078
  4846  00D5                     u1440:
  4847                           	
  4848  00D5                     l30001081:	
  4849                           	line	26
  4850  00D5  3001               	movlw	01h
  4851  00D6                     u1455:
  4852  00D6  1003               	clrc
  4853  00D7  0DA8               	rlf	(___awdiv@quotient),f
  4854  00D8  0DA9               	rlf	(___awdiv@quotient+1),f
  4855  00D9  3EFF               	addlw	-1
  4856  00DA  1D03               	skipz
  4857  00DB  28D6               	goto	u1455
  4858                           	line	27
  4859  00DC  082D               	movf	(___awdiv@divisor+1),w
  4860  00DD  022B               	subwf	(___awdiv@dividend+1),w
  4861  00DE  1D03               	skipz
  4862  00DF  28E2               	goto	u1465
  4863  00E0  082C               	movf	(___awdiv@divisor),w
  4864  00E1  022A               	subwf	(___awdiv@dividend),w
  4865  00E2                     u1465:
  4866  00E2  1C03               	skipc
  4867  00E3  28E5               	goto	u1461
  4868  00E4  28E6               	goto	u1460
  4869  00E5                     u1461:
  4870  00E5  28ED               	goto	l30001084
  4871  00E6                     u1460:
  4872                           	
  4873  00E6                     l30001082:	
  4874                           	line	28
  4875  00E6  082C               	movf	(___awdiv@divisor),w
  4876  00E7  02AA               	subwf	(___awdiv@dividend),f
  4877  00E8  082D               	movf	(___awdiv@divisor+1),w
  4878  00E9  1C03               	skipc
  4879  00EA  03AB               	decf	(___awdiv@dividend+1),f
  4880  00EB  02AB               	subwf	(___awdiv@dividend+1),f
  4881                           	
  4882  00EC                     l30001083:	
  4883                           	line	29
  4884  00EC  1428               	bsf	(___awdiv@quotient)+(0/8),(0)&7
  4885                           	
  4886  00ED                     l30001084:	
  4887                           	line	31
  4888  00ED  3001               	movlw	01h
  4889  00EE                     u1475:
  4890  00EE  1003               	clrc
  4891  00EF  0CAD               	rrf	(___awdiv@divisor+1),f
  4892  00F0  0CAC               	rrf	(___awdiv@divisor),f
  4893  00F1  3EFF               	addlw	-1
  4894  00F2  1D03               	skipz
  4895  00F3  28EE               	goto	u1475
  4896                           	
  4897  00F4                     l30001085:	
  4898                           	line	32
  4899  00F4  3001               	movlw	low(01h)
  4900  00F5  02A6               	subwf	(___awdiv@counter),f
  4901  00F6  1D03               	btfss	status,2
  4902  00F7  28F9               	goto	u1481
  4903  00F8  28FA               	goto	u1480
  4904  00F9                     u1481:
  4905  00F9  28D5               	goto	l30001081
  4906  00FA                     u1480:
  4907                           	
  4908  00FA                     l30001086:	
  4909                           	line	34
  4910  00FA  0827               	movf	(___awdiv@sign),w
  4911  00FB  1D03               	skipz
  4912  00FC  28FE               	goto	u1490
  4913  00FD  2903               	goto	l30001088
  4914  00FE                     u1490:
  4915                           	
  4916  00FE                     l30001087:	
  4917                           	line	35
  4918  00FE  09A8               	comf	(___awdiv@quotient),f
  4919  00FF  09A9               	comf	(___awdiv@quotient+1),f
  4920  0100  0AA8               	incf	(___awdiv@quotient),f
  4921  0101  1903               	skipnz
  4922  0102  0AA9               	incf	(___awdiv@quotient+1),f
  4923                           	
  4924  0103                     l30001088:	
  4925                           	line	36
  4926  0103  0829               	movf	(___awdiv@quotient+1),w
  4927  0104  01AB               	clrf	(?___awdiv+1)
  4928  0105  07AB               	addwf	(?___awdiv+1)
  4929  0106  0828               	movf	(___awdiv@quotient),w
  4930  0107  01AA               	clrf	(?___awdiv)
  4931  0108  07AA               	addwf	(?___awdiv)
  4932                           
  4933                           	
  4934  0109                     l181:	
  4935  0109  0008               	return
  4936                           	opt stack 0
  4937                           GLOBAL	__end_of___awdiv
  4938  010A                     	__end_of___awdiv:
  4939                           ; =============== function ___awdiv ends ============
  4940                           
  4941                           psect	text126,local,class=CODE,delta=2
  4942                           global __ptext126
  4943  0F85                     __ptext126:
  4944                           	line	37
  4945                           	signat	___awdiv,8314
  4946                           	global	_pulse
  4947                           
  4948                           ; *************** function _pulse *****************
  4949                           ; Defined at:
  4950                           ;		line 16 in file "C:\Users\gowth\Documents\PIC Programs\ADC\2 ADC\2 ADC.c"
  4951                           ; Parameters:    Size  Location     Type
  4952                           ;		None
  4953                           ; Auto vars:     Size  Location     Type
  4954                           ;		None
  4955                           ; Return value:  Size  Location     Type
  4956                           ;		None               void
  4957                           ; Registers used:
  4958                           ;		wreg, status,2, status,0, pclath, cstack
  4959                           ; Tracked objects:
  4960                           ;		On entry : 0/0
  4961                           ;		On exit  : 0/0
  4962                           ;		Unchanged: 0/0
  4963                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4964                           ;      Locals:         0       0       0       0       0
  4965                           ;      Temp:     0
  4966                           ;      Total:    0
  4967                           ; This function calls:
  4968                           ;		_delay
  4969                           ; This function is called by:
  4970                           ;		_command
  4971                           ;		_data
  4972                           ; This function uses a non-reentrant model
  4973                           ; 
  4974                           psect	text126
  4975                           	file	"C:\Users\gowth\Documents\PIC Programs\ADC\2 ADC\2 ADC.c"
  4976                           	line	16
  4977                           	global	__size_of_pulse
  4978  0019                     	__size_of_pulse	equ	__end_of_pulse-_pulse
  4979                           ;2 ADC.c: 15: void pulse()
  4980                           ;2 ADC.c: 16: {
  4981                           	
  4982  0F85                     _pulse:	
  4983                           	opt stack 4
  4984                           ; Regs used in _pulse: [wreg+status,2+status,0+pclath+cstack]
  4985                           	line	17
  4986                           	
  4987  0F85                     l30001096:	
  4988                           ;2 ADC.c: 17: RE1=1;
  4989  0F85  1283               	bcf	status, 5	;RP0=0, select bank0
  4990  0F86  1303               	bcf	status, 6	;RP1=0, select bank0
  4991  0F87  1489               	bsf	(73/8),(73)&7
  4992                           	
  4993  0F88                     l30001097:	
  4994                           	line	18
  4995                           ;2 ADC.c: 18: delay(1000);
  4996  0F88  30E8               	movlw	low(03E8h)
  4997  0F89  00F0               	movwf	(?_delay)
  4998  0F8A  3003               	movlw	high(03E8h)
  4999  0F8B  00F1               	movwf	((?_delay))+1
  5000  0F8C  120A  158A  2774   	fcall	_delay
              120A  158A         
  5001                           	
  5002  0F91                     l30001098:	
  5003                           	line	19
  5004                           ;2 ADC.c: 19: RE1=0;
  5005  0F91  1283               	bcf	status, 5	;RP0=0, select bank0
  5006  0F92  1303               	bcf	status, 6	;RP1=0, select bank0
  5007  0F93  1089               	bcf	(73/8),(73)&7
  5008                           	line	20
  5009                           ;2 ADC.c: 20: delay(1000);
  5010  0F94  30E8               	movlw	low(03E8h)
  5011  0F95  00F0               	movwf	(?_delay)
  5012  0F96  3003               	movlw	high(03E8h)
  5013  0F97  00F1               	movwf	((?_delay))+1
  5014  0F98  120A  158A  2774   	fcall	_delay
              120A  158A         
  5015                           	
  5016  0F9D                     l5:	
  5017  0F9D  0008               	return
  5018                           	opt stack 0
  5019                           GLOBAL	__end_of_pulse
  5020  0F9E                     	__end_of_pulse:
  5021                           ; =============== function _pulse ends ============
  5022                           
  5023                           psect	text127,local,class=CODE,delta=2
  5024                           global __ptext127
  5025  0F74                     __ptext127:
  5026                           	line	21
  5027                           	signat	_pulse,88
  5028                           	global	_delay
  5029                           
  5030                           ; *************** function _delay *****************
  5031                           ; Defined at:
  5032                           ;		line 11 in file "C:\Users\gowth\Documents\PIC Programs\ADC\2 ADC\2 ADC.c"
  5033                           ; Parameters:    Size  Location     Type
  5034                           ;  x               2    0[COMMON] int 
  5035                           ; Auto vars:     Size  Location     Type
  5036                           ;		None
  5037                           ; Return value:  Size  Location     Type
  5038                           ;		None               void
  5039                           ; Registers used:
  5040                           ;		wreg
  5041                           ; Tracked objects:
  5042                           ;		On entry : 0/0
  5043                           ;		On exit  : 0/0
  5044                           ;		Unchanged: 0/0
  5045                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5046                           ;      Locals:         2       0       0       0       0
  5047                           ;      Temp:     0
  5048                           ;      Total:    2
  5049                           ; This function calls:
  5050                           ;		Nothing
  5051                           ; This function is called by:
  5052                           ;		_pulse
  5053                           ; This function uses a non-reentrant model
  5054                           ; 
  5055                           psect	text127
  5056                           	file	"C:\Users\gowth\Documents\PIC Programs\ADC\2 ADC\2 ADC.c"
  5057                           	line	11
  5058                           	global	__size_of_delay
  5059  0011                     	__size_of_delay	equ	__end_of_delay-_delay
  5060                           ;pic16f887.h: 19: volatile unsigned char INDF @ 0x000;
  5061                           ;pic16f887.h: 20: volatile unsigned char TMR0 @ 0x001;
  5062                           ;pic16f887.h: 21: volatile unsigned char PCL @ 0x002;
  5063                           ;pic16f887.h: 22: volatile unsigned char STATUS @ 0x003;
  5064                           ;pic16f887.h: 23: unsigned char FSR @ 0x004;
  5065                           ;pic16f887.h: 24: volatile unsigned char PORTA @ 0x005;
  5066                           ;pic16f887.h: 25: volatile unsigned char PORTB @ 0x006;
  5067                           ;pic16f887.h: 26: volatile unsigned char PORTC @ 0x007;
  5068                           ;pic16f887.h: 28: volatile unsigned char PORTD @ 0x008;
  5069                           ;pic16f887.h: 30: volatile unsigned char PORTE @ 0x009;
  5070                           	
  5071  0F74                     _delay:	
  5072                           	opt stack 3
  5073                           ; Regs used in _delay: [wreg]
  5074                           	
  5075  0F74                     l30001099:	
  5076                           	
  5077  0F74                     l30001100:	
  5078                           	line	12
  5079  0F74  30FF               	movlw	low(-1)
  5080  0F75  07F0               	addwf	(delay@x),f
  5081  0F76  1803               	skipnc
  5082  0F77  0AF1               	incf	(delay@x+1),f
  5083  0F78  30FF               	movlw	high(-1)
  5084  0F79  07F1               	addwf	(delay@x+1),f
  5085  0F7A  30FF               	movlw	high(-1)
  5086  0F7B  0671               	xorwf	((delay@x+1))&07fh,w
  5087  0F7C  1D03               	skipz
  5088  0F7D  2F80               	goto	u1505
  5089  0F7E  30FF               	movlw	low(-1)
  5090  0F7F  0670               	xorwf	((delay@x))&07fh,w
  5091  0F80                     u1505:
  5092                           
  5093  0F80  1D03               	skipz
  5094  0F81  2F83               	goto	u1501
  5095  0F82  2F84               	goto	u1500
  5096  0F83                     u1501:
  5097  0F83  2F74               	goto	l30001100
  5098  0F84                     u1500:
  5099                           	
  5100  0F84                     l1:	
  5101  0F84  0008               	return
  5102                           	opt stack 0
  5103                           GLOBAL	__end_of_delay
  5104  0F85                     	__end_of_delay:
  5105                           ; =============== function _delay ends ============
  5106                           
  5107                           psect	text128,local,class=CODE,delta=2
  5108                           global __ptext128
  5109  0003                     __ptext128:


HI-TECH Software PICC Macro Assembler V9.70 build 5239 
Symbol Table                                                                                   Wed Apr 05 15:16:07 2023

     ___awdiv@dividend 002A                      l1 0F84                      l5 0F9D                      l6 0F67  
                    l7 0F73                      l8 0484                      l9 03D3         __size_of_delay 0011  
                   l10 0322                     l11 02A0                     _DA 04A5                     _BF 04A0  
                   _DC 0019                     l18 0297                     l26 07FF                     l27 070D  
                   l19 0215                     _DV 0075                     _PD 001B         __size_of_count 00B1  
                   _RD 0C60                     _UA 04A1                     _TO 001C                     _RW 04A2  
                   _WR 0C61         __size_of_pulse 0019            __pbssCOMMON 0075                    l110 061B  
                  l103 053F                    _C1R 083A                    _C2R 0842                    l163 020C  
                  l181 0109                    l261 0FFF                    l183 00B8                    l371 014D  
                  l179 0031                    l366 0185                    l376 0162                    l377 016C  
                  l378 0185                    _CKE 04A6               ___awtoft 0003                    _CKP 00A4  
                  _GIE 005F                    _BOR 0470                    _RA0 0028               ___ftpack 010A  
      __size_of_count1 00B1                    _RA1 0029                    _RB0 0030                    _RA2 002A  
                  _RB1 0031                    _RA3 002B                    _RC0 0038                    _RB2 0032  
                  _RA4 002C                    _RC1 0039                    _RB3 0033                    _RA5 002D  
                  _RD0 0040                    _RC2 003A                    _RB4 0034                    _RA6 002E  
                  _RD1 0041                    _RC3 003B                    _RB5 0035                    _RA7 002F  
                  _RE0 0048                    _RD2 0042                    _RC4 003C                    _RB6 0036  
                  _RE1 0049                    _RD3 0043                    _RC5 003D                    _RB7 0037  
                  _RE2 004A                    _RD4 0044                    _RC6 003E                    _RE3 004B  
                  _RD5 0045                    _RC7 003F                    _RD6 0046                    _RD7 0047  
                  _FSR 0004                    _PCL 0002                    _PS0 0408                    _PR2 0092  
                  _PS1 0409                    _PS2 040A                    _PEN 048A                    _RP0 001D  
                  _IRP 001F                    _RP1 001E                    _HTS 047A                    _SR0 0C2E  
                  _SR1 0C2F                    u810 050A                    u811 0509                    u900 01E4  
                  _SEN 0488                    u901 01E3                    u805 04F5                    _SCS 0478  
                  u830 0523                    u831 0522                    u815 0506                    _PSA 040B  
                  u920 01F5                    u840 0197                    u760 0496                    u921 01F4  
                  u841 0196                    u825 0516                    u761 0495                    u930 01F9  
                  u850 01AB                    u770 04AC                    u915 01E7                    u771 04AB  
                  _LTS 0479                    u940 0110                    u860 01C4                    u780 04C9  
                  _VR0 04B8                    u861 01C3                    _VR1 04B9                    u950 0117  
                  u870 01CB                    u790 04D9                    _VR2 04BA                    u951 0116  
                  u871 01CA                    u855 01A7                    _VR3 04BB                    _POR 0471  
                  u785 04C5                    _RX9 00C6                    u970 0130                    u890 01DD  
                  u971 012F                    u891 01DC                    u795 04D5                    u981 013E  
                  u965 0123                    u885 01CD                    u982 0145                    _SMP 04A7  
                  _TX9 04C6                    u995 0146                    _WUE 0C39                    _VRR 04BD  
                  _adc 0298              ?___awtoft 0026              ?___ftpack 0020                    _low 0054  
     __size_of___awdiv 0072       __size_of___awmod 0062       __size_of___ftdiv 00BB       __size_of___ftmul 00DC  
     __size_of___fttol 0087             ??___awtoft 0073             ??___ftpack 0070                ??_delay 0070  
              ??_count 0072                   ?_adc 0075                   _C1IE 046D                   _C1IF 006D  
                 _C2IE 046E                   _C2IF 006E                   _C1OE 083D                   _C2OE 0845  
                 _C1ON 083F                   _C2ON 0847                   _ADIE 0466                   _ADIF 0066  
                 _ADFM 04FF       __size_of_command 000C                   _ADON 00F8                   _P1M0 00BE  
                 _CHS0 00FA                   _P1M1 00BF                   _CHS1 00FB                   _CHS2 00FC  
                 _CHS3 00FD                   _EEIE 046C                   _EEIF 006C                   _ANS0 0C40  
                 _BRG0 04C8                   _ANS1 0C41                   _BRG1 04C9                   _ANS2 0C42  
                 _BRG2 04CA                   _ANS3 0C43                   _BRG3 04CB                   _ANS4 0C44  
                 _BRG4 04CC                   _ANS5 0C45                   _BRG5 04CD                   _ANS6 0C46  
                 _GCEN 048F                   _BRG6 04CE                   _ANS7 0C47                   _BRG7 04CF  
                 _ANS8 0C48                   _BRG8 04D0                   _ANS9 0C49                   _BRG9 04D1  
                 _BRGH 04C2                   _T0IE 005D                   u1000 0153                   _T0IF 005A  
                 _CREN 00C4                   u1001 0152                   _T0CS 040D                   _FERR 00C2  
                 u1020 0162                   u1021 0161                   u1030 0166                   u1031 0165  
                 u1015 0157                   u1040 0177                   u1200 000E                   u1201 000D  
                 u1210 0FA9                   u1050 0184                   u1211 0FA8                   u1220 0FB5  
                 u1300 02A5                   u1221 0FB4                   u1045 0173                   u1301 02A4  
                 u1230 0FC0                   u1310 02BD                   _PDC0 04D8                   u1231 0FBF  
                 u1311 02BC                   _PDC1 04D9                   u1400 00A3                   u1320 02D5  
                 _PDC2 04DA                   u1401 00A2                   u1321 02D4                   _PDC3 04DB  
                 u1410 00AF                   u1250 0FD3                   u1330 02F1                   _PDC4 04DC  
                 u1411 00AE                   u1251 0FD2                   u1331 02F0                   _T0SE 040C  
                 _PDC5 04DD                   _CSRC 04C7                   u1500 0F84                   u1420 00C2  
                 u1260 0FDD                   u1340 030D                   _PDC6 04DE                   _IOCB 0096  
                 u1501 0F83                   u1421 00C1                   u1261 0FDC                   u1245 0FC5  
                 u1341 030C                   u1510 0551                   u1350 021A                   _INDF 0000  
                 u1511 0550                   u1351 0219                   u1440 00D5                   u1280 0FF0  
                 u1600 05D9                   u1520 0567                   u1360 0232                   u1505 0F80  
                 u1441 00D4                   u1281 0FEF                   u1265 0FD9                   u1601 05D8  
                 u1521 0566                   u1361 0231                   u1290 0FF4                   u1530 057E  
                 u1370 024A                ??_pulse 0070                   u1435 00C7                   u1275 0FE4  
                 u1611 05E2                   u1371 0249                   u1460 00E6                   u1612 05E9  
                 u1540 058E                   u1380 0266                   u1461 00E5                   u1381 0265  
                 u1550 05AD                   u1390 0282                   u1455 00D6                   u1551 05AC  
                 u1535 057A                   u1391 0281                   u1480 00FA                   u1640 05FF  
                 u1481 00F9                   u1465 00E2                   u1641 05FE                   u1625 05EA  
                 u1561 05B6                   u1545 058A                   u1490 00FE                   u1562 05BD  
                 u1475 00EE                   u1635 05F2                   u1590 05D3                   u1591 05D2  
                 u1575 05BE                   _PIE1 008C                   _PIE2 008D                   u1585 05C6  
                 _PEIE 005E                   _INTE 005C                   _INTF 0059                   _RBIE 005B  
                 _RBIF 0058                   _RCIE 0465                   _RCEN 048B                   _RCIF 0065  
                 _PCON 008E                   _PIR1 000C                   _PIR2 000D                   _OERR 00C1  
     ___awdiv@quotient 0028                   _SCKP 0C3C                   _RBPU 040F                   _RX9D 00C0  
                 _TMR0 0001                   _TMR2 0011                   _WCOL 00A7                   _SPEN 00C7  
                 _RSEN 0489                   _TX9D 04C0                   _SREN 00C5                   _OSTS 047B  
                 _TUN0 0480                   _TUN1 0481                   _TUN2 0482                   _TUN3 0483  
                 _TUN4 0484                   _STRA 04E8                   _STRB 04E9                   _STRC 04EA  
                 _VREN 04BF                   _STRD 04EB                   _TRMT 04C1                   _STOP 04A4  
                 _TXIE 0464                   _ZERO 001A                   _WREN 0C62                   _TXEN 04C5  
                 _TXIF 0064                   _VROE 04BE                   _SYNC 04C4                   _WPUB 0095  
                 _VRSS 04BC                   _adc1 020D           ___awdiv@sign 0027                   _data 0F68  
             data@data 0072                   _high 0077                   _main 0032                   start 0000  
    __size_of___awtoft 002F      __size_of___ftpack 007C       __size_of_voltage 00F2    start_initialization 0F52  
         ___awmod@sign 0020              voltage1@a 004E              voltage1@b 0050              voltage1@c 004C  
            voltage1@d 0052              voltage1@z 0049                  ??_adc 0073        __end_of___awdiv 010A  
      __end_of___awmod 1000        __end_of___ftdiv 0540        __end_of___ftmul 061C        __end_of___fttol 020D  
         ___ftdiv@cntr 003D                ?_count1 0036                _CM1CON0 0107                _CM2CON0 0108  
              _CCP1CON 0017                _CM2CON1 0109                _CCP2CON 001D           ___ftdiv@sign 0042  
             ??_count1 0072                _ACKSTAT 048E                _BAUDCTL 0187                _ECCPAS0 04E4  
              _ECCPAS1 04E5                _ECCPAS2 04E6                _ECCPASE 04E7                  ?_adc1 0075  
                _C1CH0 0838                  _C1CH1 0839                  _C2CH0 0840                  _C2CH1 0841  
                _DC1B0 00BC             ___ftdiv@f1 0043                  _DC1B1 00BD             ___ftdiv@f2 0046  
           ___ftdiv@f3 003E                  _C1SEN 0C2D                  ?_data 0073                  _C2REN 0C2C  
                _C1POL 083C                  _C2POL 0844                  _C1OUT 083E                  _C2OUT 0846  
                _ABDEN 0C38                  _ADCS0 00FE                  _ADCS1 00FF                  _ADDEN 00C3  
                ?_main 0054                  _ACKEN 048C                  _ACKDT 048D              __ptext110 0003  
            __ptext111 0298              __ptext120 03D4              __ptext112 070E              __ptext121 010A  
            __ptext113 020D              __ptext122 0F68              __ptext114 061C              __ptext123 0F5C  
            __ptext115 0540              __ptext124 0F9E              __ptext116 0003              __ptext125 0098  
            __ptext117 0485              __ptext126 0F85              __ptext118 0186              __ptext127 0F74  
            __ptext119 0323              __ptext128 0003                  _BCLIE 046B                  _BCLIF 006B  
                _CCP2X 00ED                  _CCP2Y 00EC                  _EEADR 010D                  _ANS10 0C4A  
                _EEDAT 010C                  _BRG10 04D2                  _ANS11 0C4B                  _BRG11 04D3  
                _ANS12 0C4C                  _BRG12 04D4                  _ANS13 0C4D                  _BRG13 04D5  
                _BRG14 04D6                  _BRG15 04D7                  _BRG16 0C3B          __end_of_delay 0F85  
                _CARRY 0018                  _EEPGD 0C67                  _ANSEL 0188             ___awtoft@c 0026  
___ftmul@f3_as_product 002E               _voltage1 061C                  _T1CON 0010                  _IOCB0 04B0  
                _T2CON 0012                  _IOCB1 04B1                  _IOCB2 04B2                  _IOCB3 04B3  
                _IOCB4 04B4                  _IOCB5 04B5                  _IOCB6 04B6                  _IOCB7 04B7  
                _T1GSS 0849                _T1CKPS0 0084                _T1CKPS1 0085                  _IRCF0 047C  
        __end_of_count 0485                  _IRCF1 047D                  _IRCF2 047E                _T2CKPS0 0090  
              _T2CKPS1 0091                  _RABIE 005B                  _RABIF 0058                  _RABPU 040F  
      __end_of_command 0F68                  _RCIDL 0C3E                  _FVREN 0C28                  _VCFG0 04FC  
                _VCFG1 04FD                  _RCREG 001A                  _SENDB 04C3             ___ftmul@f1 0033  
           ___ftmul@f2 0036                  _RCSTA 0018                  _OSFIE 046F                  _OSFIF 006F  
         ___ftpack@arg 0020                  _TMR1H 000F                  _TMR1L 000E                  _SPBRG 0099  
                _PORTA 0005                  _PORTB 0006                _T1OSCEN 0083                  _PORTC 0007  
                _PORTD 0008                  _PORTE 0009           ___ftpack@exp 0023                  _PRSEN 04DF  
                _SRCON 0185              ?_voltage1 0054          __end_of_pulse 0F9E                  _START 04A3  
                _PULSR 0C2A                  _PULSS 0C2B                  _SSPM0 00A0                  _SSPM1 00A1  
                _SSPM2 00A2                  _SSPM3 00A3                  _TRISA 0085                  _TRISB 0086  
                _TRISC 0087                  _TRISD 0088                  _SSPIE 0463                  _TRISE 0089  
                _SSPIF 0063                  _SSPEN 00A5             ___fttol@f1 0042                  _VRCON 0097  
                _WPUB0 04A8                  _WPUB1 04A9                  _WPUB2 04AA                  _WPUB3 04AB  
                _WPUB4 04AC                  _SSPOV 00A6                  _WPUB5 04AD                  _WPUB6 04AE  
                _WPUB7 04AF                  _WRERR 0C63                  _TXREG 0019                  _TXSTA 0098  
           ??_voltage1 0075         __pcstackCOMMON 0070                _OSCTUNE 0090                _PWM1CON 009B  
                _delay 0F74                  _count 03D4           ___ftmul@cntr 0031           ___ftmul@sign 0032  
              _PSTRCON 009D                _SSPCON2 0091                  _pulse 0F85                _ULPWUIE 046A  
              _ULPWUIF 006A                _SSPSTAT 0094                _TOUTPS0 0093                _TOUTPS1 0094  
              _TOUTPS2 0095                _TOUTPS3 0096        __end_of_voltage 0800                _STRSYNC 04EC  
         ___fttol@exp1 0041           ___fttol@lval 003D                  status 0003      __size_of_voltage1 00F2  
        __size_of_adc1 008B        ___awdiv@divisor 002C          __size_of_data 000C          __size_of_main 0066  
           __pbssBANK0 0054               l30001100 0F74               l30001020 000E               l30001021 0016  
             l30001030 0FC4               l30001031 0FCB               l30001023 0F9E               l30001032 0FCF  
             l30001024 0FA5               l30001120 0551               l30001033 0FD3               l30001025 0FA9  
             l30001041 03D4               l30001034 0FDD               l30001026 0FB1               l30001018 0003  
             l30001130 05A7               l30001122 0558               l30001050 02EA               l30001042 0298  
             l30001035 0FE3               l30001027 0FB5               l30001019 000A               l30001131 05A9  
             l30001123 0567               l30001051 02F1               l30001043 02A5               l30001036 0FEA  
             l30001028 0FBA               l30001140 05F1               l30001132 05AD               l30001060 0232  
             l30001052 02FB               l30001044 02B7               l30001029 0FC0               l30001037 0FF0  
             l30001141 05F9               l30001133 05BD               l30001125 056E               l30001061 0238  
             l30001053 0306               l30001045 02BD        ___awdiv@counter 0026               l30001038 0FF4  
             l30001142 05FF               l30001134 05C5               l30001126 0599               l30001070 028C  
             l30001062 0243               l30001054 030D               l30001046 02C3               l30001150 0052  
             l30001071 0098               l30001039 0FF9               l30001135 05CD               l30001127 059A  
             l30001119 0540               l30001063 024A               l30001055 0317               l30001047 02CE  
             l30001151 0059               l30001080 00D1               l30001072 009F               l30001056 0323  
             l30001136 05D3               l30001128 059B               l30001064 0254               l30001144 070E  
             l30001048 02D5               l30001160 008F               l30001152 0062               l30001081 00D5  
             l30001073 00A3               l30001137 05D5               l30001129 05A1               l30001161 061C  
             l30001065 025F               l30001057 020D               l30001049 02DF               l30001153 0068  
             l30001145 0032               l30001082 00E6               l30001074 00AB               l30001090 0F5D  
             l30001138 05D9               l30001066 0266               l30001058 021A               l30001154 006E  
             l30001146 0036               l30001083 00EC               l30001075 00AF               l30001091 0F60  
             l30001139 05E9               l30001067 0270               l30001059 022C               l30001155 0074  
             l30001147 003D               l30001084 00ED               l30001076 00B4               l30001092 0F62  
             l30001068 027B               l30001156 007A               l30001148 0044               l30001085 00F4  
             l30001077 00C2               l30001093 0F69               l30001069 0282               l30001157 0080  
             l30001149 004B               l30001078 00C6               l30001086 00FA               l30001094 0F6C  
             l30001158 0085               l30001087 00FE               l30001079 00CD               l30001095 0F6E  
             l30001159 008A               l30001096 0F85               l30001088 0103               l30001097 0F88  
             l30001098 0F91               l30001099 0F74               l30000920 04B9               l30000921 04BE  
             l30000913 0485               l30000930 0515               l30000922 04CE               l30000914 0496  
             l30000931 051D               l30000923 04E0               l30000932 0523               l30000924 04E4  
             l30000916 049D               l30000925 04EB               l30000917 04AC               l30000926 04F4  
             l30000927 04FC               l30000919 04B3               l30000960 01B0               l30000928 050A  
             l30000961 01B1               l30000929 0514               l30000962 01B7               l30000963 01BE  
             l30000980 0117               l30000972 01E5               l30000964 01C0               l30000956 0186  
             l30000973 01F0               l30000965 01C4               l30000957 0197               l30000990 016E  
             l30000982 011E               l30000974 01F5               l30000991 0180               l30000983 012A  
             l30000975 01F9               l30000959 01A0               l30000992 0184               l30000984 0131  
             l30000976 0204               l30000968 01CC               l30000985 0135               l30000969 01DE  
             l30000986 0145               l30000978 010A               l30000987 0154               l30000979 0110  
             l30000988 015E               l30000989 0166                ___awdiv 0098                ___awmod 0F9E  
              ___ftdiv 0485                ___ftmul 0540                ___fttol 0186               ?___awdiv 002A  
             ?___awmod 0022               ?___ftdiv 0043               ?___ftmul 0033               ?___fttol 0042  
            ??___awdiv 0071              ??___awmod 0070              ??___ftdiv 0039                 ??_adc1 0073  
            ??___ftmul 0029              ??___fttol 0039                 ??_data 0070                 ??_main 0075  
     __end_of___awtoft 0032            command@data 0072       __end_of___ftpack 0186                _command 0F5C  
             ?_command 0073             __pmaintext 0032              ??_command 0070               voltage@a 004E  
             voltage@b 0050               voltage@c 004C               voltage@d 0052               voltage@z 0049  
               _C1RSEL 084D                 _C2RSEL 084C                 ?_delay 0070                 _C2SYNC 0848  
               _ADCON0 001F                 _ADCON1 009F                 _ABDOVF 0C3F            ___ftdiv@exp 0041  
               _CCP1M0 00B8                 _CCP1M1 00B9                 _CCP1M2 00BA                 _CCP1M3 00BB  
               _CCP2M0 00E8                 _CCP2M1 00E9                 _CCP2M2 00EA                 _CCP2M3 00EB  
               _CCP1IE 0462                 ?_count 0036                 _CCP1IF 0062                 _CCP2IE 0468  
               _CCP2IF 0068                 _ADRESH 001E                 _EEADRH 010F                 _ADRESL 009E  
               _EEADRL 010D                 _EEDATA 010C                 _ECCPAS 009C                 _CCPR1H 0016  
               _EEDATH 010E                 _CCPR2H 001C                 _CCPR1L 0015                 _CCPR2L 001B  
         __end_of_adc1 0298                 _EECON1 018C                 _EECON2 018D           __end_of_data 0F74  
               ?_pulse 0072                 _ANSELH 0189                 _MC1OUT 084F                 _MC2OUT 084E  
         __end_of_main 0098                _voltage 070E                count1@a 0032                count1@c 0034  
              count1@e 002E                count1@f 0030                count1@i 0036                 _T1GINV 0087  
       __end_of_count1 03D4                 _GODONE 00F9   end_of_initialization 0F58               ?_voltage 0054  
               _T1SYNC 0082                 _INTEDG 040E                 _PCLATH 000A                 _INTCON 000B  
        __pcstackBANK0 0020          ___awtoft@sign 0025                 _SBOREN 0474                 _OSCCON 008F  
            ??_voltage 0075                 _TMR1GE 0086                 _TMR1IE 0460                 _TMR1IF 0060  
               _TMR1CS 0081                 _TMR2IE 0461                 _TMR2IF 0061                 _PSSAC0 04E2  
               _PSSAC1 04E3                 _PSSBD0 04E0                 _PSSBD1 04E1                 _SPBRGH 009A  
               _OPTION 0081                 _TMR1ON 0080                 _TMR2ON 0092                 _WDTCON 0105  
          ___ftmul@exp 002D                 _WDTPS0 0829                 _WDTPS1 082A                 _WDTPS2 082B  
               _WDTPS3 082C                 _SSPADD 0093                 _TRISA0 0428                 _TRISA1 0429  
               _TRISB0 0430                 _TRISA2 042A                 _TRISB1 0431                 _TRISA3 042B  
               _TRISC0 0438                 _TRISB2 0432                 _TRISA4 042C                 _TRISC1 0439  
               _TRISB3 0433                 _TRISA5 042D                 _TRISD0 0440                 _TRISC2 043A  
               _TRISB4 0434                 _TRISA6 042E                 _TRISD1 0441                 _TRISC3 043B  
               _TRISB5 0435                 _TRISA7 042F                 _TRISE0 0448                 _TRISD2 0442  
               _TRISC4 043C                 _TRISB6 0436                 _TRISE1 0449                 _TRISD3 0443  
               _TRISC5 043D                 _TRISB7 0437                 _TRISE2 044A                 _TRISD4 0444  
               _TRISC6 043E                 _TRISE3 044B                 _TRISD5 0445                 _TRISC7 043F  
               _TRISD6 0446                 _TRISD7 0447                 _STATUS 0003          ___ftpack@sign 0024  
               _SSPCON 0014                 _SSPBUF 0013                 _SWDTEN 0828                 _ULPWUE 0475  
               _SSPMSK 0093           __size_of_adc 008B                 _count1 0323                 delay@x 0070  
          __end_of_adc 0323       __end_of_voltage1 070E                 count@a 0032                 count@c 0034  
               count@e 002E                 count@f 0030                 count@i 0036          ___fttol@sign1 003C  
     ___awmod@dividend 0022        ___awmod@divisor 0024        ___awmod@counter 0021  
