

HI-TECH Software PIC LITE Macro Assembler V9.70 build 5239 
                                                                                               Mon Mar 20 20:17:37 2023

HI-TECH Software Omniscient Code Generator (Lite mode) build 5239
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 5239"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F887
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           ;BANK0:	_main->_display
    43                           ;COMMON:	_display->___awdiv
    44                           ;BANK0:	_display->___awdiv
    45                           ;COMMON:	_display->___awmod
    46                           ;COMMON:	_main->_multiplication
    47                           ;COMMON:	_multiplication->___awmod
    48                           ;COMMON:	_multiplication->___awdiv
    49                           ;BANK0:	_multiplication->___awdiv
    50                           	FNCALL	_main,_display
    51                           	FNCALL	_main,_addition
    52                           	FNCALL	_main,_multiplication
    53                           	FNCALL	_multiplication,___awmod
    54                           	FNCALL	_multiplication,___wmul
    55                           	FNCALL	_multiplication,___awdiv
    56                           	FNCALL	_multiplication,_time_delay
    57                           	FNCALL	_addition,___awmod
    58                           	FNCALL	_addition,___awdiv
    59                           	FNCALL	_addition,_time_delay
    60                           	FNCALL	_display,___awdiv
    61                           	FNCALL	_display,___awmod
    62                           	FNCALL	_display,_time_delay
    63                           	FNROOT	_main
    64                           	global	addition@F785
    65                           	global	display@F780
    66                           	global	multiplication@F790
    67                           psect	idataBANK0,class=CODE,space=0,delta=2
    68                           global __pidataBANK0
    69  03E2                     __pidataBANK0:
    70                           	file	"C:\Users\gowth\Documents\PIC Programs\Keypad\Arithmetic\Arithmetic.c"
    71                           	line	61
    72                           
    73                           ;initializer for addition@F785
    74  03E2  343F               	retlw	03Fh
    75  03E3  3406               	retlw	06h
    76  03E4  345B               	retlw	05Bh
    77  03E5  344F               	retlw	04Fh
    78  03E6  3466               	retlw	066h
    79  03E7  346D               	retlw	06Dh
    80  03E8  347D               	retlw	07Dh
    81  03E9  3407               	retlw	07h
    82  03EA  347F               	retlw	07Fh
    83  03EB  3467               	retlw	067h
    84                           	line	28
    85                           
    86                           ;initializer for display@F780
    87  03EC  343F               	retlw	03Fh
    88  03ED  3406               	retlw	06h
    89  03EE  345B               	retlw	05Bh
    90  03EF  344F               	retlw	04Fh
    91  03F0  3466               	retlw	066h
    92  03F1  346D               	retlw	06Dh
    93  03F2  347D               	retlw	07Dh
    94  03F3  3407               	retlw	07h
    95  03F4  347F               	retlw	07Fh
    96  03F5  3467               	retlw	067h
    97                           	line	86
    98                           
    99                           ;initializer for multiplication@F790
   100  03F6  343F               	retlw	03Fh
   101  03F7  3406               	retlw	06h
   102  03F8  345B               	retlw	05Bh
   103  03F9  344F               	retlw	04Fh
   104  03FA  3466               	retlw	066h
   105  03FB  346D               	retlw	06Dh
   106  03FC  347D               	retlw	07Dh
   107  03FD  3407               	retlw	07h
   108  03FE  347F               	retlw	07Fh
   109  03FF  3467               	retlw	067h
   110                           	global	_product
   111                           	global	_sum
   112                           	global	_var
   113                           	global	_count
   114                           	global	_num1
   115                           	global	_num2
   116                           	global	_ADCON0
   117  001F                     _ADCON0  equ     31
   118                           	global	_ADRESH
   119  001E                     _ADRESH  equ     30
   120                           	global	_CCP1CON
   121  0017                     _CCP1CON  equ     23
   122                           	global	_CCP2CON
   123  001D                     _CCP2CON  equ     29
   124                           	global	_CCPR1H
   125  0016                     _CCPR1H  equ     22
   126                           	global	_CCPR1L
   127  0015                     _CCPR1L  equ     21
   128                           	global	_CCPR2H
   129  001C                     _CCPR2H  equ     28
   130                           	global	_CCPR2L
   131  001B                     _CCPR2L  equ     27
   132                           	global	_FSR
   133  0004                     _FSR  equ     4
   134                           	global	_INDF
   135  0000                     _INDF  equ     0
   136                           	global	_INTCON
   137  000B                     _INTCON  equ     11
   138                           	global	_PCL
   139  0002                     _PCL  equ     2
   140                           	global	_PCLATH
   141  000A                     _PCLATH  equ     10
   142                           	global	_PIR1
   143  000C                     _PIR1  equ     12
   144                           	global	_PIR2
   145  000D                     _PIR2  equ     13
   146                           	global	_PORTA
   147  0005                     _PORTA  equ     5
   148                           	global	_PORTB
   149  0006                     _PORTB  equ     6
   150                           	global	_PORTC
   151  0007                     _PORTC  equ     7
   152                           	global	_PORTD
   153  0008                     _PORTD  equ     8
   154                           	global	_PORTE
   155  0009                     _PORTE  equ     9
   156                           	global	_RCREG
   157  001A                     _RCREG  equ     26
   158                           	global	_RCSTA
   159  0018                     _RCSTA  equ     24
   160                           	global	_SSPBUF
   161  0013                     _SSPBUF  equ     19
   162                           	global	_SSPCON
   163  0014                     _SSPCON  equ     20
   164                           	global	_STATUS
   165  0003                     _STATUS  equ     3
   166                           	global	_T1CON
   167  0010                     _T1CON  equ     16
   168                           	global	_T2CON
   169  0012                     _T2CON  equ     18
   170                           	global	_TMR0
   171  0001                     _TMR0  equ     1
   172                           	global	_TMR1H
   173  000F                     _TMR1H  equ     15
   174                           	global	_TMR1L
   175  000E                     _TMR1L  equ     14
   176                           	global	_TMR2
   177  0011                     _TMR2  equ     17
   178                           	global	_TXREG
   179  0019                     _TXREG  equ     25
   180                           	global	_ADCS0
   181  00FE                     _ADCS0  equ     254
   182                           	global	_ADCS1
   183  00FF                     _ADCS1  equ     255
   184                           	global	_ADDEN
   185  00C3                     _ADDEN  equ     195
   186                           	global	_ADIF
   187  0066                     _ADIF  equ     102
   188                           	global	_ADON
   189  00F8                     _ADON  equ     248
   190                           	global	_BCLIF
   191  006B                     _BCLIF  equ     107
   192                           	global	_C1IF
   193  006D                     _C1IF  equ     109
   194                           	global	_C2IF
   195  006E                     _C2IF  equ     110
   196                           	global	_CARRY
   197  0018                     _CARRY  equ     24
   198                           	global	_CCP1IF
   199  0062                     _CCP1IF  equ     98
   200                           	global	_CCP1M0
   201  00B8                     _CCP1M0  equ     184
   202                           	global	_CCP1M1
   203  00B9                     _CCP1M1  equ     185
   204                           	global	_CCP1M2
   205  00BA                     _CCP1M2  equ     186
   206                           	global	_CCP1M3
   207  00BB                     _CCP1M3  equ     187
   208                           	global	_CCP2IF
   209  0068                     _CCP2IF  equ     104
   210                           	global	_CCP2M0
   211  00E8                     _CCP2M0  equ     232
   212                           	global	_CCP2M1
   213  00E9                     _CCP2M1  equ     233
   214                           	global	_CCP2M2
   215  00EA                     _CCP2M2  equ     234
   216                           	global	_CCP2M3
   217  00EB                     _CCP2M3  equ     235
   218                           	global	_CCP2X
   219  00ED                     _CCP2X  equ     237
   220                           	global	_CCP2Y
   221  00EC                     _CCP2Y  equ     236
   222                           	global	_CHS0
   223  00FA                     _CHS0  equ     250
   224                           	global	_CHS1
   225  00FB                     _CHS1  equ     251
   226                           	global	_CHS2
   227  00FC                     _CHS2  equ     252
   228                           	global	_CHS3
   229  00FD                     _CHS3  equ     253
   230                           	global	_CKP
   231  00A4                     _CKP  equ     164
   232                           	global	_CREN
   233  00C4                     _CREN  equ     196
   234                           	global	_DC
   235  0019                     _DC  equ     25
   236                           	global	_DC1B0
   237  00BC                     _DC1B0  equ     188
   238                           	global	_DC1B1
   239  00BD                     _DC1B1  equ     189
   240                           	global	_EEIF
   241  006C                     _EEIF  equ     108
   242                           	global	_FERR
   243  00C2                     _FERR  equ     194
   244                           	global	_GIE
   245  005F                     _GIE  equ     95
   246                           	global	_GODONE
   247  00F9                     _GODONE  equ     249
   248                           	global	_INTE
   249  005C                     _INTE  equ     92
   250                           	global	_INTF
   251  0059                     _INTF  equ     89
   252                           	global	_IRP
   253  001F                     _IRP  equ     31
   254                           	global	_OERR
   255  00C1                     _OERR  equ     193
   256                           	global	_OSFIF
   257  006F                     _OSFIF  equ     111
   258                           	global	_P1M0
   259  00BE                     _P1M0  equ     190
   260                           	global	_P1M1
   261  00BF                     _P1M1  equ     191
   262                           	global	_PD
   263  001B                     _PD  equ     27
   264                           	global	_PEIE
   265  005E                     _PEIE  equ     94
   266                           	global	_RA0
   267  0028                     _RA0  equ     40
   268                           	global	_RA1
   269  0029                     _RA1  equ     41
   270                           	global	_RA2
   271  002A                     _RA2  equ     42
   272                           	global	_RA3
   273  002B                     _RA3  equ     43
   274                           	global	_RA4
   275  002C                     _RA4  equ     44
   276                           	global	_RA5
   277  002D                     _RA5  equ     45
   278                           	global	_RA6
   279  002E                     _RA6  equ     46
   280                           	global	_RA7
   281  002F                     _RA7  equ     47
   282                           	global	_RABIE
   283  005B                     _RABIE  equ     91
   284                           	global	_RABIF
   285  0058                     _RABIF  equ     88
   286                           	global	_RB0
   287  0030                     _RB0  equ     48
   288                           	global	_RB1
   289  0031                     _RB1  equ     49
   290                           	global	_RB2
   291  0032                     _RB2  equ     50
   292                           	global	_RB3
   293  0033                     _RB3  equ     51
   294                           	global	_RB4
   295  0034                     _RB4  equ     52
   296                           	global	_RB5
   297  0035                     _RB5  equ     53
   298                           	global	_RB6
   299  0036                     _RB6  equ     54
   300                           	global	_RB7
   301  0037                     _RB7  equ     55
   302                           	global	_RBIE
   303  005B                     _RBIE  equ     91
   304                           	global	_RBIF
   305  0058                     _RBIF  equ     88
   306                           	global	_RC0
   307  0038                     _RC0  equ     56
   308                           	global	_RC1
   309  0039                     _RC1  equ     57
   310                           	global	_RC2
   311  003A                     _RC2  equ     58
   312                           	global	_RC3
   313  003B                     _RC3  equ     59
   314                           	global	_RC4
   315  003C                     _RC4  equ     60
   316                           	global	_RC5
   317  003D                     _RC5  equ     61
   318                           	global	_RC6
   319  003E                     _RC6  equ     62
   320                           	global	_RC7
   321  003F                     _RC7  equ     63
   322                           	global	_RCIF
   323  0065                     _RCIF  equ     101
   324                           	global	_RD0
   325  0040                     _RD0  equ     64
   326                           	global	_RD1
   327  0041                     _RD1  equ     65
   328                           	global	_RD2
   329  0042                     _RD2  equ     66
   330                           	global	_RD3
   331  0043                     _RD3  equ     67
   332                           	global	_RD4
   333  0044                     _RD4  equ     68
   334                           	global	_RD5
   335  0045                     _RD5  equ     69
   336                           	global	_RD6
   337  0046                     _RD6  equ     70
   338                           	global	_RD7
   339  0047                     _RD7  equ     71
   340                           	global	_RE0
   341  0048                     _RE0  equ     72
   342                           	global	_RE1
   343  0049                     _RE1  equ     73
   344                           	global	_RE2
   345  004A                     _RE2  equ     74
   346                           	global	_RE3
   347  004B                     _RE3  equ     75
   348                           	global	_RP0
   349  001D                     _RP0  equ     29
   350                           	global	_RP1
   351  001E                     _RP1  equ     30
   352                           	global	_RX9
   353  00C6                     _RX9  equ     198
   354                           	global	_RX9D
   355  00C0                     _RX9D  equ     192
   356                           	global	_SPEN
   357  00C7                     _SPEN  equ     199
   358                           	global	_SREN
   359  00C5                     _SREN  equ     197
   360                           	global	_SSPEN
   361  00A5                     _SSPEN  equ     165
   362                           	global	_SSPIF
   363  0063                     _SSPIF  equ     99
   364                           	global	_SSPM0
   365  00A0                     _SSPM0  equ     160
   366                           	global	_SSPM1
   367  00A1                     _SSPM1  equ     161
   368                           	global	_SSPM2
   369  00A2                     _SSPM2  equ     162
   370                           	global	_SSPM3
   371  00A3                     _SSPM3  equ     163
   372                           	global	_SSPOV
   373  00A6                     _SSPOV  equ     166
   374                           	global	_T0IE
   375  005D                     _T0IE  equ     93
   376                           	global	_T0IF
   377  005A                     _T0IF  equ     90
   378                           	global	_T1CKPS0
   379  0084                     _T1CKPS0  equ     132
   380                           	global	_T1CKPS1
   381  0085                     _T1CKPS1  equ     133
   382                           	global	_T1GINV
   383  0087                     _T1GINV  equ     135
   384                           	global	_T1OSCEN
   385  0083                     _T1OSCEN  equ     131
   386                           	global	_T1SYNC
   387  0082                     _T1SYNC  equ     130
   388                           	global	_T2CKPS0
   389  0090                     _T2CKPS0  equ     144
   390                           	global	_T2CKPS1
   391  0091                     _T2CKPS1  equ     145
   392                           	global	_TMR1CS
   393  0081                     _TMR1CS  equ     129
   394                           	global	_TMR1GE
   395  0086                     _TMR1GE  equ     134
   396                           	global	_TMR1IF
   397  0060                     _TMR1IF  equ     96
   398                           	global	_TMR1ON
   399  0080                     _TMR1ON  equ     128
   400                           	global	_TMR2IF
   401  0061                     _TMR2IF  equ     97
   402                           	global	_TMR2ON
   403  0092                     _TMR2ON  equ     146
   404                           	global	_TO
   405  001C                     _TO  equ     28
   406                           	global	_TOUTPS0
   407  0093                     _TOUTPS0  equ     147
   408                           	global	_TOUTPS1
   409  0094                     _TOUTPS1  equ     148
   410                           	global	_TOUTPS2
   411  0095                     _TOUTPS2  equ     149
   412                           	global	_TOUTPS3
   413  0096                     _TOUTPS3  equ     150
   414                           	global	_TXIF
   415  0064                     _TXIF  equ     100
   416                           	global	_ULPWUIF
   417  006A                     _ULPWUIF  equ     106
   418                           	global	_WCOL
   419  00A7                     _WCOL  equ     167
   420                           	global	_ZERO
   421  001A                     _ZERO  equ     26
   422                           	global	_ADCON1
   423  009F                     _ADCON1  equ     159
   424                           	global	_ADRESL
   425  009E                     _ADRESL  equ     158
   426                           	global	_ECCPAS
   427  009C                     _ECCPAS  equ     156
   428                           	global	_IOCB
   429  0096                     _IOCB  equ     150
   430                           	global	_OPTION
   431  0081                     _OPTION  equ     129
   432                           	global	_OSCCON
   433  008F                     _OSCCON  equ     143
   434                           	global	_OSCTUNE
   435  0090                     _OSCTUNE  equ     144
   436                           	global	_PCON
   437  008E                     _PCON  equ     142
   438                           	global	_PIE1
   439  008C                     _PIE1  equ     140
   440                           	global	_PIE2
   441  008D                     _PIE2  equ     141
   442                           	global	_PR2
   443  0092                     _PR2  equ     146
   444                           	global	_PSTRCON
   445  009D                     _PSTRCON  equ     157
   446                           	global	_PWM1CON
   447  009B                     _PWM1CON  equ     155
   448                           	global	_SPBRG
   449  0099                     _SPBRG  equ     153
   450                           	global	_SPBRGH
   451  009A                     _SPBRGH  equ     154
   452                           	global	_SSPADD
   453  0093                     _SSPADD  equ     147
   454                           	global	_SSPCON2
   455  0091                     _SSPCON2  equ     145
   456                           	global	_SSPMSK
   457  0093                     _SSPMSK  equ     147
   458                           	global	_SSPSTAT
   459  0094                     _SSPSTAT  equ     148
   460                           	global	_TRISA
   461  0085                     _TRISA  equ     133
   462                           	global	_TRISB
   463  0086                     _TRISB  equ     134
   464                           	global	_TRISC
   465  0087                     _TRISC  equ     135
   466                           	global	_TRISD
   467  0088                     _TRISD  equ     136
   468                           	global	_TRISE
   469  0089                     _TRISE  equ     137
   470                           	global	_TXSTA
   471  0098                     _TXSTA  equ     152
   472                           	global	_VRCON
   473  0097                     _VRCON  equ     151
   474                           	global	_WPUB
   475  0095                     _WPUB  equ     149
   476                           	global	_ACKDT
   477  048D                     _ACKDT  equ     1165
   478                           	global	_ACKEN
   479  048C                     _ACKEN  equ     1164
   480                           	global	_ACKSTAT
   481  048E                     _ACKSTAT  equ     1166
   482                           	global	_ADFM
   483  04FF                     _ADFM  equ     1279
   484                           	global	_ADIE
   485  0466                     _ADIE  equ     1126
   486                           	global	_BCLIE
   487  046B                     _BCLIE  equ     1131
   488                           	global	_BF
   489  04A0                     _BF  equ     1184
   490                           	global	_BOR
   491  0470                     _BOR  equ     1136
   492                           	global	_BRG0
   493  04C8                     _BRG0  equ     1224
   494                           	global	_BRG1
   495  04C9                     _BRG1  equ     1225
   496                           	global	_BRG10
   497  04D2                     _BRG10  equ     1234
   498                           	global	_BRG11
   499  04D3                     _BRG11  equ     1235
   500                           	global	_BRG12
   501  04D4                     _BRG12  equ     1236
   502                           	global	_BRG13
   503  04D5                     _BRG13  equ     1237
   504                           	global	_BRG14
   505  04D6                     _BRG14  equ     1238
   506                           	global	_BRG15
   507  04D7                     _BRG15  equ     1239
   508                           	global	_BRG2
   509  04CA                     _BRG2  equ     1226
   510                           	global	_BRG3
   511  04CB                     _BRG3  equ     1227
   512                           	global	_BRG4
   513  04CC                     _BRG4  equ     1228
   514                           	global	_BRG5
   515  04CD                     _BRG5  equ     1229
   516                           	global	_BRG6
   517  04CE                     _BRG6  equ     1230
   518                           	global	_BRG7
   519  04CF                     _BRG7  equ     1231
   520                           	global	_BRG8
   521  04D0                     _BRG8  equ     1232
   522                           	global	_BRG9
   523  04D1                     _BRG9  equ     1233
   524                           	global	_BRGH
   525  04C2                     _BRGH  equ     1218
   526                           	global	_C1IE
   527  046D                     _C1IE  equ     1133
   528                           	global	_C2IE
   529  046E                     _C2IE  equ     1134
   530                           	global	_CCP1IE
   531  0462                     _CCP1IE  equ     1122
   532                           	global	_CCP2IE
   533  0468                     _CCP2IE  equ     1128
   534                           	global	_CKE
   535  04A6                     _CKE  equ     1190
   536                           	global	_CSRC
   537  04C7                     _CSRC  equ     1223
   538                           	global	_DA
   539  04A5                     _DA  equ     1189
   540                           	global	_ECCPAS0
   541  04E4                     _ECCPAS0  equ     1252
   542                           	global	_ECCPAS1
   543  04E5                     _ECCPAS1  equ     1253
   544                           	global	_ECCPAS2
   545  04E6                     _ECCPAS2  equ     1254
   546                           	global	_ECCPASE
   547  04E7                     _ECCPASE  equ     1255
   548                           	global	_EEIE
   549  046C                     _EEIE  equ     1132
   550                           	global	_GCEN
   551  048F                     _GCEN  equ     1167
   552                           	global	_HTS
   553  047A                     _HTS  equ     1146
   554                           	global	_INTEDG
   555  040E                     _INTEDG  equ     1038
   556                           	global	_IOCB0
   557  04B0                     _IOCB0  equ     1200
   558                           	global	_IOCB1
   559  04B1                     _IOCB1  equ     1201
   560                           	global	_IOCB2
   561  04B2                     _IOCB2  equ     1202
   562                           	global	_IOCB3
   563  04B3                     _IOCB3  equ     1203
   564                           	global	_IOCB4
   565  04B4                     _IOCB4  equ     1204
   566                           	global	_IOCB5
   567  04B5                     _IOCB5  equ     1205
   568                           	global	_IOCB6
   569  04B6                     _IOCB6  equ     1206
   570                           	global	_IOCB7
   571  04B7                     _IOCB7  equ     1207
   572                           	global	_IRCF0
   573  047C                     _IRCF0  equ     1148
   574                           	global	_IRCF1
   575  047D                     _IRCF1  equ     1149
   576                           	global	_IRCF2
   577  047E                     _IRCF2  equ     1150
   578                           	global	_LTS
   579  0479                     _LTS  equ     1145
   580                           	global	_OSFIE
   581  046F                     _OSFIE  equ     1135
   582                           	global	_OSTS
   583  047B                     _OSTS  equ     1147
   584                           	global	_PDC0
   585  04D8                     _PDC0  equ     1240
   586                           	global	_PDC1
   587  04D9                     _PDC1  equ     1241
   588                           	global	_PDC2
   589  04DA                     _PDC2  equ     1242
   590                           	global	_PDC3
   591  04DB                     _PDC3  equ     1243
   592                           	global	_PDC4
   593  04DC                     _PDC4  equ     1244
   594                           	global	_PDC5
   595  04DD                     _PDC5  equ     1245
   596                           	global	_PDC6
   597  04DE                     _PDC6  equ     1246
   598                           	global	_PEN
   599  048A                     _PEN  equ     1162
   600                           	global	_POR
   601  0471                     _POR  equ     1137
   602                           	global	_PRSEN
   603  04DF                     _PRSEN  equ     1247
   604                           	global	_PS0
   605  0408                     _PS0  equ     1032
   606                           	global	_PS1
   607  0409                     _PS1  equ     1033
   608                           	global	_PS2
   609  040A                     _PS2  equ     1034
   610                           	global	_PSA
   611  040B                     _PSA  equ     1035
   612                           	global	_PSSAC0
   613  04E2                     _PSSAC0  equ     1250
   614                           	global	_PSSAC1
   615  04E3                     _PSSAC1  equ     1251
   616                           	global	_PSSBD0
   617  04E0                     _PSSBD0  equ     1248
   618                           	global	_PSSBD1
   619  04E1                     _PSSBD1  equ     1249
   620                           	global	_RABPU
   621  040F                     _RABPU  equ     1039
   622                           	global	_RBPU
   623  040F                     _RBPU  equ     1039
   624                           	global	_RCEN
   625  048B                     _RCEN  equ     1163
   626                           	global	_RCIE
   627  0465                     _RCIE  equ     1125
   628                           	global	_RSEN
   629  0489                     _RSEN  equ     1161
   630                           	global	_RW
   631  04A2                     _RW  equ     1186
   632                           	global	_SBOREN
   633  0474                     _SBOREN  equ     1140
   634                           	global	_SCS
   635  0478                     _SCS  equ     1144
   636                           	global	_SEN
   637  0488                     _SEN  equ     1160
   638                           	global	_SENDB
   639  04C3                     _SENDB  equ     1219
   640                           	global	_SMP
   641  04A7                     _SMP  equ     1191
   642                           	global	_SSPIE
   643  0463                     _SSPIE  equ     1123
   644                           	global	_START
   645  04A3                     _START  equ     1187
   646                           	global	_STOP
   647  04A4                     _STOP  equ     1188
   648                           	global	_STRA
   649  04E8                     _STRA  equ     1256
   650                           	global	_STRB
   651  04E9                     _STRB  equ     1257
   652                           	global	_STRC
   653  04EA                     _STRC  equ     1258
   654                           	global	_STRD
   655  04EB                     _STRD  equ     1259
   656                           	global	_STRSYNC
   657  04EC                     _STRSYNC  equ     1260
   658                           	global	_SYNC
   659  04C4                     _SYNC  equ     1220
   660                           	global	_T0CS
   661  040D                     _T0CS  equ     1037
   662                           	global	_T0SE
   663  040C                     _T0SE  equ     1036
   664                           	global	_TMR1IE
   665  0460                     _TMR1IE  equ     1120
   666                           	global	_TMR2IE
   667  0461                     _TMR2IE  equ     1121
   668                           	global	_TRISA0
   669  0428                     _TRISA0  equ     1064
   670                           	global	_TRISA1
   671  0429                     _TRISA1  equ     1065
   672                           	global	_TRISA2
   673  042A                     _TRISA2  equ     1066
   674                           	global	_TRISA3
   675  042B                     _TRISA3  equ     1067
   676                           	global	_TRISA4
   677  042C                     _TRISA4  equ     1068
   678                           	global	_TRISA5
   679  042D                     _TRISA5  equ     1069
   680                           	global	_TRISA6
   681  042E                     _TRISA6  equ     1070
   682                           	global	_TRISA7
   683  042F                     _TRISA7  equ     1071
   684                           	global	_TRISB0
   685  0430                     _TRISB0  equ     1072
   686                           	global	_TRISB1
   687  0431                     _TRISB1  equ     1073
   688                           	global	_TRISB2
   689  0432                     _TRISB2  equ     1074
   690                           	global	_TRISB3
   691  0433                     _TRISB3  equ     1075
   692                           	global	_TRISB4
   693  0434                     _TRISB4  equ     1076
   694                           	global	_TRISB5
   695  0435                     _TRISB5  equ     1077
   696                           	global	_TRISB6
   697  0436                     _TRISB6  equ     1078
   698                           	global	_TRISB7
   699  0437                     _TRISB7  equ     1079
   700                           	global	_TRISC0
   701  0438                     _TRISC0  equ     1080
   702                           	global	_TRISC1
   703  0439                     _TRISC1  equ     1081
   704                           	global	_TRISC2
   705  043A                     _TRISC2  equ     1082
   706                           	global	_TRISC3
   707  043B                     _TRISC3  equ     1083
   708                           	global	_TRISC4
   709  043C                     _TRISC4  equ     1084
   710                           	global	_TRISC5
   711  043D                     _TRISC5  equ     1085
   712                           	global	_TRISC6
   713  043E                     _TRISC6  equ     1086
   714                           	global	_TRISC7
   715  043F                     _TRISC7  equ     1087
   716                           	global	_TRISD0
   717  0440                     _TRISD0  equ     1088
   718                           	global	_TRISD1
   719  0441                     _TRISD1  equ     1089
   720                           	global	_TRISD2
   721  0442                     _TRISD2  equ     1090
   722                           	global	_TRISD3
   723  0443                     _TRISD3  equ     1091
   724                           	global	_TRISD4
   725  0444                     _TRISD4  equ     1092
   726                           	global	_TRISD5
   727  0445                     _TRISD5  equ     1093
   728                           	global	_TRISD6
   729  0446                     _TRISD6  equ     1094
   730                           	global	_TRISD7
   731  0447                     _TRISD7  equ     1095
   732                           	global	_TRISE0
   733  0448                     _TRISE0  equ     1096
   734                           	global	_TRISE1
   735  0449                     _TRISE1  equ     1097
   736                           	global	_TRISE2
   737  044A                     _TRISE2  equ     1098
   738                           	global	_TRISE3
   739  044B                     _TRISE3  equ     1099
   740                           	global	_TRMT
   741  04C1                     _TRMT  equ     1217
   742                           	global	_TUN0
   743  0480                     _TUN0  equ     1152
   744                           	global	_TUN1
   745  0481                     _TUN1  equ     1153
   746                           	global	_TUN2
   747  0482                     _TUN2  equ     1154
   748                           	global	_TUN3
   749  0483                     _TUN3  equ     1155
   750                           	global	_TUN4
   751  0484                     _TUN4  equ     1156
   752                           	global	_TX9
   753  04C6                     _TX9  equ     1222
   754                           	global	_TX9D
   755  04C0                     _TX9D  equ     1216
   756                           	global	_TXEN
   757  04C5                     _TXEN  equ     1221
   758                           	global	_TXIE
   759  0464                     _TXIE  equ     1124
   760                           	global	_UA
   761  04A1                     _UA  equ     1185
   762                           	global	_ULPWUE
   763  0475                     _ULPWUE  equ     1141
   764                           	global	_ULPWUIE
   765  046A                     _ULPWUIE  equ     1130
   766                           	global	_VCFG0
   767  04FC                     _VCFG0  equ     1276
   768                           	global	_VCFG1
   769  04FD                     _VCFG1  equ     1277
   770                           	global	_VR0
   771  04B8                     _VR0  equ     1208
   772                           	global	_VR1
   773  04B9                     _VR1  equ     1209
   774                           	global	_VR2
   775  04BA                     _VR2  equ     1210
   776                           	global	_VR3
   777  04BB                     _VR3  equ     1211
   778                           	global	_VREN
   779  04BF                     _VREN  equ     1215
   780                           	global	_VROE
   781  04BE                     _VROE  equ     1214
   782                           	global	_VRR
   783  04BD                     _VRR  equ     1213
   784                           	global	_VRSS
   785  04BC                     _VRSS  equ     1212
   786                           	global	_WPUB0
   787  04A8                     _WPUB0  equ     1192
   788                           	global	_WPUB1
   789  04A9                     _WPUB1  equ     1193
   790                           	global	_WPUB2
   791  04AA                     _WPUB2  equ     1194
   792                           	global	_WPUB3
   793  04AB                     _WPUB3  equ     1195
   794                           	global	_WPUB4
   795  04AC                     _WPUB4  equ     1196
   796                           	global	_WPUB5
   797  04AD                     _WPUB5  equ     1197
   798                           	global	_WPUB6
   799  04AE                     _WPUB6  equ     1198
   800                           	global	_WPUB7
   801  04AF                     _WPUB7  equ     1199
   802                           	global	_CM1CON0
   803  0107                     _CM1CON0  equ     263
   804                           	global	_CM2CON0
   805  0108                     _CM2CON0  equ     264
   806                           	global	_CM2CON1
   807  0109                     _CM2CON1  equ     265
   808                           	global	_EEADR
   809  010D                     _EEADR  equ     269
   810                           	global	_EEADRH
   811  010F                     _EEADRH  equ     271
   812                           	global	_EEADRL
   813  010D                     _EEADRL  equ     269
   814                           	global	_EEDAT
   815  010C                     _EEDAT  equ     268
   816                           	global	_EEDATA
   817  010C                     _EEDATA  equ     268
   818                           	global	_EEDATH
   819  010E                     _EEDATH  equ     270
   820                           	global	_WDTCON
   821  0105                     _WDTCON  equ     261
   822                           	global	_C1CH0
   823  0838                     _C1CH0  equ     2104
   824                           	global	_C1CH1
   825  0839                     _C1CH1  equ     2105
   826                           	global	_C1OE
   827  083D                     _C1OE  equ     2109
   828                           	global	_C1ON
   829  083F                     _C1ON  equ     2111
   830                           	global	_C1OUT
   831  083E                     _C1OUT  equ     2110
   832                           	global	_C1POL
   833  083C                     _C1POL  equ     2108
   834                           	global	_C1R
   835  083A                     _C1R  equ     2106
   836                           	global	_C1RSEL
   837  084D                     _C1RSEL  equ     2125
   838                           	global	_C2CH0
   839  0840                     _C2CH0  equ     2112
   840                           	global	_C2CH1
   841  0841                     _C2CH1  equ     2113
   842                           	global	_C2OE
   843  0845                     _C2OE  equ     2117
   844                           	global	_C2ON
   845  0847                     _C2ON  equ     2119
   846                           	global	_C2OUT
   847  0846                     _C2OUT  equ     2118
   848                           	global	_C2POL
   849  0844                     _C2POL  equ     2116
   850                           	global	_C2R
   851  0842                     _C2R  equ     2114
   852                           	global	_C2RSEL
   853  084C                     _C2RSEL  equ     2124
   854                           	global	_C2SYNC
   855  0848                     _C2SYNC  equ     2120
   856                           	global	_MC1OUT
   857  084F                     _MC1OUT  equ     2127
   858                           	global	_MC2OUT
   859  084E                     _MC2OUT  equ     2126
   860                           	global	_SWDTEN
   861  0828                     _SWDTEN  equ     2088
   862                           	global	_T1GSS
   863  0849                     _T1GSS  equ     2121
   864                           	global	_WDTPS0
   865  0829                     _WDTPS0  equ     2089
   866                           	global	_WDTPS1
   867  082A                     _WDTPS1  equ     2090
   868                           	global	_WDTPS2
   869  082B                     _WDTPS2  equ     2091
   870                           	global	_WDTPS3
   871  082C                     _WDTPS3  equ     2092
   872                           	global	_ANSEL
   873  0188                     _ANSEL  equ     392
   874                           	global	_ANSELH
   875  0189                     _ANSELH  equ     393
   876                           	global	_BAUDCTL
   877  0187                     _BAUDCTL  equ     391
   878                           	global	_EECON1
   879  018C                     _EECON1  equ     396
   880                           	global	_EECON2
   881  018D                     _EECON2  equ     397
   882                           	global	_SRCON
   883  0185                     _SRCON  equ     389
   884                           	global	_ABDEN
   885  0C38                     _ABDEN  equ     3128
   886                           	global	_ABDOVF
   887  0C3F                     _ABDOVF  equ     3135
   888                           	global	_ANS0
   889  0C40                     _ANS0  equ     3136
   890                           	global	_ANS1
   891  0C41                     _ANS1  equ     3137
   892                           	global	_ANS10
   893  0C4A                     _ANS10  equ     3146
   894                           	global	_ANS11
   895  0C4B                     _ANS11  equ     3147
   896                           	global	_ANS12
   897  0C4C                     _ANS12  equ     3148
   898                           	global	_ANS13
   899  0C4D                     _ANS13  equ     3149
   900                           	global	_ANS2
   901  0C42                     _ANS2  equ     3138
   902                           	global	_ANS3
   903  0C43                     _ANS3  equ     3139
   904                           	global	_ANS4
   905  0C44                     _ANS4  equ     3140
   906                           	global	_ANS5
   907  0C45                     _ANS5  equ     3141
   908                           	global	_ANS6
   909  0C46                     _ANS6  equ     3142
   910                           	global	_ANS7
   911  0C47                     _ANS7  equ     3143
   912                           	global	_ANS8
   913  0C48                     _ANS8  equ     3144
   914                           	global	_ANS9
   915  0C49                     _ANS9  equ     3145
   916                           	global	_BRG16
   917  0C3B                     _BRG16  equ     3131
   918                           	global	_C1SEN
   919  0C2D                     _C1SEN  equ     3117
   920                           	global	_C2REN
   921  0C2C                     _C2REN  equ     3116
   922                           	global	_EEPGD
   923  0C67                     _EEPGD  equ     3175
   924                           	global	_FVREN
   925  0C28                     _FVREN  equ     3112
   926                           	global	_PULSR
   927  0C2A                     _PULSR  equ     3114
   928                           	global	_PULSS
   929  0C2B                     _PULSS  equ     3115
   930                           	global	_RCIDL
   931  0C3E                     _RCIDL  equ     3134
   932                           	global	_RD
   933  0C60                     _RD  equ     3168
   934                           	global	_SCKP
   935  0C3C                     _SCKP  equ     3132
   936                           	global	_SR0
   937  0C2E                     _SR0  equ     3118
   938                           	global	_SR1
   939  0C2F                     _SR1  equ     3119
   940                           	global	_WR
   941  0C61                     _WR  equ     3169
   942                           	global	_WREN
   943  0C62                     _WREN  equ     3170
   944                           	global	_WRERR
   945  0C63                     _WRERR  equ     3171
   946                           	global	_WUE
   947  0C39                     _WUE  equ     3129
   948                           	file	"Arithmetic.as"
   949                           	line	#
   950                           psect cinit,class=CODE,delta=2
   951                           global start_initialization
   952  03C4                     start_initialization:
   953                           
   954                           psect	bssCOMMON,class=COMMON,space=1
   955                           global __pbssCOMMON
   956  0070                     __pbssCOMMON:
   957  0070                     _count:
   958  0070                            ds      2
   959                           
   960  0072                     _num1:
   961  0072                            ds      2
   962                           
   963  0074                     _num2:
   964  0074                            ds      2
   965                           
   966                           psect	bssBANK0,class=BANK0,space=1
   967                           global __pbssBANK0
   968  005B                     __pbssBANK0:
   969  005B                     _product:
   970  005B                            ds      2
   971                           
   972  005D                     _sum:
   973  005D                            ds      2
   974                           
   975  005F                     _var:
   976  005F                            ds      2
   977                           
   978                           psect	dataBANK0,class=BANK0,space=1
   979                           global __pdataBANK0
   980  0020                     __pdataBANK0:
   981                           	file	"C:\Users\gowth\Documents\PIC Programs\Keypad\Arithmetic\Arithmetic.c"
   982                           	line	61
   983  0020                     addition@F785:
   984  0020                            ds      10
   985                           
   986                           psect	dataBANK0
   987                           	file	"C:\Users\gowth\Documents\PIC Programs\Keypad\Arithmetic\Arithmetic.c"
   988                           	line	28
   989  002A                     display@F780:
   990  002A                            ds      10
   991                           
   992                           psect	dataBANK0
   993                           	file	"C:\Users\gowth\Documents\PIC Programs\Keypad\Arithmetic\Arithmetic.c"
   994                           	line	86
   995  0034                     multiplication@F790:
   996  0034                            ds      10
   997                           
   998                           ; Clear objects allocated to COMMON
   999                           psect cinit,class=CODE,delta=2
  1000  03C4  01F0               	clrf	((__pbssCOMMON)+0)&07Fh
  1001  03C5  01F1               	clrf	((__pbssCOMMON)+1)&07Fh
  1002  03C6  01F2               	clrf	((__pbssCOMMON)+2)&07Fh
  1003  03C7  01F3               	clrf	((__pbssCOMMON)+3)&07Fh
  1004  03C8  01F4               	clrf	((__pbssCOMMON)+4)&07Fh
  1005  03C9  01F5               	clrf	((__pbssCOMMON)+5)&07Fh
  1006                           ; Clear objects allocated to BANK0
  1007                           psect cinit,class=CODE,delta=2
  1008  03CA  01DB               	clrf	((__pbssBANK0)+0)&07Fh
  1009  03CB  01DC               	clrf	((__pbssBANK0)+1)&07Fh
  1010  03CC  01DD               	clrf	((__pbssBANK0)+2)&07Fh
  1011  03CD  01DE               	clrf	((__pbssBANK0)+3)&07Fh
  1012  03CE  01DF               	clrf	((__pbssBANK0)+4)&07Fh
  1013  03CF  01E0               	clrf	((__pbssBANK0)+5)&07Fh
  1014                           global btemp
  1015                           psect inittext,class=CODE,delta=2
  1016                           global init_fetch,btemp
  1017                           ;	Called with low address in FSR and high address in W
  1018  03A0                     init_fetch:
  1019  03A0  087E               	movf btemp,w
  1020  03A1  008A               	movwf pclath
  1021  03A2  087F               	movf btemp+1,w
  1022  03A3  0082               	movwf pc
  1023                           global init_ram
  1024                           ;Called with:
  1025                           ;	high address of idata address in btemp 
  1026                           ;	low address of idata address in btemp+1 
  1027                           ;	low address of data in FSR
  1028                           ;	high address + 1 of data in btemp-1
  1029  03A4                     init_ram:
  1030  03A4  23A0  120A  118A   	fcall init_fetch
  1031  03A7  0080               	movwf indf,f
  1032  03A8  0A84               	incf fsr,f
  1033  03A9  0804               	movf fsr,w
  1034  03AA  067D               	xorwf btemp-1,w
  1035  03AB  1903               	btfsc status,2
  1036  03AC  3400               	retlw 0
  1037  03AD  0AFF               	incf btemp+1,f
  1038  03AE  1903               	btfsc status,2
  1039  03AF  0AFE               	incf btemp,f
  1040  03B0  2BA4               	goto init_ram
  1041                           ; Initialize objects allocated to BANK0
  1042                           psect cinit,class=CODE,delta=2
  1043                           global init_ram, __pidataBANK0
  1044  03D0  1383               	bcf	status, 7	;select IRP bank0
  1045  03D1  303E               	movlw low(__pdataBANK0+30)
  1046  03D2  00FD               	movwf btemp-1,f
  1047  03D3  3003               	movlw high(__pidataBANK0)
  1048  03D4  00FE               	movwf btemp,f
  1049  03D5  30E2               	movlw low(__pidataBANK0)
  1050  03D6  00FF               	movwf btemp+1,f
  1051  03D7  3020               	movlw low(__pdataBANK0)
  1052+ 03D8  0084               	movwf fsr,f
  1053  03D9  120A  118A  23A4   	fcall init_ram
              120A  118A         
  1054                           psect cinit,class=CODE,delta=2
  1055                           global end_of_initialization
  1056                           
  1057                           ;End of C runtime variable initationation code
  1058                           
  1059  03DE                     end_of_initialization:
  1060  03DE  0183               clrf status
  1061  03DF  120A  118A  2EB2   ljmp _main	;jump to C main() function
  1062                           psect	cstackCOMMON,class=COMMON,space=1
  1063                           global __pcstackCOMMON
  1064  0076                     __pcstackCOMMON:
  1065                           	global	??___awmod
  1066  0076                     ??___awmod: ;@ 0x0
  1067                           	global	??___awdiv
  1068  0076                     ??___awdiv: ;@ 0x0
  1069                           	global	??___wmul
  1070  0076                     ??___wmul: ;@ 0x0
  1071                           	global	??_time_delay
  1072  0076                     ??_time_delay: ;@ 0x0
  1073  0076                     	ds	1
  1074                           	global	??_multiplication
  1075  0077                     ??_multiplication: ;@ 0x1
  1076                           	global	?_addition
  1077  0077                     ?_addition: ;@ 0x1
  1078  0077                     	ds	4
  1079                           psect	cstackBANK0,class=BANK0,space=1
  1080                           global __pcstackBANK0
  1081  003E                     __pcstackBANK0:
  1082                           	global	?_time_delay
  1083  003E                     ?_time_delay: ;@ 0x0
  1084                           	global	___awdiv@counter
  1085  003E                     ___awdiv@counter:	; 1 bytes @ 0x0
  1086                           	global	___awmod@sign
  1087  003E                     ___awmod@sign:	; 1 bytes @ 0x0
  1088                           	global	___wmul@product
  1089  003E                     ___wmul@product:	; 2 bytes @ 0x0
  1090                           	global	time_delay@x
  1091  003E                     time_delay@x:	; 2 bytes @ 0x0
  1092  003E                     	ds	1
  1093                           	global	___awdiv@sign
  1094  003F                     ___awdiv@sign:	; 1 bytes @ 0x1
  1095                           	global	___awmod@counter
  1096  003F                     ___awmod@counter:	; 1 bytes @ 0x1
  1097  003F                     	ds	1
  1098                           	global	?___wmul
  1099  0040                     ?___wmul: ;@ 0x2
  1100                           	global	?___awmod
  1101  0040                     ?___awmod: ;@ 0x2
  1102                           	global	___wmul@multiplier
  1103  0040                     ___wmul@multiplier:	; 2 bytes @ 0x2
  1104                           	global	___awmod@dividend
  1105  0040                     ___awmod@dividend:	; 2 bytes @ 0x2
  1106                           	global	___awdiv@quotient
  1107  0040                     ___awdiv@quotient:	; 2 bytes @ 0x2
  1108  0040                     	ds	2
  1109                           	global	?___awdiv
  1110  0042                     ?___awdiv: ;@ 0x4
  1111                           	global	___awdiv@dividend
  1112  0042                     ___awdiv@dividend:	; 2 bytes @ 0x4
  1113                           	global	___wmul@multiplicand
  1114  0042                     ___wmul@multiplicand:	; 2 bytes @ 0x4
  1115                           	global	___awmod@divisor
  1116  0042                     ___awmod@divisor:	; 2 bytes @ 0x4
  1117  0042                     	ds	2
  1118                           	global	___awdiv@divisor
  1119  0044                     ___awdiv@divisor:	; 2 bytes @ 0x6
  1120  0044                     	ds	2
  1121                           	global	??_addition
  1122  0046                     ??_addition: ;@ 0x8
  1123                           	global	??_display
  1124  0046                     ??_display: ;@ 0x8
  1125                           	global	multiplication@number
  1126  0046                     multiplication@number:	; 10 bytes @ 0x8
  1127  0046                     	ds	4
  1128                           	global	addition@number
  1129  004A                     addition@number:	; 10 bytes @ 0xC
  1130                           	global	display@number
  1131  004A                     display@number:	; 10 bytes @ 0xC
  1132  004A                     	ds	6
  1133                           	global	multiplication@units
  1134  0050                     multiplication@units:	; 2 bytes @ 0x12
  1135  0050                     	ds	2
  1136                           	global	multiplication@tens
  1137  0052                     multiplication@tens:	; 2 bytes @ 0x14
  1138  0052                     	ds	2
  1139                           	global	?_multiplication
  1140  0054                     ?_multiplication: ;@ 0x16
  1141                           	global	addition@units
  1142  0054                     addition@units:	; 2 bytes @ 0x16
  1143                           	global	display@units
  1144  0054                     display@units:	; 2 bytes @ 0x16
  1145  0054                     	ds	2
  1146                           	global	display@tens
  1147  0056                     display@tens:	; 2 bytes @ 0x18
  1148                           	global	addition@tens
  1149  0056                     addition@tens:	; 2 bytes @ 0x18
  1150  0056                     	ds	2
  1151                           	global	?_display
  1152  0058                     ?_display: ;@ 0x1A
  1153                           	global	display@var
  1154  0058                     display@var:	; 2 bytes @ 0x1A
  1155  0058                     	ds	2
  1156                           	global	??_main
  1157  005A                     ??_main: ;@ 0x1C
  1158  005A                     	ds	1
  1159                           	global	?_main
  1160  005B                     ?_main: ;@ 0x1D
  1161                           ;Data sizes: Strings 0, constant 0, data 30, bss 12, persistent 0 stack 0
  1162                           ;Auto spaces:   Size  Autos    Used
  1163                           ; COMMON          14      5      11
  1164                           ; BANK0           80     29      65
  1165                           ; BANK1           80      0       0
  1166                           ; BANK3           96      0       0
  1167                           ; BANK2           96      0       0
  1168                           
  1169                           
  1170                           ;Pointer list with targets:
  1171                           
  1172                           ;?___wmul	unsigned int  size(1); Largest target is 0
  1173                           ;?___awdiv	int  size(1); Largest target is 0
  1174                           ;?___awmod	int  size(1); Largest target is 0
  1175                           
  1176                           
  1177                           ;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1178                           
  1179                           
  1180                           ;Call graph:                      Base Space Used Autos Args Refs Density
  1181                           ;_main                                                1    0 2283   0.00
  1182                           ;                                   28 BANK0    1
  1183                           ;            _display
  1184                           ;           _addition
  1185                           ;     _multiplication
  1186                           ;  _multiplication                                   18    0  801   0.00
  1187                           ;                                    1 COMMO    4
  1188                           ;                                    8 BANK0   14
  1189                           ;            ___awmod
  1190                           ;             ___wmul
  1191                           ;            ___awdiv
  1192                           ;         _time_delay
  1193                           ;  _addition                                         18    0  693   0.00
  1194                           ;                                    8 BANK0   18
  1195                           ;            ___awmod
  1196                           ;            ___awdiv
  1197                           ;         _time_delay
  1198                           ;  _display                                          18    2  789   0.00
  1199                           ;                                    8 BANK0   20
  1200                           ;            ___awdiv
  1201                           ;            ___awmod
  1202                           ;         _time_delay
  1203                           ;    ___wmul                                          2    4  108   0.00
  1204                           ;                                    0 BANK0    6
  1205                           ;    ___awdiv                                         5    4  222   0.00
  1206                           ;                                    0 COMMO    1
  1207                           ;                                    0 BANK0    8
  1208                           ;    ___awmod                                         3    4  342   0.00
  1209                           ;                                    0 COMMO    1
  1210                           ;                                    0 BANK0    6
  1211                           ;    _time_delay                                      0    2   24   0.00
  1212                           ;                                    0 BANK0    2
  1213                           ; Estimated maximum call depth 2
  1214                           ; Address spaces:
  1215                           
  1216                           ;Name               Size   Autos  Total    Cost      Usage
  1217                           ;BITCOMMON            E      0       0       0        0.0%
  1218                           ;CODE                 0      0       0       0        0.0%
  1219                           ;NULL                 0      0       0       0        0.0%
  1220                           ;COMMON               E      5       B       1       78.6%
  1221                           ;SFR0                 0      0       0       1        0.0%
  1222                           ;BITSFR0              0      0       0       1        0.0%
  1223                           ;BITSFR1              0      0       0       2        0.0%
  1224                           ;SFR1                 0      0       0       2        0.0%
  1225                           ;ABS                  0      0      4C       2        0.0%
  1226                           ;STACK                0      0       0       3        0.0%
  1227                           ;BITBANK0            50      0       0       4        0.0%
  1228                           ;SFR3                 0      0       0       4        0.0%
  1229                           ;BITSFR3              0      0       0       4        0.0%
  1230                           ;BANK0               50     1D      41       5       81.3%
  1231                           ;BITSFR2              0      0       0       5        0.0%
  1232                           ;SFR2                 0      0       0       5        0.0%
  1233                           ;BITBANK1            50      0       0       6        0.0%
  1234                           ;BANK1               50      0       0       7        0.0%
  1235                           ;BITBANK3            60      0       0       8        0.0%
  1236                           ;BANK3               60      0       0       9        0.0%
  1237                           ;BITBANK2            60      0       0      10        0.0%
  1238                           ;BANK2               60      0       0      11        0.0%
  1239                           ;DATA                 0      0      4C      12        0.0%
  1240                           ;EEDATA             100      0       0    1000        0.0%
  1241                           
  1242                           	global	_main
  1243                           psect	maintext,local,class=CODE,delta=2
  1244                           global __pmaintext
  1245  06B2                     __pmaintext:
  1246                           
  1247                           ; *************** function _main *****************
  1248                           ; Defined at:
  1249                           ;		line 104 in file "C:\Users\gowth\Documents\PIC Programs\Keypad\Arithmetic\Arithmetic.
                                 c"
  1250                           ; Parameters:    Size  Location     Type
  1251                           ;		None
  1252                           ; Auto vars:     Size  Location     Type
  1253                           ;		None
  1254                           ; Return value:  Size  Location     Type
  1255                           ;		None               void
  1256                           ; Registers used:
  1257                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1258                           ; Tracked objects:
  1259                           ;		On entry : 17F/0
  1260                           ;		On exit  : 0/0
  1261                           ;		Unchanged: 0/0
  1262                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1263                           ;      Locals:         0       1       0       0       0
  1264                           ;      Temp:     1
  1265                           ;      Total:    1
  1266                           ; This function calls:
  1267                           ;		_display
  1268                           ;		_addition
  1269                           ;		_multiplication
  1270                           ; This function is called by:
  1271                           ;		Startup code after reset
  1272                           ; This function uses a non-reentrant model
  1273                           ; 
  1274                           psect	maintext
  1275                           	file	"C:\Users\gowth\Documents\PIC Programs\Keypad\Arithmetic\Arithmetic.c"
  1276                           	line	104
  1277                           	global	__size_of_main
  1278  014E                     	__size_of_main	equ	__end_of_main-_main
  1279                           ;Arithmetic.c: 103: void main()
  1280                           ;Arithmetic.c: 104: {
  1281                           	
  1282  06B2                     _main:	
  1283                           	opt stack 8
  1284                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1285                           	line	105
  1286                           	
  1287  06B2                     l30000823:	
  1288                           ;Arithmetic.c: 105: TRISA=0X00;
  1289  06B2  1003               	clrc
  1290  06B3  3000               	movlw	0
  1291  06B4  1803               	btfsc	status,0
  1292  06B5  3001               	movlw	1
  1293  06B6  1683               	bsf	status, 5	;RP0=1, select bank1
  1294  06B7  1303               	bcf	status, 6	;RP1=0, select bank1
  1295  06B8  0085               	movwf	(133)^080h	;volatile
  1296                           	
  1297  06B9                     l30000824:	
  1298                           	line	106
  1299                           ;Arithmetic.c: 106: TRISB=0X07;
  1300  06B9  3007               	movlw	(07h)
  1301  06BA  0086               	movwf	(134)^080h	;volatile
  1302                           	
  1303  06BB                     l30000825:	
  1304                           	line	107
  1305                           ;Arithmetic.c: 107: TRISC=0X00;
  1306  06BB  1003               	clrc
  1307  06BC  3000               	movlw	0
  1308  06BD  1803               	btfsc	status,0
  1309  06BE  3001               	movlw	1
  1310  06BF  0087               	movwf	(135)^080h	;volatile
  1311                           	
  1312  06C0                     l30000826:	
  1313                           	line	108
  1314                           ;Arithmetic.c: 108: TRISE=0X00;
  1315  06C0  1003               	clrc
  1316  06C1  3000               	movlw	0
  1317  06C2  1803               	btfsc	status,0
  1318  06C3  3001               	movlw	1
  1319  06C4  0089               	movwf	(137)^080h	;volatile
  1320                           	
  1321  06C5                     l30000827:	
  1322                           	line	110
  1323                           ;Arithmetic.c: 110: PORTA=0X00;
  1324  06C5  1003               	clrc
  1325  06C6  3000               	movlw	0
  1326  06C7  1803               	btfsc	status,0
  1327  06C8  3001               	movlw	1
  1328  06C9  1283               	bcf	status, 5	;RP0=0, select bank0
  1329  06CA  1303               	bcf	status, 6	;RP1=0, select bank0
  1330  06CB  0085               	movwf	(5)	;volatile
  1331                           	
  1332  06CC                     l30000828:	
  1333                           	line	111
  1334                           ;Arithmetic.c: 111: PORTB=0X00;
  1335  06CC  1003               	clrc
  1336  06CD  3000               	movlw	0
  1337  06CE  1803               	btfsc	status,0
  1338  06CF  3001               	movlw	1
  1339  06D0  0086               	movwf	(6)	;volatile
  1340                           	
  1341  06D1                     l30000829:	
  1342                           	line	112
  1343                           ;Arithmetic.c: 112: PORTC=0X00;
  1344  06D1  1003               	clrc
  1345  06D2  3000               	movlw	0
  1346  06D3  1803               	btfsc	status,0
  1347  06D4  3001               	movlw	1
  1348  06D5  0087               	movwf	(7)	;volatile
  1349                           	
  1350  06D6                     l30000830:	
  1351                           	line	113
  1352                           ;Arithmetic.c: 113: PORTE=0X00;
  1353  06D6  1003               	clrc
  1354  06D7  3000               	movlw	0
  1355  06D8  1803               	btfsc	status,0
  1356  06D9  3001               	movlw	1
  1357  06DA  0089               	movwf	(9)	;volatile
  1358                           	
  1359  06DB                     l30000831:	
  1360                           	line	115
  1361                           ;Arithmetic.c: 115: ANSEL=0;
  1362  06DB  1003               	clrc
  1363  06DC  3000               	movlw	0
  1364  06DD  1803               	btfsc	status,0
  1365  06DE  3001               	movlw	1
  1366  06DF  1683               	bsf	status, 5	;RP0=1, select bank3
  1367  06E0  1703               	bsf	status, 6	;RP1=1, select bank3
  1368  06E1  0088               	movwf	(392)^0180h
  1369                           	
  1370  06E2                     l30000832:	
  1371                           	line	116
  1372                           ;Arithmetic.c: 116: ANSELH=0;
  1373  06E2  1003               	clrc
  1374  06E3  3000               	movlw	0
  1375  06E4  1803               	btfsc	status,0
  1376  06E5  3001               	movlw	1
  1377  06E6  0089               	movwf	(393)^0180h
  1378  06E7  2FED               	goto	l30000854
  1379                           	
  1380  06E8                     l30000833:	
  1381                           	line	123
  1382                           ;Arithmetic.c: 122: {
  1383                           ;Arithmetic.c: 123: display(var);
  1384  06E8  1283               	bcf	status, 5	;RP0=0, select bank0
  1385  06E9  1303               	bcf	status, 6	;RP1=0, select bank0
  1386  06EA  0860               	movf	(_var+1),w
  1387  06EB  01D9               	clrf	(?_display+1)
  1388  06EC  07D9               	addwf	(?_display+1)
  1389  06ED  085F               	movf	(_var),w
  1390  06EE  01D8               	clrf	(?_display)
  1391  06EF  07D8               	addwf	(?_display)
  1392                           
  1393  06F0  120A  118A  24FF   	fcall	_display
              120A  118A         
  1394                           	
  1395  06F5                     l30000834:	
  1396                           	line	124
  1397                           ;Arithmetic.c: 124: RB3=1,RB4=0,RB5=0,RB6=0;
  1398  06F5  1283               	bcf	status, 5	;RP0=0, select bank0
  1399  06F6  1303               	bcf	status, 6	;RP1=0, select bank0
  1400  06F7  1586               	bsf	(51/8),(51)&7
  1401                           	
  1402  06F8                     l30000835:	
  1403  06F8  1206               	bcf	(52/8),(52)&7
  1404                           	
  1405  06F9                     l30000836:	
  1406  06F9  1286               	bcf	(53/8),(53)&7
  1407                           	
  1408  06FA                     l30000837:	
  1409  06FA  1306               	bcf	(54/8),(54)&7
  1410                           	
  1411  06FB                     l30000838:	
  1412                           	line	126
  1413                           ;Arithmetic.c: 126: if(count==1)
  1414  06FB  3001               	movlw	01h
  1415  06FC  0670               	xorwf	(_count),w
  1416  06FD  0471               	iorwf	(_count+1),w
  1417  06FE  1D03               	skipz
  1418  06FF  2F01               	goto	u1171
  1419  0700  2F02               	goto	u1170
  1420  0701                     u1171:
  1421  0701  2F03               	goto	l25
  1422  0702                     u1170:
  1423                           	
  1424  0702                     l30000839:	
  1425                           	line	128
  1426                           ;Arithmetic.c: 127: {
  1427                           ;Arithmetic.c: 128: RE0=1;
  1428  0702  1409               	bsf	(72/8),(72)&7
  1429                           	
  1430  0703                     l25:	
  1431                           	line	131
  1432                           ;Arithmetic.c: 129: }
  1433                           ;Arithmetic.c: 131: if(RB0==1)
  1434  0703  1C06               	btfss	(48/8),(48)&7
  1435  0704  2F06               	goto	u1181
  1436  0705  2F07               	goto	u1180
  1437  0706                     u1181:
  1438  0706  2F15               	goto	l26
  1439  0707                     u1180:
  1440                           	
  1441  0707                     l30000840:	
  1442                           	line	133
  1443                           ;Arithmetic.c: 132: {
  1444                           ;Arithmetic.c: 133: var=1;
  1445  0707  3001               	movlw	low(01h)
  1446  0708  00DF               	movwf	(_var)
  1447  0709  3000               	movlw	high(01h)
  1448  070A  00E0               	movwf	((_var))+1
  1449                           	line	134
  1450                           ;Arithmetic.c: 134: count++;
  1451  070B  3001               	movlw	low(01h)
  1452  070C  07F0               	addwf	(_count),f
  1453  070D  1803               	skipnc
  1454  070E  0AF1               	incf	(_count+1),f
  1455  070F  3000               	movlw	high(01h)
  1456  0710  07F1               	addwf	(_count+1),f
  1457                           	
  1458  0711                     l27:	
  1459                           	line	135
  1460  0711  1806               	btfsc	(48/8),(48)&7
  1461  0712  2F14               	goto	u1191
  1462  0713  2F15               	goto	u1190
  1463  0714                     u1191:
  1464  0714  2F11               	goto	l27
  1465  0715                     u1190:
  1466                           	
  1467  0715                     l26:	
  1468                           	line	137
  1469                           ;Arithmetic.c: 136: }
  1470                           ;Arithmetic.c: 137: if(RB1==1)
  1471  0715  1C86               	btfss	(49/8),(49)&7
  1472  0716  2F18               	goto	u1201
  1473  0717  2F19               	goto	u1200
  1474  0718                     u1201:
  1475  0718  2F27               	goto	l30
  1476  0719                     u1200:
  1477                           	
  1478  0719                     l30000841:	
  1479                           	line	139
  1480                           ;Arithmetic.c: 138: {
  1481                           ;Arithmetic.c: 139: var=2;
  1482  0719  3002               	movlw	low(02h)
  1483  071A  00DF               	movwf	(_var)
  1484  071B  3000               	movlw	high(02h)
  1485  071C  00E0               	movwf	((_var))+1
  1486                           	line	140
  1487                           ;Arithmetic.c: 140: count++;
  1488  071D  3001               	movlw	low(01h)
  1489  071E  07F0               	addwf	(_count),f
  1490  071F  1803               	skipnc
  1491  0720  0AF1               	incf	(_count+1),f
  1492  0721  3000               	movlw	high(01h)
  1493  0722  07F1               	addwf	(_count+1),f
  1494                           	
  1495  0723                     l31:	
  1496                           	line	141
  1497  0723  1886               	btfsc	(49/8),(49)&7
  1498  0724  2F26               	goto	u1211
  1499  0725  2F27               	goto	u1210
  1500  0726                     u1211:
  1501  0726  2F23               	goto	l31
  1502  0727                     u1210:
  1503                           	
  1504  0727                     l30:	
  1505                           	line	143
  1506                           ;Arithmetic.c: 142: }
  1507                           ;Arithmetic.c: 143: if(RB2==1)
  1508  0727  1D06               	btfss	(50/8),(50)&7
  1509  0728  2F2A               	goto	u1221
  1510  0729  2F2B               	goto	u1220
  1511  072A                     u1221:
  1512  072A  2F39               	goto	l34
  1513  072B                     u1220:
  1514                           	
  1515  072B                     l30000842:	
  1516                           	line	145
  1517                           ;Arithmetic.c: 144: {
  1518                           ;Arithmetic.c: 145: var=3;
  1519  072B  3003               	movlw	low(03h)
  1520  072C  00DF               	movwf	(_var)
  1521  072D  3000               	movlw	high(03h)
  1522  072E  00E0               	movwf	((_var))+1
  1523                           	line	146
  1524                           ;Arithmetic.c: 146: count++;
  1525  072F  3001               	movlw	low(01h)
  1526  0730  07F0               	addwf	(_count),f
  1527  0731  1803               	skipnc
  1528  0732  0AF1               	incf	(_count+1),f
  1529  0733  3000               	movlw	high(01h)
  1530  0734  07F1               	addwf	(_count+1),f
  1531                           	
  1532  0735                     l35:	
  1533                           	line	147
  1534  0735  1906               	btfsc	(50/8),(50)&7
  1535  0736  2F38               	goto	u1231
  1536  0737  2F39               	goto	u1230
  1537  0738                     u1231:
  1538  0738  2F35               	goto	l35
  1539  0739                     u1230:
  1540                           	
  1541  0739                     l34:	
  1542                           	line	152
  1543                           ;Arithmetic.c: 148: }
  1544                           ;Arithmetic.c: 152: RB3=0,RB4=1,RB5=0,RB6=0;
  1545  0739  1186               	bcf	(51/8),(51)&7
  1546  073A  1606               	bsf	(52/8),(52)&7
  1547  073B  1286               	bcf	(53/8),(53)&7
  1548  073C  1306               	bcf	(54/8),(54)&7
  1549                           	line	153
  1550                           ;Arithmetic.c: 153: if(RB0==1)
  1551  073D  1C06               	btfss	(48/8),(48)&7
  1552  073E  2F40               	goto	u1241
  1553  073F  2F41               	goto	u1240
  1554  0740                     u1241:
  1555  0740  2F4F               	goto	l38
  1556  0741                     u1240:
  1557                           	
  1558  0741                     l30000843:	
  1559                           	line	155
  1560                           ;Arithmetic.c: 154: {
  1561                           ;Arithmetic.c: 155: var=4;
  1562  0741  3004               	movlw	low(04h)
  1563  0742  00DF               	movwf	(_var)
  1564  0743  3000               	movlw	high(04h)
  1565  0744  00E0               	movwf	((_var))+1
  1566                           	line	156
  1567                           ;Arithmetic.c: 156: count++;
  1568  0745  3001               	movlw	low(01h)
  1569  0746  07F0               	addwf	(_count),f
  1570  0747  1803               	skipnc
  1571  0748  0AF1               	incf	(_count+1),f
  1572  0749  3000               	movlw	high(01h)
  1573  074A  07F1               	addwf	(_count+1),f
  1574                           	
  1575  074B                     l39:	
  1576                           	line	157
  1577  074B  1806               	btfsc	(48/8),(48)&7
  1578  074C  2F4E               	goto	u1251
  1579  074D  2F4F               	goto	u1250
  1580  074E                     u1251:
  1581  074E  2F4B               	goto	l39
  1582  074F                     u1250:
  1583                           	
  1584  074F                     l38:	
  1585                           	line	159
  1586                           ;Arithmetic.c: 158: }
  1587                           ;Arithmetic.c: 159: if(RB1==1)
  1588  074F  1C86               	btfss	(49/8),(49)&7
  1589  0750  2F52               	goto	u1261
  1590  0751  2F53               	goto	u1260
  1591  0752                     u1261:
  1592  0752  2F61               	goto	l42
  1593  0753                     u1260:
  1594                           	
  1595  0753                     l30000844:	
  1596                           	line	161
  1597                           ;Arithmetic.c: 160: {
  1598                           ;Arithmetic.c: 161: var=5;
  1599  0753  3005               	movlw	low(05h)
  1600  0754  00DF               	movwf	(_var)
  1601  0755  3000               	movlw	high(05h)
  1602  0756  00E0               	movwf	((_var))+1
  1603                           	line	162
  1604                           ;Arithmetic.c: 162: count++;
  1605  0757  3001               	movlw	low(01h)
  1606  0758  07F0               	addwf	(_count),f
  1607  0759  1803               	skipnc
  1608  075A  0AF1               	incf	(_count+1),f
  1609  075B  3000               	movlw	high(01h)
  1610  075C  07F1               	addwf	(_count+1),f
  1611                           	
  1612  075D                     l43:	
  1613                           	line	163
  1614  075D  1886               	btfsc	(49/8),(49)&7
  1615  075E  2F60               	goto	u1271
  1616  075F  2F61               	goto	u1270
  1617  0760                     u1271:
  1618  0760  2F5D               	goto	l43
  1619  0761                     u1270:
  1620                           	
  1621  0761                     l42:	
  1622                           	line	165
  1623                           ;Arithmetic.c: 164: }
  1624                           ;Arithmetic.c: 165: if(RB2==1)
  1625  0761  1D06               	btfss	(50/8),(50)&7
  1626  0762  2F64               	goto	u1281
  1627  0763  2F65               	goto	u1280
  1628  0764                     u1281:
  1629  0764  2F73               	goto	l46
  1630  0765                     u1280:
  1631                           	
  1632  0765                     l30000845:	
  1633                           	line	167
  1634                           ;Arithmetic.c: 166: {
  1635                           ;Arithmetic.c: 167: var=6;
  1636  0765  3006               	movlw	low(06h)
  1637  0766  00DF               	movwf	(_var)
  1638  0767  3000               	movlw	high(06h)
  1639  0768  00E0               	movwf	((_var))+1
  1640                           	line	168
  1641                           ;Arithmetic.c: 168: count++;
  1642  0769  3001               	movlw	low(01h)
  1643  076A  07F0               	addwf	(_count),f
  1644  076B  1803               	skipnc
  1645  076C  0AF1               	incf	(_count+1),f
  1646  076D  3000               	movlw	high(01h)
  1647  076E  07F1               	addwf	(_count+1),f
  1648                           	
  1649  076F                     l47:	
  1650                           	line	169
  1651  076F  1906               	btfsc	(50/8),(50)&7
  1652  0770  2F72               	goto	u1291
  1653  0771  2F73               	goto	u1290
  1654  0772                     u1291:
  1655  0772  2F6F               	goto	l47
  1656  0773                     u1290:
  1657                           	
  1658  0773                     l46:	
  1659                           	line	174
  1660                           ;Arithmetic.c: 170: }
  1661                           ;Arithmetic.c: 174: RB3=0,RB4=0,RB5=1,RB6=0;
  1662  0773  1186               	bcf	(51/8),(51)&7
  1663  0774  1206               	bcf	(52/8),(52)&7
  1664  0775  1686               	bsf	(53/8),(53)&7
  1665  0776  1306               	bcf	(54/8),(54)&7
  1666                           	line	175
  1667                           ;Arithmetic.c: 175: if(RB0==1)
  1668  0777  1C06               	btfss	(48/8),(48)&7
  1669  0778  2F7A               	goto	u1301
  1670  0779  2F7B               	goto	u1300
  1671  077A                     u1301:
  1672  077A  2F89               	goto	l50
  1673  077B                     u1300:
  1674                           	
  1675  077B                     l30000846:	
  1676                           	line	177
  1677                           ;Arithmetic.c: 176: {
  1678                           ;Arithmetic.c: 177: var=7;
  1679  077B  3007               	movlw	low(07h)
  1680  077C  00DF               	movwf	(_var)
  1681  077D  3000               	movlw	high(07h)
  1682  077E  00E0               	movwf	((_var))+1
  1683                           	line	178
  1684                           ;Arithmetic.c: 178: count++;
  1685  077F  3001               	movlw	low(01h)
  1686  0780  07F0               	addwf	(_count),f
  1687  0781  1803               	skipnc
  1688  0782  0AF1               	incf	(_count+1),f
  1689  0783  3000               	movlw	high(01h)
  1690  0784  07F1               	addwf	(_count+1),f
  1691                           	
  1692  0785                     l51:	
  1693                           	line	179
  1694  0785  1806               	btfsc	(48/8),(48)&7
  1695  0786  2F88               	goto	u1311
  1696  0787  2F89               	goto	u1310
  1697  0788                     u1311:
  1698  0788  2F85               	goto	l51
  1699  0789                     u1310:
  1700                           	
  1701  0789                     l50:	
  1702                           	line	181
  1703                           ;Arithmetic.c: 180: }
  1704                           ;Arithmetic.c: 181: if(RB1==1)
  1705  0789  1C86               	btfss	(49/8),(49)&7
  1706  078A  2F8C               	goto	u1321
  1707  078B  2F8D               	goto	u1320
  1708  078C                     u1321:
  1709  078C  2F9B               	goto	l54
  1710  078D                     u1320:
  1711                           	
  1712  078D                     l30000847:	
  1713                           	line	183
  1714                           ;Arithmetic.c: 182: {
  1715                           ;Arithmetic.c: 183: var=8;
  1716  078D  3008               	movlw	low(08h)
  1717  078E  00DF               	movwf	(_var)
  1718  078F  3000               	movlw	high(08h)
  1719  0790  00E0               	movwf	((_var))+1
  1720                           	line	184
  1721                           ;Arithmetic.c: 184: count++;
  1722  0791  3001               	movlw	low(01h)
  1723  0792  07F0               	addwf	(_count),f
  1724  0793  1803               	skipnc
  1725  0794  0AF1               	incf	(_count+1),f
  1726  0795  3000               	movlw	high(01h)
  1727  0796  07F1               	addwf	(_count+1),f
  1728                           	
  1729  0797                     l55:	
  1730                           	line	185
  1731  0797  1886               	btfsc	(49/8),(49)&7
  1732  0798  2F9A               	goto	u1331
  1733  0799  2F9B               	goto	u1330
  1734  079A                     u1331:
  1735  079A  2F97               	goto	l55
  1736  079B                     u1330:
  1737                           	
  1738  079B                     l54:	
  1739                           	line	187
  1740                           ;Arithmetic.c: 186: }
  1741                           ;Arithmetic.c: 187: if(RB2==1)
  1742  079B  1D06               	btfss	(50/8),(50)&7
  1743  079C  2F9E               	goto	u1341
  1744  079D  2F9F               	goto	u1340
  1745  079E                     u1341:
  1746  079E  2FAD               	goto	l58
  1747  079F                     u1340:
  1748                           	
  1749  079F                     l30000848:	
  1750                           	line	189
  1751                           ;Arithmetic.c: 188: {
  1752                           ;Arithmetic.c: 189: var=9;
  1753  079F  3009               	movlw	low(09h)
  1754  07A0  00DF               	movwf	(_var)
  1755  07A1  3000               	movlw	high(09h)
  1756  07A2  00E0               	movwf	((_var))+1
  1757                           	line	190
  1758                           ;Arithmetic.c: 190: count++;
  1759  07A3  3001               	movlw	low(01h)
  1760  07A4  07F0               	addwf	(_count),f
  1761  07A5  1803               	skipnc
  1762  07A6  0AF1               	incf	(_count+1),f
  1763  07A7  3000               	movlw	high(01h)
  1764  07A8  07F1               	addwf	(_count+1),f
  1765                           	
  1766  07A9                     l59:	
  1767                           	line	191
  1768  07A9  1906               	btfsc	(50/8),(50)&7
  1769  07AA  2FAC               	goto	u1351
  1770  07AB  2FAD               	goto	u1350
  1771  07AC                     u1351:
  1772  07AC  2FA9               	goto	l59
  1773  07AD                     u1350:
  1774                           	
  1775  07AD                     l58:	
  1776                           	line	196
  1777                           ;Arithmetic.c: 192: }
  1778                           ;Arithmetic.c: 196: RB3=0,RB4=0,RB5=0,RB6=1;
  1779  07AD  1186               	bcf	(51/8),(51)&7
  1780  07AE  1206               	bcf	(52/8),(52)&7
  1781  07AF  1286               	bcf	(53/8),(53)&7
  1782  07B0  1706               	bsf	(54/8),(54)&7
  1783                           	line	198
  1784                           ;Arithmetic.c: 198: if(RB1==1)
  1785  07B1  1C86               	btfss	(49/8),(49)&7
  1786  07B2  2FB4               	goto	u1361
  1787  07B3  2FB5               	goto	u1360
  1788  07B4                     u1361:
  1789  07B4  2FC3               	goto	l62
  1790  07B5                     u1360:
  1791                           	
  1792  07B5                     l30000849:	
  1793                           	line	200
  1794                           ;Arithmetic.c: 199: {
  1795                           ;Arithmetic.c: 200: var=0;
  1796  07B5  3000               	movlw	low(0)
  1797  07B6  00DF               	movwf	(_var)
  1798  07B7  3000               	movlw	high(0)
  1799  07B8  00E0               	movwf	((_var))+1
  1800                           	line	201
  1801                           ;Arithmetic.c: 201: count++;
  1802  07B9  3001               	movlw	low(01h)
  1803  07BA  07F0               	addwf	(_count),f
  1804  07BB  1803               	skipnc
  1805  07BC  0AF1               	incf	(_count+1),f
  1806  07BD  3000               	movlw	high(01h)
  1807  07BE  07F1               	addwf	(_count+1),f
  1808                           	
  1809  07BF                     l63:	
  1810                           	line	202
  1811  07BF  1886               	btfsc	(49/8),(49)&7
  1812  07C0  2FC2               	goto	u1371
  1813  07C1  2FC3               	goto	u1370
  1814  07C2                     u1371:
  1815  07C2  2FBF               	goto	l63
  1816  07C3                     u1370:
  1817                           	
  1818  07C3                     l62:	
  1819                           	line	205
  1820                           ;Arithmetic.c: 203: }
  1821                           ;Arithmetic.c: 205: if(RB0==1)
  1822  07C3  1C06               	btfss	(48/8),(48)&7
  1823  07C4  2FC6               	goto	u1381
  1824  07C5  2FC7               	goto	u1380
  1825  07C6                     u1381:
  1826  07C6  2FD8               	goto	l66
  1827  07C7                     u1380:
  1828                           	
  1829  07C7                     l30000850:	
  1830                           	line	207
  1831                           ;Arithmetic.c: 206: {
  1832                           ;Arithmetic.c: 207: count++;
  1833  07C7  3001               	movlw	low(01h)
  1834  07C8  07F0               	addwf	(_count),f
  1835  07C9  1803               	skipnc
  1836  07CA  0AF1               	incf	(_count+1),f
  1837  07CB  3000               	movlw	high(01h)
  1838  07CC  07F1               	addwf	(_count+1),f
  1839                           	
  1840  07CD                     l30000851:	
  1841                           	line	208
  1842                           ;Arithmetic.c: 208: addition();
  1843  07CD  120A  118A  2582   	fcall	_addition
              120A  118A         
  1844                           	
  1845  07D2                     l67:	
  1846                           	line	209
  1847  07D2  1283               	bcf	status, 5	;RP0=0, select bank0
  1848  07D3  1303               	bcf	status, 6	;RP1=0, select bank0
  1849  07D4  1806               	btfsc	(48/8),(48)&7
  1850  07D5  2FD7               	goto	u1391
  1851  07D6  2FD8               	goto	u1390
  1852  07D7                     u1391:
  1853  07D7  2FD2               	goto	l67
  1854  07D8                     u1390:
  1855                           	
  1856  07D8                     l66:	
  1857                           	line	212
  1858                           ;Arithmetic.c: 210: }
  1859                           ;Arithmetic.c: 212: if(RB2==1)
  1860  07D8  1D06               	btfss	(50/8),(50)&7
  1861  07D9  2FDB               	goto	u1401
  1862  07DA  2FDC               	goto	u1400
  1863  07DB                     u1401:
  1864  07DB  2FED               	goto	l30000854
  1865  07DC                     u1400:
  1866                           	
  1867  07DC                     l30000852:	
  1868                           	line	214
  1869                           ;Arithmetic.c: 213: {
  1870                           ;Arithmetic.c: 214: count++;
  1871  07DC  3001               	movlw	low(01h)
  1872  07DD  07F0               	addwf	(_count),f
  1873  07DE  1803               	skipnc
  1874  07DF  0AF1               	incf	(_count+1),f
  1875  07E0  3000               	movlw	high(01h)
  1876  07E1  07F1               	addwf	(_count+1),f
  1877                           	
  1878  07E2                     l30000853:	
  1879                           	line	215
  1880                           ;Arithmetic.c: 215: multiplication();
  1881  07E2  120A  118A  2611   	fcall	_multiplication
              120A  118A         
  1882                           	
  1883  07E7                     l71:	
  1884                           	line	216
  1885  07E7  1283               	bcf	status, 5	;RP0=0, select bank0
  1886  07E8  1303               	bcf	status, 6	;RP1=0, select bank0
  1887  07E9  1906               	btfsc	(50/8),(50)&7
  1888  07EA  2FEC               	goto	u1411
  1889  07EB  2FED               	goto	u1410
  1890  07EC                     u1411:
  1891  07EC  2FE7               	goto	l71
  1892  07ED                     u1410:
  1893                           	
  1894  07ED                     l30000854:	
  1895                           	line	121
  1896  07ED  0871               	movf	(_count+1),w
  1897  07EE  3A80               	xorlw	80h
  1898  07EF  1283               	bcf	status, 5	;RP0=0, select bank0
  1899  07F0  1303               	bcf	status, 6	;RP1=0, select bank0
  1900  07F1  00DA               	movwf	(??_main+0+0)
  1901  07F2  3080               	movlw	(high(04h))^80h
  1902  07F3  025A               	subwf	(??_main+0+0),w
  1903  07F4  1D03               	skipz
  1904  07F5  2FF8               	goto	u1425
  1905  07F6  3004               	movlw	low(04h)
  1906  07F7  0270               	subwf	(_count),w
  1907  07F8                     u1425:
  1908                           
  1909  07F8  1C03               	skipc
  1910  07F9  2FFB               	goto	u1421
  1911  07FA  2FFC               	goto	u1420
  1912  07FB                     u1421:
  1913  07FB  2EE8               	goto	l30000833
  1914  07FC                     u1420:
  1915  07FC  2FED               	goto	l30000854
  1916                           	global	start
  1917  07FD  120A  118A  2800   	ljmp	start
  1918                           	opt stack 0
  1919                           GLOBAL	__end_of_main
  1920  0800                     	__end_of_main:
  1921                           ; =============== function _main ends ============
  1922                           
  1923                           psect	maintext
  1924                           	line	221
  1925                           	signat	_main,88
  1926                           	global	_multiplication
  1927                           psect	text64,local,class=CODE,delta=2
  1928                           global __ptext64
  1929  0611                     __ptext64:
  1930                           
  1931                           ; *************** function _multiplication *****************
  1932                           ; Defined at:
  1933                           ;		line 78 in file "C:\Users\gowth\Documents\PIC Programs\Keypad\Arithmetic\Arithmetic.c
                                 "
  1934                           ; Parameters:    Size  Location     Type
  1935                           ;		None
  1936                           ; Auto vars:     Size  Location     Type
  1937                           ;  number         10    8[BANK0 ] unsigned char [10]
  1938                           ;  units           2   18[BANK0 ] int 
  1939                           ;  tens            2   20[BANK0 ] int 
  1940                           ; Return value:  Size  Location     Type
  1941                           ;		None               void
  1942                           ; Registers used:
  1943                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1944                           ; Tracked objects:
  1945                           ;		On entry : 0/0
  1946                           ;		On exit  : 0/0
  1947                           ;		Unchanged: 0/0
  1948                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1949                           ;      Locals:         4      14       0       0       0
  1950                           ;      Temp:     4
  1951                           ;      Total:   18
  1952                           ; This function calls:
  1953                           ;		___awmod
  1954                           ;		___wmul
  1955                           ;		___awdiv
  1956                           ;		_time_delay
  1957                           ; This function is called by:
  1958                           ;		_main
  1959                           ; This function uses a non-reentrant model
  1960                           ; 
  1961                           psect	text64
  1962                           	file	"C:\Users\gowth\Documents\PIC Programs\Keypad\Arithmetic\Arithmetic.c"
  1963                           	line	78
  1964                           	global	__size_of_multiplication
  1965  00A1                     	__size_of_multiplication	equ	__end_of_multiplication-_multiplication
  1966                           ;Arithmetic.c: 77: void multiplication()
  1967                           ;Arithmetic.c: 78: {
  1968                           	
  1969  0611                     _multiplication:	
  1970                           	opt stack 7
  1971                           ; Regs used in _multiplication: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1972                           	line	79
  1973                           	
  1974  0611                     l30000887:	
  1975                           ;Arithmetic.c: 79: if(count%3==0)
  1976  0611  0871               	movf	(_count+1),w
  1977  0612  1283               	bcf	status, 5	;RP0=0, select bank0
  1978  0613  1303               	bcf	status, 6	;RP1=0, select bank0
  1979  0614  01C1               	clrf	(?___awmod+1)
  1980  0615  07C1               	addwf	(?___awmod+1)
  1981  0616  0870               	movf	(_count),w
  1982  0617  01C0               	clrf	(?___awmod)
  1983  0618  07C0               	addwf	(?___awmod)
  1984                           
  1985  0619  3003               	movlw	low(03h)
  1986  061A  00C2               	movwf	0+(?___awmod)+02h
  1987  061B  3000               	movlw	high(03h)
  1988  061C  00C3               	movwf	(0+(?___awmod)+02h)+1
  1989  061D  120A  118A  242B   	fcall	___awmod
              120A  118A         
  1990  0622  1383               	bcf	status, 7	;select IRP bank0
  1991  0623  1283               	bcf	status, 5	;RP0=0, select bank0
  1992  0624  1303               	bcf	status, 6	;RP1=0, select bank0
  1993  0625  0841               	movf	((1+(?___awmod))),w
  1994  0626  0440               	iorwf	((0+(?___awmod))),w
  1995  0627  1D03               	skipz
  1996  0628  2E2A               	goto	u1551
  1997  0629  2E2B               	goto	u1550
  1998  062A                     u1551:
  1999  062A  2EB1               	goto	l13
  2000  062B                     u1550:
  2001                           	
  2002  062B                     l30000888:	
  2003                           	line	81
  2004                           ;Arithmetic.c: 80: {
  2005                           ;Arithmetic.c: 81: product=num1*num2;
  2006  062B  0873               	movf	(_num1+1),w
  2007  062C  01C1               	clrf	(?___wmul+1)
  2008  062D  07C1               	addwf	(?___wmul+1)
  2009  062E  0872               	movf	(_num1),w
  2010  062F  01C0               	clrf	(?___wmul)
  2011  0630  07C0               	addwf	(?___wmul)
  2012                           
  2013  0631  0875               	movf	(_num2+1),w
  2014  0632  01C3               	clrf	1+(?___wmul)+02h
  2015  0633  07C3               	addwf	1+(?___wmul)+02h
  2016  0634  0874               	movf	(_num2),w
  2017  0635  01C2               	clrf	0+(?___wmul)+02h
  2018  0636  07C2               	addwf	0+(?___wmul)+02h
  2019                           
  2020  0637  120A  118A  2400   	fcall	___wmul
              120A  118A         
  2021  063C  1383               	bcf	status, 7	;select IRP bank0
  2022  063D  1283               	bcf	status, 5	;RP0=0, select bank0
  2023  063E  1303               	bcf	status, 6	;RP1=0, select bank0
  2024  063F  0841               	movf	(1+(?___wmul)),w
  2025  0640  01DC               	clrf	(_product+1)
  2026  0641  07DC               	addwf	(_product+1)
  2027  0642  0840               	movf	(0+(?___wmul)),w
  2028  0643  01DB               	clrf	(_product)
  2029  0644  07DB               	addwf	(_product)
  2030                           
  2031                           	line	83
  2032                           ;Arithmetic.c: 83: int tens=product/10;
  2033  0645  085C               	movf	(_product+1),w
  2034  0646  01C3               	clrf	(?___awdiv+1)
  2035  0647  07C3               	addwf	(?___awdiv+1)
  2036  0648  085B               	movf	(_product),w
  2037  0649  01C2               	clrf	(?___awdiv)
  2038  064A  07C2               	addwf	(?___awdiv)
  2039                           
  2040  064B  300A               	movlw	low(0Ah)
  2041  064C  00C4               	movwf	0+(?___awdiv)+02h
  2042  064D  3000               	movlw	high(0Ah)
  2043  064E  00C5               	movwf	(0+(?___awdiv)+02h)+1
  2044  064F  120A  118A  248D   	fcall	___awdiv
              120A  118A         
  2045  0654  1383               	bcf	status, 7	;select IRP bank0
  2046  0655  1283               	bcf	status, 5	;RP0=0, select bank0
  2047  0656  1303               	bcf	status, 6	;RP1=0, select bank0
  2048  0657  0843               	movf	(1+(?___awdiv)),w
  2049  0658  01D3               	clrf	(multiplication@tens+1)
  2050  0659  07D3               	addwf	(multiplication@tens+1)
  2051  065A  0842               	movf	(0+(?___awdiv)),w
  2052  065B  01D2               	clrf	(multiplication@tens)
  2053  065C  07D2               	addwf	(multiplication@tens)
  2054                           
  2055                           	line	84
  2056                           ;Arithmetic.c: 84: int units=product%10;
  2057  065D  085C               	movf	(_product+1),w
  2058  065E  01C1               	clrf	(?___awmod+1)
  2059  065F  07C1               	addwf	(?___awmod+1)
  2060  0660  085B               	movf	(_product),w
  2061  0661  01C0               	clrf	(?___awmod)
  2062  0662  07C0               	addwf	(?___awmod)
  2063                           
  2064  0663  300A               	movlw	low(0Ah)
  2065  0664  00C2               	movwf	0+(?___awmod)+02h
  2066  0665  3000               	movlw	high(0Ah)
  2067  0666  00C3               	movwf	(0+(?___awmod)+02h)+1
  2068  0667  120A  118A  242B   	fcall	___awmod
              120A  118A         
  2069  066C  1383               	bcf	status, 7	;select IRP bank0
  2070  066D  1283               	bcf	status, 5	;RP0=0, select bank0
  2071  066E  1303               	bcf	status, 6	;RP1=0, select bank0
  2072  066F  0841               	movf	(1+(?___awmod)),w
  2073  0670  01D1               	clrf	(multiplication@units+1)
  2074  0671  07D1               	addwf	(multiplication@units+1)
  2075  0672  0840               	movf	(0+(?___awmod)),w
  2076  0673  01D0               	clrf	(multiplication@units)
  2077  0674  07D0               	addwf	(multiplication@units)
  2078                           
  2079                           	
  2080  0675                     l30000889:	
  2081                           	line	86
  2082                           ;Arithmetic.c: 86: char number[]={0X3F,0X06,0X5B,0X4F,0X66,0X6D,0X7D,0X07,0X7F,0X67};
  2083  0675  3046               	movlw	(multiplication@number)&0ffh
  2084  0676  0084               	movwf	fsr0
  2085  0677  3034               	movlw	multiplication@F790&0ffh
  2086  0678  00F7               	movwf	(??_multiplication+0+0)
  2087  0679  0804               	movf	fsr0,w
  2088  067A  00F8               	movwf	(??_multiplication+0+0+1)
  2089  067B  300A               	movlw	10
  2090  067C  00F9               	movwf	(??_multiplication+0+0+2)
  2091  067D                     u1560:
  2092  067D  0877               	movf	(??_multiplication+0+0),w
  2093  067E  0084               	movwf	fsr0
  2094  067F  1383               	bcf	status, 7	;select IRP bank0
  2095                           	
  2096  0680  0800               	movf	indf,w
  2097  0681  00FA               	movwf	(??_multiplication+0+0+3)
  2098  0682  0AF7               	incf	(??_multiplication+0+0),f
  2099  0683  0878               	movf	(??_multiplication+0+0+1),w
  2100  0684  0084               	movwf	fsr0
  2101  0685  087A               	movf	(??_multiplication+0+0+3),w
  2102  0686  0080               	movwf	indf
  2103  0687  0AF8               	incf	(??_multiplication+0+0+1),f
  2104  0688  0BF9               	decfsz	(??_multiplication+0+0+2),f
  2105  0689  2E7D               	goto	u1560
  2106                           	
  2107  068A                     l30000890:	
  2108                           	line	90
  2109                           ;Arithmetic.c: 89: {
  2110                           ;Arithmetic.c: 90: RC1=1;
  2111  068A  1283               	bcf	status, 5	;RP0=0, select bank0
  2112  068B  1303               	bcf	status, 6	;RP1=0, select bank0
  2113  068C  1487               	bsf	(57/8),(57)&7
  2114                           	
  2115  068D                     l30000891:	
  2116                           	line	91
  2117                           ;Arithmetic.c: 91: RC0=0;
  2118  068D  1007               	bcf	(56/8),(56)&7
  2119                           	
  2120  068E                     l30000892:	
  2121                           	line	92
  2122                           ;Arithmetic.c: 92: PORTA=number[tens];
  2123  068E  0852               	movf	(multiplication@tens),w
  2124  068F  3E46               	addlw	(multiplication@number)&0ffh
  2125  0690  0084               	movwf	fsr0
  2126  0691  1383               	bcf	status, 7	;select IRP bank0
  2127  0692  0800               	movf	indf,w
  2128  0693  0085               	movwf	(5)	;volatile
  2129                           	
  2130  0694                     l30000893:	
  2131                           	line	93
  2132                           ;Arithmetic.c: 93: time_delay(1000);
  2133  0694  30E8               	movlw	low(03E8h)
  2134  0695  00BE               	movwf	(?_time_delay)
  2135  0696  3003               	movlw	high(03E8h)
  2136  0697  00BF               	movwf	((?_time_delay))+1
  2137  0698  120A  118A  23B1   	fcall	_time_delay
              120A  118A         
  2138                           	
  2139  069D                     l30000894:	
  2140                           	line	94
  2141                           ;Arithmetic.c: 94: RC0=1;
  2142  069D  1283               	bcf	status, 5	;RP0=0, select bank0
  2143  069E  1303               	bcf	status, 6	;RP1=0, select bank0
  2144  069F  1407               	bsf	(56/8),(56)&7
  2145                           	
  2146  06A0                     l30000895:	
  2147                           	line	95
  2148                           ;Arithmetic.c: 95: RC1=0;
  2149  06A0  1087               	bcf	(57/8),(57)&7
  2150                           	
  2151  06A1                     l30000896:	
  2152                           	line	96
  2153                           ;Arithmetic.c: 96: PORTA=number[units];
  2154  06A1  0850               	movf	(multiplication@units),w
  2155  06A2  3E46               	addlw	(multiplication@number)&0ffh
  2156  06A3  0084               	movwf	fsr0
  2157  06A4  1383               	bcf	status, 7	;select IRP bank0
  2158  06A5  0800               	movf	indf,w
  2159  06A6  0085               	movwf	(5)	;volatile
  2160                           	
  2161  06A7                     l30000897:	
  2162                           	line	97
  2163                           ;Arithmetic.c: 97: time_delay(1000);
  2164  06A7  30E8               	movlw	low(03E8h)
  2165  06A8  00BE               	movwf	(?_time_delay)
  2166  06A9  3003               	movlw	high(03E8h)
  2167  06AA  00BF               	movwf	((?_time_delay))+1
  2168  06AB  120A  118A  23B1   	fcall	_time_delay
              120A  118A         
  2169  06B0  2E8A               	goto	l30000890
  2170                           	
  2171  06B1                     l13:	
  2172  06B1  0008               	return
  2173                           	opt stack 0
  2174                           GLOBAL	__end_of_multiplication
  2175  06B2                     	__end_of_multiplication:
  2176                           ; =============== function _multiplication ends ============
  2177                           
  2178                           psect	text65,local,class=CODE,delta=2
  2179                           global __ptext65
  2180  0582                     __ptext65:
  2181                           	line	100
  2182                           	signat	_multiplication,88
  2183                           	global	_addition
  2184                           
  2185                           ; *************** function _addition *****************
  2186                           ; Defined at:
  2187                           ;		line 53 in file "C:\Users\gowth\Documents\PIC Programs\Keypad\Arithmetic\Arithmetic.c
                                 "
  2188                           ; Parameters:    Size  Location     Type
  2189                           ;		None
  2190                           ; Auto vars:     Size  Location     Type
  2191                           ;  number         10   12[BANK0 ] unsigned char [10]
  2192                           ;  units           2   22[BANK0 ] int 
  2193                           ;  tens            2   24[BANK0 ] int 
  2194                           ; Return value:  Size  Location     Type
  2195                           ;		None               void
  2196                           ; Registers used:
  2197                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2198                           ; Tracked objects:
  2199                           ;		On entry : 0/0
  2200                           ;		On exit  : 0/0
  2201                           ;		Unchanged: 0/0
  2202                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2203                           ;      Locals:         0      18       0       0       0
  2204                           ;      Temp:     4
  2205                           ;      Total:   18
  2206                           ; This function calls:
  2207                           ;		___awmod
  2208                           ;		___awdiv
  2209                           ;		_time_delay
  2210                           ; This function is called by:
  2211                           ;		_main
  2212                           ; This function uses a non-reentrant model
  2213                           ; 
  2214                           psect	text65
  2215                           	file	"C:\Users\gowth\Documents\PIC Programs\Keypad\Arithmetic\Arithmetic.c"
  2216                           	line	53
  2217                           	global	__size_of_addition
  2218  008F                     	__size_of_addition	equ	__end_of_addition-_addition
  2219                           ;Arithmetic.c: 52: void addition()
  2220                           ;Arithmetic.c: 53: {
  2221                           	
  2222  0582                     _addition:	
  2223                           	opt stack 7
  2224                           ; Regs used in _addition: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2225                           	line	54
  2226                           	
  2227  0582                     l30000810:	
  2228                           ;Arithmetic.c: 54: if(count%3==0)
  2229  0582  0871               	movf	(_count+1),w
  2230  0583  1283               	bcf	status, 5	;RP0=0, select bank0
  2231  0584  1303               	bcf	status, 6	;RP1=0, select bank0
  2232  0585  01C1               	clrf	(?___awmod+1)
  2233  0586  07C1               	addwf	(?___awmod+1)
  2234  0587  0870               	movf	(_count),w
  2235  0588  01C0               	clrf	(?___awmod)
  2236  0589  07C0               	addwf	(?___awmod)
  2237                           
  2238  058A  3003               	movlw	low(03h)
  2239  058B  00C2               	movwf	0+(?___awmod)+02h
  2240  058C  3000               	movlw	high(03h)
  2241  058D  00C3               	movwf	(0+(?___awmod)+02h)+1
  2242  058E  120A  118A  242B   	fcall	___awmod
              120A  118A         
  2243  0593  1383               	bcf	status, 7	;select IRP bank0
  2244  0594  1283               	bcf	status, 5	;RP0=0, select bank0
  2245  0595  1303               	bcf	status, 6	;RP1=0, select bank0
  2246  0596  0841               	movf	((1+(?___awmod))),w
  2247  0597  0440               	iorwf	((0+(?___awmod))),w
  2248  0598  1D03               	skipz
  2249  0599  2D9B               	goto	u1151
  2250  059A  2D9C               	goto	u1150
  2251  059B                     u1151:
  2252  059B  2E10               	goto	l8
  2253  059C                     u1150:
  2254                           	
  2255  059C                     l30000811:	
  2256                           	line	56
  2257                           ;Arithmetic.c: 55: {
  2258                           ;Arithmetic.c: 56: sum=num1+num2;
  2259  059C  0874               	movf	(_num2),w
  2260  059D  0772               	addwf	(_num1),w
  2261  059E  00DD               	movwf	(_sum)
  2262  059F  0875               	movf	(_num2+1),w
  2263  05A0  1803               	skipnc
  2264  05A1  0A75               	incf	(_num2+1),w
  2265  05A2  0773               	addwf	(_num1+1),w
  2266  05A3  00DE               	movwf	1+(_sum)
  2267                           	
  2268  05A4                     l30000812:	
  2269                           	line	58
  2270                           ;Arithmetic.c: 58: int tens=sum/10;
  2271  05A4  085E               	movf	(_sum+1),w
  2272  05A5  01C3               	clrf	(?___awdiv+1)
  2273  05A6  07C3               	addwf	(?___awdiv+1)
  2274  05A7  085D               	movf	(_sum),w
  2275  05A8  01C2               	clrf	(?___awdiv)
  2276  05A9  07C2               	addwf	(?___awdiv)
  2277                           
  2278  05AA  300A               	movlw	low(0Ah)
  2279  05AB  00C4               	movwf	0+(?___awdiv)+02h
  2280  05AC  3000               	movlw	high(0Ah)
  2281  05AD  00C5               	movwf	(0+(?___awdiv)+02h)+1
  2282  05AE  120A  118A  248D   	fcall	___awdiv
              120A  118A         
  2283  05B3  1383               	bcf	status, 7	;select IRP bank0
  2284  05B4  1283               	bcf	status, 5	;RP0=0, select bank0
  2285  05B5  1303               	bcf	status, 6	;RP1=0, select bank0
  2286  05B6  0843               	movf	(1+(?___awdiv)),w
  2287  05B7  01D7               	clrf	(addition@tens+1)
  2288  05B8  07D7               	addwf	(addition@tens+1)
  2289  05B9  0842               	movf	(0+(?___awdiv)),w
  2290  05BA  01D6               	clrf	(addition@tens)
  2291  05BB  07D6               	addwf	(addition@tens)
  2292                           
  2293                           	
  2294  05BC                     l30000813:	
  2295                           	line	59
  2296                           ;Arithmetic.c: 59: int units=sum%10;
  2297  05BC  085E               	movf	(_sum+1),w
  2298  05BD  01C1               	clrf	(?___awmod+1)
  2299  05BE  07C1               	addwf	(?___awmod+1)
  2300  05BF  085D               	movf	(_sum),w
  2301  05C0  01C0               	clrf	(?___awmod)
  2302  05C1  07C0               	addwf	(?___awmod)
  2303                           
  2304  05C2  300A               	movlw	low(0Ah)
  2305  05C3  00C2               	movwf	0+(?___awmod)+02h
  2306  05C4  3000               	movlw	high(0Ah)
  2307  05C5  00C3               	movwf	(0+(?___awmod)+02h)+1
  2308  05C6  120A  118A  242B   	fcall	___awmod
              120A  118A         
  2309  05CB  1383               	bcf	status, 7	;select IRP bank0
  2310  05CC  1283               	bcf	status, 5	;RP0=0, select bank0
  2311  05CD  1303               	bcf	status, 6	;RP1=0, select bank0
  2312  05CE  0841               	movf	(1+(?___awmod)),w
  2313  05CF  01D5               	clrf	(addition@units+1)
  2314  05D0  07D5               	addwf	(addition@units+1)
  2315  05D1  0840               	movf	(0+(?___awmod)),w
  2316  05D2  01D4               	clrf	(addition@units)
  2317  05D3  07D4               	addwf	(addition@units)
  2318                           
  2319                           	
  2320  05D4                     l30000814:	
  2321                           	line	61
  2322                           ;Arithmetic.c: 61: char number[]={0X3F,0X06,0X5B,0X4F,0X66,0X6D,0X7D,0X07,0X7F,0X67};
  2323  05D4  304A               	movlw	(addition@number)&0ffh
  2324  05D5  0084               	movwf	fsr0
  2325  05D6  3020               	movlw	addition@F785&0ffh
  2326  05D7  00C6               	movwf	(??_addition+0+0)
  2327  05D8  0804               	movf	fsr0,w
  2328  05D9  00C7               	movwf	(??_addition+0+0+1)
  2329  05DA  300A               	movlw	10
  2330  05DB  00C8               	movwf	(??_addition+0+0+2)
  2331  05DC                     u1160:
  2332  05DC  0846               	movf	(??_addition+0+0),w
  2333  05DD  0084               	movwf	fsr0
  2334  05DE  1383               	bcf	status, 7	;select IRP bank0
  2335                           	
  2336  05DF  0800               	movf	indf,w
  2337  05E0  00C9               	movwf	(??_addition+0+0+3)
  2338  05E1  0AC6               	incf	(??_addition+0+0),f
  2339  05E2  0847               	movf	(??_addition+0+0+1),w
  2340  05E3  0084               	movwf	fsr0
  2341  05E4  0849               	movf	(??_addition+0+0+3),w
  2342  05E5  0080               	movwf	indf
  2343  05E6  0AC7               	incf	(??_addition+0+0+1),f
  2344  05E7  0BC8               	decfsz	(??_addition+0+0+2),f
  2345  05E8  2DDC               	goto	u1160
  2346                           	
  2347  05E9                     l30000815:	
  2348                           	line	65
  2349                           ;Arithmetic.c: 64: {
  2350                           ;Arithmetic.c: 65: RC1=1;
  2351  05E9  1283               	bcf	status, 5	;RP0=0, select bank0
  2352  05EA  1303               	bcf	status, 6	;RP1=0, select bank0
  2353  05EB  1487               	bsf	(57/8),(57)&7
  2354                           	
  2355  05EC                     l30000816:	
  2356                           	line	66
  2357                           ;Arithmetic.c: 66: RC0=0;
  2358  05EC  1007               	bcf	(56/8),(56)&7
  2359                           	
  2360  05ED                     l30000817:	
  2361                           	line	67
  2362                           ;Arithmetic.c: 67: PORTA=number[tens];
  2363  05ED  0856               	movf	(addition@tens),w
  2364  05EE  3E4A               	addlw	(addition@number)&0ffh
  2365  05EF  0084               	movwf	fsr0
  2366  05F0  1383               	bcf	status, 7	;select IRP bank0
  2367  05F1  0800               	movf	indf,w
  2368  05F2  0085               	movwf	(5)	;volatile
  2369                           	
  2370  05F3                     l30000818:	
  2371                           	line	68
  2372                           ;Arithmetic.c: 68: time_delay(1000);
  2373  05F3  30E8               	movlw	low(03E8h)
  2374  05F4  00BE               	movwf	(?_time_delay)
  2375  05F5  3003               	movlw	high(03E8h)
  2376  05F6  00BF               	movwf	((?_time_delay))+1
  2377  05F7  120A  118A  23B1   	fcall	_time_delay
              120A  118A         
  2378                           	
  2379  05FC                     l30000819:	
  2380                           	line	69
  2381                           ;Arithmetic.c: 69: RC0=1;
  2382  05FC  1283               	bcf	status, 5	;RP0=0, select bank0
  2383  05FD  1303               	bcf	status, 6	;RP1=0, select bank0
  2384  05FE  1407               	bsf	(56/8),(56)&7
  2385                           	
  2386  05FF                     l30000820:	
  2387                           	line	70
  2388                           ;Arithmetic.c: 70: RC1=0;
  2389  05FF  1087               	bcf	(57/8),(57)&7
  2390                           	
  2391  0600                     l30000821:	
  2392                           	line	71
  2393                           ;Arithmetic.c: 71: PORTA=number[units];
  2394  0600  0854               	movf	(addition@units),w
  2395  0601  3E4A               	addlw	(addition@number)&0ffh
  2396  0602  0084               	movwf	fsr0
  2397  0603  1383               	bcf	status, 7	;select IRP bank0
  2398  0604  0800               	movf	indf,w
  2399  0605  0085               	movwf	(5)	;volatile
  2400                           	
  2401  0606                     l30000822:	
  2402                           	line	72
  2403                           ;Arithmetic.c: 72: time_delay(1000);
  2404  0606  30E8               	movlw	low(03E8h)
  2405  0607  00BE               	movwf	(?_time_delay)
  2406  0608  3003               	movlw	high(03E8h)
  2407  0609  00BF               	movwf	((?_time_delay))+1
  2408  060A  120A  118A  23B1   	fcall	_time_delay
              120A  118A         
  2409  060F  2DE9               	goto	l30000815
  2410                           	
  2411  0610                     l8:	
  2412  0610  0008               	return
  2413                           	opt stack 0
  2414                           GLOBAL	__end_of_addition
  2415  0611                     	__end_of_addition:
  2416                           ; =============== function _addition ends ============
  2417                           
  2418                           psect	text66,local,class=CODE,delta=2
  2419                           global __ptext66
  2420  04FF                     __ptext66:
  2421                           	line	75
  2422                           	signat	_addition,88
  2423                           	global	_display
  2424                           
  2425                           ; *************** function _display *****************
  2426                           ; Defined at:
  2427                           ;		line 24 in file "C:\Users\gowth\Documents\PIC Programs\Keypad\Arithmetic\Arithmetic.c
                                 "
  2428                           ; Parameters:    Size  Location     Type
  2429                           ;  var             2   26[BANK0 ] int 
  2430                           ; Auto vars:     Size  Location     Type
  2431                           ;  number         10   12[BANK0 ] unsigned char [10]
  2432                           ;  units           2   22[BANK0 ] int 
  2433                           ;  tens            2   24[BANK0 ] int 
  2434                           ; Return value:  Size  Location     Type
  2435                           ;		None               void
  2436                           ; Registers used:
  2437                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2438                           ; Tracked objects:
  2439                           ;		On entry : 0/0
  2440                           ;		On exit  : 0/0
  2441                           ;		Unchanged: 0/0
  2442                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2443                           ;      Locals:         0      20       0       0       0
  2444                           ;      Temp:     4
  2445                           ;      Total:   20
  2446                           ; This function calls:
  2447                           ;		___awdiv
  2448                           ;		___awmod
  2449                           ;		_time_delay
  2450                           ; This function is called by:
  2451                           ;		_main
  2452                           ; This function uses a non-reentrant model
  2453                           ; 
  2454                           psect	text66
  2455                           	file	"C:\Users\gowth\Documents\PIC Programs\Keypad\Arithmetic\Arithmetic.c"
  2456                           	line	24
  2457                           	global	__size_of_display
  2458  0083                     	__size_of_display	equ	__end_of_display-_display
  2459                           ;Arithmetic.c: 23: void display(int var)
  2460                           ;Arithmetic.c: 24: {
  2461                           	
  2462  04FF                     _display:	
  2463                           	opt stack 7
  2464                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2465                           	line	25
  2466                           	
  2467  04FF                     l30000855:	
  2468                           ;Arithmetic.c: 25: int tens=var/10;
  2469  04FF  1283               	bcf	status, 5	;RP0=0, select bank0
  2470  0500  1303               	bcf	status, 6	;RP1=0, select bank0
  2471  0501  0859               	movf	(display@var+1),w
  2472  0502  01C3               	clrf	(?___awdiv+1)
  2473  0503  07C3               	addwf	(?___awdiv+1)
  2474  0504  0858               	movf	(display@var),w
  2475  0505  01C2               	clrf	(?___awdiv)
  2476  0506  07C2               	addwf	(?___awdiv)
  2477                           
  2478  0507  300A               	movlw	low(0Ah)
  2479  0508  00C4               	movwf	0+(?___awdiv)+02h
  2480  0509  3000               	movlw	high(0Ah)
  2481  050A  00C5               	movwf	(0+(?___awdiv)+02h)+1
  2482  050B  120A  118A  248D   	fcall	___awdiv
              120A  118A         
  2483  0510  1383               	bcf	status, 7	;select IRP bank0
  2484  0511  1283               	bcf	status, 5	;RP0=0, select bank0
  2485  0512  1303               	bcf	status, 6	;RP1=0, select bank0
  2486  0513  0843               	movf	(1+(?___awdiv)),w
  2487  0514  01D7               	clrf	(display@tens+1)
  2488  0515  07D7               	addwf	(display@tens+1)
  2489  0516  0842               	movf	(0+(?___awdiv)),w
  2490  0517  01D6               	clrf	(display@tens)
  2491  0518  07D6               	addwf	(display@tens)
  2492                           
  2493                           	line	26
  2494                           ;Arithmetic.c: 26: int units=var%10;
  2495  0519  0859               	movf	(display@var+1),w
  2496  051A  01C1               	clrf	(?___awmod+1)
  2497  051B  07C1               	addwf	(?___awmod+1)
  2498  051C  0858               	movf	(display@var),w
  2499  051D  01C0               	clrf	(?___awmod)
  2500  051E  07C0               	addwf	(?___awmod)
  2501                           
  2502  051F  300A               	movlw	low(0Ah)
  2503  0520  00C2               	movwf	0+(?___awmod)+02h
  2504  0521  3000               	movlw	high(0Ah)
  2505  0522  00C3               	movwf	(0+(?___awmod)+02h)+1
  2506  0523  120A  118A  242B   	fcall	___awmod
              120A  118A         
  2507  0528  1383               	bcf	status, 7	;select IRP bank0
  2508  0529  1283               	bcf	status, 5	;RP0=0, select bank0
  2509  052A  1303               	bcf	status, 6	;RP1=0, select bank0
  2510  052B  0841               	movf	(1+(?___awmod)),w
  2511  052C  01D5               	clrf	(display@units+1)
  2512  052D  07D5               	addwf	(display@units+1)
  2513  052E  0840               	movf	(0+(?___awmod)),w
  2514  052F  01D4               	clrf	(display@units)
  2515  0530  07D4               	addwf	(display@units)
  2516                           
  2517                           	
  2518  0531                     l30000856:	
  2519                           	line	28
  2520                           ;Arithmetic.c: 28: char number[]={0X3F,0X06,0X5B,0X4F,0X66,0X6D,0X7D,0X07,0X7F,0X67};
  2521  0531  304A               	movlw	(display@number)&0ffh
  2522  0532  0084               	movwf	fsr0
  2523  0533  302A               	movlw	display@F780&0ffh
  2524  0534  00C6               	movwf	(??_display+0+0)
  2525  0535  0804               	movf	fsr0,w
  2526  0536  00C7               	movwf	(??_display+0+0+1)
  2527  0537  300A               	movlw	10
  2528  0538  00C8               	movwf	(??_display+0+0+2)
  2529  0539                     u1430:
  2530  0539  0846               	movf	(??_display+0+0),w
  2531  053A  0084               	movwf	fsr0
  2532  053B  1383               	bcf	status, 7	;select IRP bank0
  2533                           	
  2534  053C  0800               	movf	indf,w
  2535  053D  00C9               	movwf	(??_display+0+0+3)
  2536  053E  0AC6               	incf	(??_display+0+0),f
  2537  053F  0847               	movf	(??_display+0+0+1),w
  2538  0540  0084               	movwf	fsr0
  2539  0541  0849               	movf	(??_display+0+0+3),w
  2540  0542  0080               	movwf	indf
  2541  0543  0AC7               	incf	(??_display+0+0+1),f
  2542  0544  0BC8               	decfsz	(??_display+0+0+2),f
  2543  0545  2D39               	goto	u1430
  2544                           	
  2545  0546                     l30000857:	
  2546                           	line	31
  2547                           ;Arithmetic.c: 30: {
  2548                           ;Arithmetic.c: 31: RC1=1;
  2549  0546  1487               	bsf	(57/8),(57)&7
  2550                           	
  2551  0547                     l30000858:	
  2552                           	line	32
  2553                           ;Arithmetic.c: 32: RC0=0;
  2554  0547  1007               	bcf	(56/8),(56)&7
  2555                           	
  2556  0548                     l30000859:	
  2557                           	line	33
  2558                           ;Arithmetic.c: 33: PORTA=number[tens];
  2559  0548  0856               	movf	(display@tens),w
  2560  0549  3E4A               	addlw	(display@number)&0ffh
  2561  054A  0084               	movwf	fsr0
  2562  054B  0800               	movf	indf,w
  2563  054C  0085               	movwf	(5)	;volatile
  2564                           	
  2565  054D                     l30000860:	
  2566                           	line	34
  2567                           ;Arithmetic.c: 34: time_delay(1000);
  2568  054D  30E8               	movlw	low(03E8h)
  2569  054E  00BE               	movwf	(?_time_delay)
  2570  054F  3003               	movlw	high(03E8h)
  2571  0550  00BF               	movwf	((?_time_delay))+1
  2572  0551  120A  118A  23B1   	fcall	_time_delay
              120A  118A         
  2573                           	
  2574  0556                     l30000861:	
  2575                           	line	35
  2576                           ;Arithmetic.c: 35: RC0=1;
  2577  0556  1283               	bcf	status, 5	;RP0=0, select bank0
  2578  0557  1303               	bcf	status, 6	;RP1=0, select bank0
  2579  0558  1407               	bsf	(56/8),(56)&7
  2580                           	
  2581  0559                     l30000862:	
  2582                           	line	36
  2583                           ;Arithmetic.c: 36: RC1=0;
  2584  0559  1087               	bcf	(57/8),(57)&7
  2585                           	
  2586  055A                     l30000863:	
  2587                           	line	37
  2588                           ;Arithmetic.c: 37: PORTA=number[units];
  2589  055A  0854               	movf	(display@units),w
  2590  055B  3E4A               	addlw	(display@number)&0ffh
  2591  055C  0084               	movwf	fsr0
  2592  055D  1383               	bcf	status, 7	;select IRP bank0
  2593  055E  0800               	movf	indf,w
  2594  055F  0085               	movwf	(5)	;volatile
  2595                           	
  2596  0560                     l30000864:	
  2597                           	line	38
  2598                           ;Arithmetic.c: 38: time_delay(1000);
  2599  0560  30E8               	movlw	low(03E8h)
  2600  0561  00BE               	movwf	(?_time_delay)
  2601  0562  3003               	movlw	high(03E8h)
  2602  0563  00BF               	movwf	((?_time_delay))+1
  2603  0564  120A  118A  23B1   	fcall	_time_delay
              120A  118A         
  2604                           	
  2605  0569                     l30000865:	
  2606                           	line	42
  2607                           ;Arithmetic.c: 39: }
  2608                           ;Arithmetic.c: 42: if(count%2!=0)
  2609  0569  1C70               	btfss	(_count),(0)&7
  2610  056A  2D6C               	goto	u1441
  2611  056B  2D6D               	goto	u1440
  2612  056C                     u1441:
  2613  056C  2D75               	goto	l30000867
  2614  056D                     u1440:
  2615                           	
  2616  056D                     l30000866:	
  2617                           	line	44
  2618                           ;Arithmetic.c: 43: {
  2619                           ;Arithmetic.c: 44: num1=var;
  2620  056D  1283               	bcf	status, 5	;RP0=0, select bank0
  2621  056E  1303               	bcf	status, 6	;RP1=0, select bank0
  2622  056F  0859               	movf	(display@var+1),w
  2623  0570  01F3               	clrf	(_num1+1)
  2624  0571  07F3               	addwf	(_num1+1)
  2625  0572  0858               	movf	(display@var),w
  2626  0573  01F2               	clrf	(_num1)
  2627  0574  07F2               	addwf	(_num1)
  2628                           
  2629                           	
  2630  0575                     l30000867:	
  2631                           	line	46
  2632                           ;Arithmetic.c: 45: }
  2633                           ;Arithmetic.c: 46: if(count%2==0)
  2634  0575  1870               	btfsc	(_count),(0)&7
  2635  0576  2D78               	goto	u1451
  2636  0577  2D79               	goto	u1450
  2637  0578                     u1451:
  2638  0578  2D81               	goto	l5
  2639  0579                     u1450:
  2640                           	
  2641  0579                     l30000868:	
  2642                           	line	48
  2643                           ;Arithmetic.c: 47: {
  2644                           ;Arithmetic.c: 48: num2=var;
  2645  0579  1283               	bcf	status, 5	;RP0=0, select bank0
  2646  057A  1303               	bcf	status, 6	;RP1=0, select bank0
  2647  057B  0859               	movf	(display@var+1),w
  2648  057C  01F5               	clrf	(_num2+1)
  2649  057D  07F5               	addwf	(_num2+1)
  2650  057E  0858               	movf	(display@var),w
  2651  057F  01F4               	clrf	(_num2)
  2652  0580  07F4               	addwf	(_num2)
  2653                           
  2654                           	
  2655  0581                     l5:	
  2656  0581  0008               	return
  2657                           	opt stack 0
  2658                           GLOBAL	__end_of_display
  2659  0582                     	__end_of_display:
  2660                           ; =============== function _display ends ============
  2661                           
  2662                           psect	text67,local,class=CODE,delta=2
  2663                           global __ptext67
  2664  0400                     __ptext67:
  2665                           	line	50
  2666                           	signat	_display,4216
  2667                           	global	___wmul
  2668                           
  2669                           ; *************** function ___wmul *****************
  2670                           ; Defined at:
  2671                           ;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.70\sources\wmul.c"
  2672                           ; Parameters:    Size  Location     Type
  2673                           ;  multiplier      2    2[BANK0 ] unsigned int 
  2674                           ;  multiplicand    2    4[BANK0 ] unsigned int 
  2675                           ; Auto vars:     Size  Location     Type
  2676                           ;  product         2    0[BANK0 ] unsigned int 
  2677                           ; Return value:  Size  Location     Type
  2678                           ;                  2    2[BANK0 ] unsigned int 
  2679                           ; Registers used:
  2680                           ;		wreg, status,2, status,0
  2681                           ; Tracked objects:
  2682                           ;		On entry : 0/0
  2683                           ;		On exit  : 0/0
  2684                           ;		Unchanged: 0/0
  2685                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2686                           ;      Locals:         0       6       0       0       0
  2687                           ;      Temp:     0
  2688                           ;      Total:    6
  2689                           ; This function calls:
  2690                           ;		Nothing
  2691                           ; This function is called by:
  2692                           ;		_multiplication
  2693                           ; This function uses a non-reentrant model
  2694                           ; 
  2695                           psect	text67
  2696                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.70\sources\wmul.c"
  2697                           	line	3
  2698                           	global	__size_of___wmul
  2699  002B                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  2700                           	
  2701  0400                     ___wmul:	
  2702                           	opt stack 6
  2703                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2704                           	line	4
  2705                           	
  2706  0400                     l30000900:	
  2707  0400  3000               	movlw	low(0)
  2708  0401  1283               	bcf	status, 5	;RP0=0, select bank0
  2709  0402  1303               	bcf	status, 6	;RP1=0, select bank0
  2710  0403  00BE               	movwf	(___wmul@product)
  2711  0404  3000               	movlw	high(0)
  2712  0405  00BF               	movwf	((___wmul@product))+1
  2713                           	
  2714  0406                     l30000901:	
  2715                           	line	7
  2716  0406  1C40               	btfss	(___wmul@multiplier),(0)&7
  2717  0407  2C09               	goto	u1581
  2718  0408  2C0A               	goto	u1580
  2719  0409                     u1581:
  2720  0409  2C10               	goto	l83
  2721  040A                     u1580:
  2722                           	
  2723  040A                     l30000902:	
  2724                           	line	8
  2725  040A  0842               	movf	(___wmul@multiplicand),w
  2726  040B  07BE               	addwf	(___wmul@product),f
  2727  040C  1803               	skipnc
  2728  040D  0ABF               	incf	(___wmul@product+1),f
  2729  040E  0843               	movf	(___wmul@multiplicand+1),w
  2730  040F  07BF               	addwf	(___wmul@product+1),f
  2731                           	
  2732  0410                     l83:	
  2733                           	line	9
  2734  0410  3001               	movlw	01h
  2735  0411                     u1595:
  2736  0411  1003               	clrc
  2737  0412  0DC2               	rlf	(___wmul@multiplicand),f
  2738  0413  0DC3               	rlf	(___wmul@multiplicand+1),f
  2739  0414  3EFF               	addlw	-1
  2740  0415  1D03               	skipz
  2741  0416  2C11               	goto	u1595
  2742                           	
  2743  0417                     l30000903:	
  2744                           	line	10
  2745  0417  3001               	movlw	01h
  2746  0418                     u1605:
  2747  0418  1003               	clrc
  2748  0419  0CC1               	rrf	(___wmul@multiplier+1),f
  2749  041A  0CC0               	rrf	(___wmul@multiplier),f
  2750  041B  3EFF               	addlw	-1
  2751  041C  1D03               	skipz
  2752  041D  2C18               	goto	u1605
  2753                           	line	11
  2754  041E  0841               	movf	((___wmul@multiplier+1)),w
  2755  041F  0440               	iorwf	((___wmul@multiplier)),w
  2756  0420  1D03               	skipz
  2757  0421  2C23               	goto	u1611
  2758  0422  2C24               	goto	u1610
  2759  0423                     u1611:
  2760  0423  2C06               	goto	l30000901
  2761  0424                     u1610:
  2762                           	
  2763  0424                     l30000904:	
  2764                           	line	12
  2765  0424  083F               	movf	(___wmul@product+1),w
  2766  0425  01C1               	clrf	(?___wmul+1)
  2767  0426  07C1               	addwf	(?___wmul+1)
  2768  0427  083E               	movf	(___wmul@product),w
  2769  0428  01C0               	clrf	(?___wmul)
  2770  0429  07C0               	addwf	(?___wmul)
  2771                           
  2772                           	
  2773  042A                     l79:	
  2774  042A  0008               	return
  2775                           	opt stack 0
  2776                           GLOBAL	__end_of___wmul
  2777  042B                     	__end_of___wmul:
  2778                           ; =============== function ___wmul ends ============
  2779                           
  2780                           psect	text68,local,class=CODE,delta=2
  2781                           global __ptext68
  2782  048D                     __ptext68:
  2783                           	line	13
  2784                           	signat	___wmul,8314
  2785                           	global	___awdiv
  2786                           
  2787                           ; *************** function ___awdiv *****************
  2788                           ; Defined at:
  2789                           ;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.70\sources\awdiv.c"
  2790                           ; Parameters:    Size  Location     Type
  2791                           ;  dividend        2    4[BANK0 ] int 
  2792                           ;  divisor         2    6[BANK0 ] int 
  2793                           ; Auto vars:     Size  Location     Type
  2794                           ;  quotient        2    2[BANK0 ] int 
  2795                           ;  sign            1    1[BANK0 ] unsigned char 
  2796                           ;  counter         1    0[BANK0 ] unsigned char 
  2797                           ; Return value:  Size  Location     Type
  2798                           ;                  2    4[BANK0 ] int 
  2799                           ; Registers used:
  2800                           ;		wreg, status,2, status,0
  2801                           ; Tracked objects:
  2802                           ;		On entry : 0/0
  2803                           ;		On exit  : 0/0
  2804                           ;		Unchanged: 0/0
  2805                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2806                           ;      Locals:         1       8       0       0       0
  2807                           ;      Temp:     1
  2808                           ;      Total:    9
  2809                           ; This function calls:
  2810                           ;		Nothing
  2811                           ; This function is called by:
  2812                           ;		_display
  2813                           ;		_addition
  2814                           ;		_multiplication
  2815                           ; This function uses a non-reentrant model
  2816                           ; 
  2817                           psect	text68
  2818                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.70\sources\awdiv.c"
  2819                           	line	5
  2820                           	global	__size_of___awdiv
  2821  0072                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  2822                           	
  2823  048D                     ___awdiv:	
  2824                           	opt stack 6
  2825                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2826                           	line	9
  2827                           	
  2828  048D                     l30000780:	
  2829  048D  1003               	clrc
  2830  048E  3000               	movlw	0
  2831  048F  1803               	btfsc	status,0
  2832  0490  3001               	movlw	1
  2833  0491  1283               	bcf	status, 5	;RP0=0, select bank0
  2834  0492  1303               	bcf	status, 6	;RP1=0, select bank0
  2835  0493  00BF               	movwf	(___awdiv@sign)
  2836                           	
  2837  0494                     l30000781:	
  2838                           	line	10
  2839  0494  1FC5               	btfss	(___awdiv@divisor+1),7
  2840  0495  2C97               	goto	u1041
  2841  0496  2C98               	goto	u1040
  2842  0497                     u1041:
  2843  0497  2CA0               	goto	l30000783
  2844  0498                     u1040:
  2845                           	
  2846  0498                     l30000782:	
  2847                           	line	11
  2848  0498  09C4               	comf	(___awdiv@divisor),f
  2849  0499  09C5               	comf	(___awdiv@divisor+1),f
  2850  049A  0AC4               	incf	(___awdiv@divisor),f
  2851  049B  1903               	skipnz
  2852  049C  0AC5               	incf	(___awdiv@divisor+1),f
  2853                           	line	12
  2854  049D  01BF               	clrf	(___awdiv@sign)
  2855  049E  1403               	bsf	status,0
  2856  049F  0DBF               	rlf	(___awdiv@sign),f
  2857                           	
  2858  04A0                     l30000783:	
  2859                           	line	14
  2860  04A0  1FC3               	btfss	(___awdiv@dividend+1),7
  2861  04A1  2CA3               	goto	u1051
  2862  04A2  2CA4               	goto	u1050
  2863  04A3                     u1051:
  2864  04A3  2CAD               	goto	l225
  2865  04A4                     u1050:
  2866                           	
  2867  04A4                     l30000784:	
  2868                           	line	15
  2869  04A4  09C2               	comf	(___awdiv@dividend),f
  2870  04A5  09C3               	comf	(___awdiv@dividend+1),f
  2871  04A6  0AC2               	incf	(___awdiv@dividend),f
  2872  04A7  1903               	skipnz
  2873  04A8  0AC3               	incf	(___awdiv@dividend+1),f
  2874                           	
  2875  04A9                     l30000785:	
  2876                           	line	16
  2877  04A9  3001               	movlw	(01h)
  2878  04AA  00F6               	movwf	(??___awdiv+0+0)
  2879  04AB  0876               	movf	(??___awdiv+0+0),w
  2880  04AC  06BF               	xorwf	(___awdiv@sign),f
  2881                           	
  2882  04AD                     l225:	
  2883                           	line	18
  2884  04AD  3000               	movlw	low(0)
  2885  04AE  00C0               	movwf	(___awdiv@quotient)
  2886  04AF  3000               	movlw	high(0)
  2887  04B0  00C1               	movwf	((___awdiv@quotient))+1
  2888                           	line	19
  2889  04B1  0845               	movf	(___awdiv@divisor+1),w
  2890  04B2  0444               	iorwf	(___awdiv@divisor),w
  2891  04B3  1903               	skipnz
  2892  04B4  2CB6               	goto	u1061
  2893  04B5  2CB7               	goto	u1060
  2894  04B6                     u1061:
  2895  04B6  2CEF               	goto	l30000795
  2896  04B7                     u1060:
  2897                           	
  2898  04B7                     l30000786:	
  2899                           	line	20
  2900  04B7  01BE               	clrf	(___awdiv@counter)
  2901  04B8  1403               	bsf	status,0
  2902  04B9  0DBE               	rlf	(___awdiv@counter),f
  2903  04BA  2CC6               	goto	l30000789
  2904                           	
  2905  04BB                     l30000787:	
  2906                           	line	22
  2907  04BB  3001               	movlw	01h
  2908  04BC                     u1075:
  2909  04BC  1003               	clrc
  2910  04BD  0DC4               	rlf	(___awdiv@divisor),f
  2911  04BE  0DC5               	rlf	(___awdiv@divisor+1),f
  2912  04BF  3EFF               	addlw	-1
  2913  04C0  1D03               	skipz
  2914  04C1  2CBC               	goto	u1075
  2915                           	
  2916  04C2                     l30000788:	
  2917                           	line	23
  2918  04C2  3001               	movlw	(01h)
  2919  04C3  00F6               	movwf	(??___awdiv+0+0)
  2920  04C4  0876               	movf	(??___awdiv+0+0),w
  2921  04C5  07BE               	addwf	(___awdiv@counter),f
  2922                           	
  2923  04C6                     l30000789:	
  2924                           	line	21
  2925  04C6  1FC5               	btfss	(___awdiv@divisor+1),(15)&7
  2926  04C7  2CC9               	goto	u1081
  2927  04C8  2CCA               	goto	u1080
  2928  04C9                     u1081:
  2929  04C9  2CBB               	goto	l30000787
  2930  04CA                     u1080:
  2931                           	
  2932  04CA                     l30000790:	
  2933                           	line	26
  2934  04CA  3001               	movlw	01h
  2935  04CB                     u1095:
  2936  04CB  1003               	clrc
  2937  04CC  0DC0               	rlf	(___awdiv@quotient),f
  2938  04CD  0DC1               	rlf	(___awdiv@quotient+1),f
  2939  04CE  3EFF               	addlw	-1
  2940  04CF  1D03               	skipz
  2941  04D0  2CCB               	goto	u1095
  2942                           	line	27
  2943  04D1  0845               	movf	(___awdiv@divisor+1),w
  2944  04D2  0243               	subwf	(___awdiv@dividend+1),w
  2945  04D3  1D03               	skipz
  2946  04D4  2CD7               	goto	u1105
  2947  04D5  0844               	movf	(___awdiv@divisor),w
  2948  04D6  0242               	subwf	(___awdiv@dividend),w
  2949  04D7                     u1105:
  2950  04D7  1C03               	skipc
  2951  04D8  2CDA               	goto	u1101
  2952  04D9  2CDB               	goto	u1100
  2953  04DA                     u1101:
  2954  04DA  2CE2               	goto	l30000793
  2955  04DB                     u1100:
  2956                           	
  2957  04DB                     l30000791:	
  2958                           	line	28
  2959  04DB  0844               	movf	(___awdiv@divisor),w
  2960  04DC  02C2               	subwf	(___awdiv@dividend),f
  2961  04DD  0845               	movf	(___awdiv@divisor+1),w
  2962  04DE  1C03               	skipc
  2963  04DF  03C3               	decf	(___awdiv@dividend+1),f
  2964  04E0  02C3               	subwf	(___awdiv@dividend+1),f
  2965                           	
  2966  04E1                     l30000792:	
  2967                           	line	29
  2968  04E1  1440               	bsf	(___awdiv@quotient)+(0/8),(0)&7
  2969                           	
  2970  04E2                     l30000793:	
  2971                           	line	31
  2972  04E2  3001               	movlw	01h
  2973  04E3                     u1115:
  2974  04E3  1003               	clrc
  2975  04E4  0CC5               	rrf	(___awdiv@divisor+1),f
  2976  04E5  0CC4               	rrf	(___awdiv@divisor),f
  2977  04E6  3EFF               	addlw	-1
  2978  04E7  1D03               	skipz
  2979  04E8  2CE3               	goto	u1115
  2980                           	
  2981  04E9                     l30000794:	
  2982                           	line	32
  2983  04E9  3001               	movlw	low(01h)
  2984  04EA  02BE               	subwf	(___awdiv@counter),f
  2985  04EB  1D03               	btfss	status,2
  2986  04EC  2CEE               	goto	u1121
  2987  04ED  2CEF               	goto	u1120
  2988  04EE                     u1121:
  2989  04EE  2CCA               	goto	l30000790
  2990  04EF                     u1120:
  2991                           	
  2992  04EF                     l30000795:	
  2993                           	line	34
  2994  04EF  083F               	movf	(___awdiv@sign),w
  2995  04F0  1D03               	skipz
  2996  04F1  2CF3               	goto	u1130
  2997  04F2  2CF8               	goto	l30000797
  2998  04F3                     u1130:
  2999                           	
  3000  04F3                     l30000796:	
  3001                           	line	35
  3002  04F3  09C0               	comf	(___awdiv@quotient),f
  3003  04F4  09C1               	comf	(___awdiv@quotient+1),f
  3004  04F5  0AC0               	incf	(___awdiv@quotient),f
  3005  04F6  1903               	skipnz
  3006  04F7  0AC1               	incf	(___awdiv@quotient+1),f
  3007                           	
  3008  04F8                     l30000797:	
  3009                           	line	36
  3010  04F8  0841               	movf	(___awdiv@quotient+1),w
  3011  04F9  01C3               	clrf	(?___awdiv+1)
  3012  04FA  07C3               	addwf	(?___awdiv+1)
  3013  04FB  0840               	movf	(___awdiv@quotient),w
  3014  04FC  01C2               	clrf	(?___awdiv)
  3015  04FD  07C2               	addwf	(?___awdiv)
  3016                           
  3017                           	
  3018  04FE                     l223:	
  3019  04FE  0008               	return
  3020                           	opt stack 0
  3021                           GLOBAL	__end_of___awdiv
  3022  04FF                     	__end_of___awdiv:
  3023                           ; =============== function ___awdiv ends ============
  3024                           
  3025                           psect	text69,local,class=CODE,delta=2
  3026                           global __ptext69
  3027  042B                     __ptext69:
  3028                           	line	37
  3029                           	signat	___awdiv,8314
  3030                           	global	___awmod
  3031                           
  3032                           ; *************** function ___awmod *****************
  3033                           ; Defined at:
  3034                           ;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.70\sources\awmod.c"
  3035                           ; Parameters:    Size  Location     Type
  3036                           ;  dividend        2    2[BANK0 ] int 
  3037                           ;  divisor         2    4[BANK0 ] int 
  3038                           ; Auto vars:     Size  Location     Type
  3039                           ;  sign            1    0[BANK0 ] unsigned char 
  3040                           ;  counter         1    1[BANK0 ] unsigned char 
  3041                           ; Return value:  Size  Location     Type
  3042                           ;                  2    2[BANK0 ] int 
  3043                           ; Registers used:
  3044                           ;		wreg, status,2, status,0
  3045                           ; Tracked objects:
  3046                           ;		On entry : 0/0
  3047                           ;		On exit  : 0/0
  3048                           ;		Unchanged: 0/0
  3049                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3050                           ;      Locals:         1       6       0       0       0
  3051                           ;      Temp:     1
  3052                           ;      Total:    7
  3053                           ; This function calls:
  3054                           ;		Nothing
  3055                           ; This function is called by:
  3056                           ;		_display
  3057                           ;		_addition
  3058                           ;		_multiplication
  3059                           ; This function uses a non-reentrant model
  3060                           ; 
  3061                           psect	text69
  3062                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.70\sources\awmod.c"
  3063                           	line	5
  3064                           	global	__size_of___awmod
  3065  0062                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  3066                           	
  3067  042B                     ___awmod:	
  3068                           	opt stack 6
  3069                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3070                           	line	8
  3071                           	
  3072  042B                     l30000869:	
  3073  042B  1003               	clrc
  3074  042C  3000               	movlw	0
  3075  042D  1803               	btfsc	status,0
  3076  042E  3001               	movlw	1
  3077  042F  1283               	bcf	status, 5	;RP0=0, select bank0
  3078  0430  1303               	bcf	status, 6	;RP1=0, select bank0
  3079  0431  00BE               	movwf	(___awmod@sign)
  3080                           	
  3081  0432                     l30000870:	
  3082                           	line	9
  3083  0432  1FC1               	btfss	(___awmod@dividend+1),7
  3084  0433  2C35               	goto	u1461
  3085  0434  2C36               	goto	u1460
  3086  0435                     u1461:
  3087  0435  2C3E               	goto	l30000872
  3088  0436                     u1460:
  3089                           	
  3090  0436                     l30000871:	
  3091                           	line	10
  3092  0436  09C0               	comf	(___awmod@dividend),f
  3093  0437  09C1               	comf	(___awmod@dividend+1),f
  3094  0438  0AC0               	incf	(___awmod@dividend),f
  3095  0439  1903               	skipnz
  3096  043A  0AC1               	incf	(___awmod@dividend+1),f
  3097                           	line	11
  3098  043B  01BE               	clrf	(___awmod@sign)
  3099  043C  1403               	bsf	status,0
  3100  043D  0DBE               	rlf	(___awmod@sign),f
  3101                           	
  3102  043E                     l30000872:	
  3103                           	line	13
  3104  043E  1FC3               	btfss	(___awmod@divisor+1),7
  3105  043F  2C41               	goto	u1471
  3106  0440  2C42               	goto	u1470
  3107  0441                     u1471:
  3108  0441  2C47               	goto	l30000874
  3109  0442                     u1470:
  3110                           	
  3111  0442                     l30000873:	
  3112                           	line	14
  3113  0442  09C2               	comf	(___awmod@divisor),f
  3114  0443  09C3               	comf	(___awmod@divisor+1),f
  3115  0444  0AC2               	incf	(___awmod@divisor),f
  3116  0445  1903               	skipnz
  3117  0446  0AC3               	incf	(___awmod@divisor+1),f
  3118                           	
  3119  0447                     l30000874:	
  3120                           	line	15
  3121  0447  0843               	movf	(___awmod@divisor+1),w
  3122  0448  0442               	iorwf	(___awmod@divisor),w
  3123  0449  1903               	skipnz
  3124  044A  2C4C               	goto	u1481
  3125  044B  2C4D               	goto	u1480
  3126  044C                     u1481:
  3127  044C  2C7D               	goto	l30000883
  3128  044D                     u1480:
  3129                           	
  3130  044D                     l30000875:	
  3131                           	line	16
  3132  044D  01BF               	clrf	(___awmod@counter)
  3133  044E  1403               	bsf	status,0
  3134  044F  0DBF               	rlf	(___awmod@counter),f
  3135  0450  2C5C               	goto	l30000878
  3136                           	
  3137  0451                     l30000876:	
  3138                           	line	18
  3139  0451  3001               	movlw	01h
  3140  0452                     u1495:
  3141  0452  1003               	clrc
  3142  0453  0DC2               	rlf	(___awmod@divisor),f
  3143  0454  0DC3               	rlf	(___awmod@divisor+1),f
  3144  0455  3EFF               	addlw	-1
  3145  0456  1D03               	skipz
  3146  0457  2C52               	goto	u1495
  3147                           	
  3148  0458                     l30000877:	
  3149                           	line	19
  3150  0458  3001               	movlw	(01h)
  3151  0459  00F6               	movwf	(??___awmod+0+0)
  3152  045A  0876               	movf	(??___awmod+0+0),w
  3153  045B  07BF               	addwf	(___awmod@counter),f
  3154                           	
  3155  045C                     l30000878:	
  3156                           	line	17
  3157  045C  1FC3               	btfss	(___awmod@divisor+1),(15)&7
  3158  045D  2C5F               	goto	u1501
  3159  045E  2C60               	goto	u1500
  3160  045F                     u1501:
  3161  045F  2C51               	goto	l30000876
  3162  0460                     u1500:
  3163                           	
  3164  0460                     l30000879:	
  3165                           	line	22
  3166  0460  0843               	movf	(___awmod@divisor+1),w
  3167  0461  0241               	subwf	(___awmod@dividend+1),w
  3168  0462  1D03               	skipz
  3169  0463  2C66               	goto	u1515
  3170  0464  0842               	movf	(___awmod@divisor),w
  3171  0465  0240               	subwf	(___awmod@dividend),w
  3172  0466                     u1515:
  3173  0466  1C03               	skipc
  3174  0467  2C69               	goto	u1511
  3175  0468  2C6A               	goto	u1510
  3176  0469                     u1511:
  3177  0469  2C70               	goto	l30000881
  3178  046A                     u1510:
  3179                           	
  3180  046A                     l30000880:	
  3181                           	line	23
  3182  046A  0842               	movf	(___awmod@divisor),w
  3183  046B  02C0               	subwf	(___awmod@dividend),f
  3184  046C  0843               	movf	(___awmod@divisor+1),w
  3185  046D  1C03               	skipc
  3186  046E  03C1               	decf	(___awmod@dividend+1),f
  3187  046F  02C1               	subwf	(___awmod@dividend+1),f
  3188                           	
  3189  0470                     l30000881:	
  3190                           	line	24
  3191  0470  3001               	movlw	01h
  3192  0471                     u1525:
  3193  0471  1003               	clrc
  3194  0472  0CC3               	rrf	(___awmod@divisor+1),f
  3195  0473  0CC2               	rrf	(___awmod@divisor),f
  3196  0474  3EFF               	addlw	-1
  3197  0475  1D03               	skipz
  3198  0476  2C71               	goto	u1525
  3199                           	
  3200  0477                     l30000882:	
  3201                           	line	25
  3202  0477  3001               	movlw	low(01h)
  3203  0478  02BF               	subwf	(___awmod@counter),f
  3204  0479  1D03               	btfss	status,2
  3205  047A  2C7C               	goto	u1531
  3206  047B  2C7D               	goto	u1530
  3207  047C                     u1531:
  3208  047C  2C60               	goto	l30000879
  3209  047D                     u1530:
  3210                           	
  3211  047D                     l30000883:	
  3212                           	line	27
  3213  047D  083E               	movf	(___awmod@sign),w
  3214  047E  1D03               	skipz
  3215  047F  2C81               	goto	u1540
  3216  0480  2C86               	goto	l30000885
  3217  0481                     u1540:
  3218                           	
  3219  0481                     l30000884:	
  3220                           	line	28
  3221  0481  09C0               	comf	(___awmod@dividend),f
  3222  0482  09C1               	comf	(___awmod@dividend+1),f
  3223  0483  0AC0               	incf	(___awmod@dividend),f
  3224  0484  1903               	skipnz
  3225  0485  0AC1               	incf	(___awmod@dividend+1),f
  3226                           	
  3227  0486                     l30000885:	
  3228                           	line	29
  3229  0486  0841               	movf	(___awmod@dividend+1),w
  3230  0487  01C1               	clrf	(?___awmod+1)
  3231  0488  07C1               	addwf	(?___awmod+1)
  3232  0489  0840               	movf	(___awmod@dividend),w
  3233  048A  01C0               	clrf	(?___awmod)
  3234  048B  07C0               	addwf	(?___awmod)
  3235                           
  3236                           	
  3237  048C                     l303:	
  3238  048C  0008               	return
  3239                           	opt stack 0
  3240                           GLOBAL	__end_of___awmod
  3241  048D                     	__end_of___awmod:
  3242                           ; =============== function ___awmod ends ============
  3243                           
  3244                           psect	text70,local,class=CODE,delta=2
  3245                           global __ptext70
  3246  03B1                     __ptext70:
  3247                           	line	30
  3248                           	signat	___awmod,8314
  3249                           	global	_time_delay
  3250                           
  3251                           ; *************** function _time_delay *****************
  3252                           ; Defined at:
  3253                           ;		line 19 in file "C:\Users\gowth\Documents\PIC Programs\Keypad\Arithmetic\Arithmetic.c
                                 "
  3254                           ; Parameters:    Size  Location     Type
  3255                           ;  x               2    0[BANK0 ] int 
  3256                           ; Auto vars:     Size  Location     Type
  3257                           ;		None
  3258                           ; Return value:  Size  Location     Type
  3259                           ;		None               void
  3260                           ; Registers used:
  3261                           ;		wreg
  3262                           ; Tracked objects:
  3263                           ;		On entry : 0/0
  3264                           ;		On exit  : 0/0
  3265                           ;		Unchanged: 0/0
  3266                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3267                           ;      Locals:         0       2       0       0       0
  3268                           ;      Temp:     0
  3269                           ;      Total:    2
  3270                           ; This function calls:
  3271                           ;		Nothing
  3272                           ; This function is called by:
  3273                           ;		_display
  3274                           ;		_addition
  3275                           ;		_multiplication
  3276                           ; This function uses a non-reentrant model
  3277                           ; 
  3278                           psect	text70
  3279                           	file	"C:\Users\gowth\Documents\PIC Programs\Keypad\Arithmetic\Arithmetic.c"
  3280                           	line	19
  3281                           	global	__size_of_time_delay
  3282  0013                     	__size_of_time_delay	equ	__end_of_time_delay-_time_delay
  3283                           ;pic16f887.h: 19: volatile unsigned char INDF @ 0x000;
  3284                           ;pic16f887.h: 20: volatile unsigned char TMR0 @ 0x001;
  3285                           ;pic16f887.h: 21: volatile unsigned char PCL @ 0x002;
  3286                           ;pic16f887.h: 22: volatile unsigned char STATUS @ 0x003;
  3287                           ;pic16f887.h: 23: unsigned char FSR @ 0x004;
  3288                           ;pic16f887.h: 24: volatile unsigned char PORTA @ 0x005;
  3289                           ;pic16f887.h: 25: volatile unsigned char PORTB @ 0x006;
  3290                           ;pic16f887.h: 26: volatile unsigned char PORTC @ 0x007;
  3291                           ;pic16f887.h: 28: volatile unsigned char PORTD @ 0x008;
  3292                           ;pic16f887.h: 30: volatile unsigned char PORTE @ 0x009;
  3293                           	
  3294  03B1                     _time_delay:	
  3295                           	opt stack 6
  3296                           ; Regs used in _time_delay: [wreg]
  3297                           	
  3298  03B1                     l30000898:	
  3299                           	
  3300  03B1                     l30000899:	
  3301                           	line	20
  3302  03B1  30FF               	movlw	low(-1)
  3303  03B2  1283               	bcf	status, 5	;RP0=0, select bank0
  3304  03B3  1303               	bcf	status, 6	;RP1=0, select bank0
  3305  03B4  07BE               	addwf	(time_delay@x),f
  3306  03B5  1803               	skipnc
  3307  03B6  0ABF               	incf	(time_delay@x+1),f
  3308  03B7  30FF               	movlw	high(-1)
  3309  03B8  07BF               	addwf	(time_delay@x+1),f
  3310  03B9  30FF               	movlw	high(-1)
  3311  03BA  063F               	xorwf	((time_delay@x+1))&07fh,w
  3312  03BB  1D03               	skipz
  3313  03BC  2BBF               	goto	u1575
  3314  03BD  30FF               	movlw	low(-1)
  3315  03BE  063E               	xorwf	((time_delay@x))&07fh,w
  3316  03BF                     u1575:
  3317                           
  3318  03BF  1D03               	skipz
  3319  03C0  2BC2               	goto	u1571
  3320  03C1  2BC3               	goto	u1570
  3321  03C2                     u1571:
  3322  03C2  2BB1               	goto	l30000899
  3323  03C3                     u1570:
  3324                           	
  3325  03C3                     l1:	
  3326  03C3  0008               	return
  3327                           	opt stack 0
  3328                           GLOBAL	__end_of_time_delay
  3329  03C4                     	__end_of_time_delay:
  3330                           ; =============== function _time_delay ends ============
  3331                           
  3332                           psect	text71,local,class=CODE,delta=2
  3333                           global __ptext71
  3334  0003                     __ptext71:
  3335                           	line	21
  3336                           	signat	_time_delay,4216
  3337                           	global	btemp
  3338  007E                     	btemp set 07Eh


HI-TECH Software PICC Macro Assembler V9.70 build 5239 
Symbol Table                                                                                   Mon Mar 20 20:17:37 2023

       ___awdiv@dividend 0042                        l1 03C3                        l5 0581  
                      l8 0610                        pc 0002                       l13 06B1  
                     _DA 04A5                       l30 0727                       _BF 04A0  
                     l31 0723                       _DC 0019                       l25 0703  
                     l50 0789                       l42 0761                       l34 0739  
                     l26 0715                       l51 0785                       l43 075D  
                     l35 0735                       l27 0711                       l62 07C3  
                     l54 079B                       l46 0773                       l38 074F  
                     l71 07E7                       l63 07BF                       l55 0797  
                     l47 076F                       l39 074B                       l66 07D8  
                     l58 07AD                       l83 0410                       l67 07D2  
                     l59 07A9                       l79 042A                       _PD 001B  
                     _RD 0C60                       _UA 04A1                       _TO 001C  
                     _RW 04A2                       _WR 0C61                       fsr 0004  
            __pbssCOMMON 0070          __size_of___wmul 002B                      _C1R 083A  
                    _C2R 0842                      l303 048C                      l223 04FE  
                    l225 04AD                      _CKE 04A6                      _CKP 00A4  
                    _GIE 005F                      _BOR 0470                      _RA0 0028  
                    _RA1 0029                      _RB0 0030                      _RA2 002A  
                    _RB1 0031                      _RA3 002B                      _RC0 0038  
                    _RB2 0032                      _RA4 002C                      _RC1 0039  
                    _RB3 0033                      _RA5 002D                      _RD0 0040  
                    _RC2 003A                      _RB4 0034                      _RA6 002E  
                    _RD1 0041                      _RC3 003B                      _RB5 0035  
                    _RA7 002F                      _RE0 0048                      _RD2 0042  
                    _RC4 003C                      _RB6 0036                      _RE1 0049  
                    _RD3 0043                      _RC5 003D                      _RB7 0037  
                    _RE2 004A                      _RD4 0044                      _RC6 003E  
                    _RE3 004B                      _RD5 0045                      _RC7 003F  
                    _RD6 0046                      _RD7 0047                      _FSR 0004  
                    _PCL 0002                      _PS0 0408                      _PR2 0092  
                    _PS1 0409                      _PS2 040A                      _PEN 048A  
                    _RP0 001D                      _IRP 001F                      _RP1 001E  
                    _HTS 047A                      _SR0 0C2E                      _SR1 0C2F  
                    _SEN 0488                      _SCS 0478                      _PSA 040B  
                    _LTS 0479                      _VR0 04B8                      _VR1 04B9  
                    _VR2 04BA                      _VR3 04BB                      _POR 0471  
                    _RX9 00C6                      _SMP 04A7                      _TX9 04C6  
                    _WUE 0C39                      _VRR 04BD                      _var 005F  
                    fsr0 0004                      _sum 005D                      indf 0000  
       __size_of___awdiv 0072                 _addition 0582         __size_of___awmod 0062  
         _multiplication 0611                ?_addition 0077          ?_multiplication 0054  
             _time_delay 03B1       __end_of_time_delay 03C4               ??_addition 0046  
                   _C1IE 046D                     _C1IF 006D                     _C2IE 046E  
                   _C2IF 006E                     _C1OE 083D                     _C2OE 0845  
                   _C1ON 083F                     _C2ON 0847                     _ADIE 0466  
                   _ADIF 0066                     _ADFM 04FF         ??_multiplication 0077  
                   _ADON 00F8                 __ptext70 03B1                 __ptext71 0003  
               __ptext64 0611                 __ptext65 0582                     _P1M0 00BE  
                   _CHS0 00FA                 __ptext66 04FF                     _P1M1 00BF  
                   _CHS1 00FB                 __ptext67 0400                     _CHS2 00FC  
               __ptext68 048D                     _CHS3 00FD                 __ptext69 042B  
                   _EEIE 046C                     _EEIF 006C                     _ANS0 0C40  
                   _BRG0 04C8                     _ANS1 0C41                     _BRG1 04C9  
                   _ANS2 0C42                     _BRG2 04CA                     _ANS3 0C43  
                   _BRG3 04CB                     _ANS4 0C44                     _BRG4 04CC  
                   _ANS5 0C45                     _BRG5 04CD                     _ANS6 0C46  
                   _GCEN 048F                     _BRG6 04CE                     _ANS7 0C47  
                   _BRG7 04CF                     _ANS8 0C48                     _BRG8 04D0  
       __size_of_display 0083                     _ANS9 0C49                     _BRG9 04D1  
                   _BRGH 04C2                     _T0IE 005D                     _T0IF 005A  
                   _CREN 00C4                     _T0CS 040D                     _FERR 00C2  
                   u1100 04DB                     u1101 04DA                     u1120 04EF  
                   u1040 0498                     u1200 0719                     u1121 04EE  
                   u1105 04D7                     u1041 0497                     u1201 0718  
                   u1130 04F3                     u1050 04A4                     u1210 0727  
                   u1115 04E3                     u1051 04A3                     u1211 0726  
                   u1060 04B7                     u1300 077B                     u1220 072B  
                   u1061 04B6                     u1301 077A                     u1221 072A  
                   u1150 059C                     u1310 0789                     u1230 0739  
                   _PDC0 04D8                     u1151 059B                     u1311 0788  
                   u1231 0738                     _PDC1 04D9                     u1080 04CA  
                   u1160 05DC                     u1400 07DC                     u1320 078D  
                   u1240 0741                     _PDC2 04DA                     u1081 04C9  
                   u1401 07DB                     u1321 078C                     u1241 0740  
                   _PDC3 04DB                     u1410 07ED                     u1330 079B  
                   u1250 074F                     u1170 0702                     _PDC4 04DC  
                   u1075 04BC                     u1411 07EC                     u1331 079A  
                   u1251 074E                     u1171 0701                     _T0SE 040C  
                   _PDC5 04DD                     _CSRC 04C7                     u1500 0460  
                   u1420 07FC                     u1340 079F                     u1260 0753  
                   u1180 0707                     _PDC6 04DE                     _IOCB 0096  
                   u1501 045F                     u1421 07FB                     u1341 079E  
                   u1261 0752                     u1181 0706                     u1510 046A  
                   u1430 0539                     u1350 07AD                     u1270 0761  
                   u1190 0715                     _INDF 0000                     u1511 0469  
                   u1095 04CB                     u1351 07AC                     u1271 0760  
                   u1191 0714                     u1440 056D                     u1360 07B5  
                   u1280 0765                     u1441 056C                     u1425 07F8  
                   u1361 07B4                     u1281 0764                     u1530 047D  
                   u1610 0424                     u1450 0579                     u1370 07C3  
                   u1290 0773                     u1531 047C                     u1515 0466  
                   u1611 0423                     u1451 0578                     u1371 07C2  
                   u1291 0772                     u1540 0481                     u1460 0436  
                   u1380 07C7                     u1525 0471                     u1461 0435  
                   u1605 0418                     u1381 07C6                     u1470 0442  
                   u1550 062B                     u1390 07D8                     u1471 0441  
                   u1551 062A                     u1391 07D7                     u1480 044D  
                   u1560 067D                     u1481 044C                     u1570 03C3  
                   u1571 03C2                     u1580 040A                     u1581 0409  
                   u1575 03BF                     u1495 0452                     _PIE1 008C  
                   _PIE2 008D                     u1595 0411                     _PEIE 005E  
                   _INTE 005C                     _INTF 0059                     _RBIE 005B  
                   _RBIF 0058                     _RCIE 0465                     _RCEN 048B  
                   _RCIF 0065                     _PCON 008E                     _PIR1 000C  
                   _PIR2 000D                     _OERR 00C1         ___awdiv@quotient 0040  
                   _SCKP 0C3C                     _RBPU 040F             __pidataBANK0 03E2  
                   _RX9D 00C0                     _TMR0 0001                     _TMR2 0011  
                   _WCOL 00A7                     _SPEN 00C7                     _RSEN 0489  
                   _TX9D 04C0                     _SREN 00C5                     _OSTS 047B  
                   _TUN0 0480                     _TUN1 0481                     _TUN2 0482  
                   _TUN3 0483                     _TUN4 0484                     _STRA 04E8  
                   _STRB 04E9                     _STRC 04EA                     _VREN 04BF  
                   _STRD 04EB                     _TRMT 04C1                     _STOP 04A4  
                   _TXIE 0464                     _ZERO 001A                     _WREN 0C62  
                   _TXEN 04C5                     _TXIF 0064                     _VROE 04BE  
                   _SYNC 04C4                     _WPUB 0095                     _VRSS 04BC  
           ___awdiv@sign 003F                     _main 06B2                     _num1 0072  
                   _num2 0074              ?_time_delay 003E                     btemp 007E  
                   start 0000              time_delay@x 003E      start_initialization 03C4  
           ___awmod@sign 003E        __size_of_addition 008F   __end_of_multiplication 06B2  
                ?___wmul 0040          __end_of___awdiv 04FF                 ??___wmul 0076  
        __end_of___awmod 048D                  _CM1CON0 0107                  _CM2CON0 0108  
                _CCP1CON 0017                  _CM2CON1 0109                  _CCP2CON 001D  
                _ACKSTAT 048E                  _BAUDCTL 0187           ___wmul@product 003E  
                _ECCPAS0 04E4                  _ECCPAS1 04E5                  _ECCPAS2 04E6  
                _ECCPASE 04E7                    _C1CH0 0838                    _C1CH1 0839  
                  _C2CH0 0840                    _C2CH1 0841                    _DC1B0 00BC  
                  _DC1B1 00BD                    _C1SEN 0C2D                    _C2REN 0C2C  
                  _C1POL 083C             display@units 0054                    _C2POL 0844  
                  _C1OUT 083E                    _C2OUT 0846                    _ABDEN 0C38  
                  _ADCS0 00FE                    _ADCS1 00FF                    _ADDEN 00C3  
                  ?_main 005B                    _ACKEN 048C                    _ACKDT 048D  
                  _BCLIE 046B                    _BCLIF 006B                    _CCP2X 00ED  
                  _CCP2Y 00EC               display@var 0058                    _EEADR 010D  
                  _ANS10 0C4A                    _EEDAT 010C                    _BRG10 04D2  
                  _ANS11 0C4B                    _BRG11 04D3                    _ANS12 0C4C  
                  _BRG12 04D4                    _ANS13 0C4D                    _BRG13 04D5  
                  _BRG14 04D6                    _BRG15 04D7                    _BRG16 0C3B  
           ??_time_delay 0076                    _CARRY 0018                    _EEPGD 0C67  
                  _ANSEL 0188                    _T1CON 0010                    _IOCB0 04B0  
                  _T2CON 0012                    _IOCB1 04B1                    _IOCB2 04B2  
                  _IOCB3 04B3                    _IOCB4 04B4                    _IOCB5 04B5  
                  _IOCB6 04B6                    _IOCB7 04B7                    _T1GSS 0849  
                _T1CKPS0 0084                  _T1CKPS1 0085                    _IRCF0 047C  
                  _IRCF1 047D                    _IRCF2 047E                  _T2CKPS0 0090  
                _T2CKPS1 0091                    _RABIE 005B                    _RABIF 0058  
                  _RABPU 040F                    _RCIDL 0C3E                    _FVREN 0C28  
        __end_of_display 0582                    _VCFG0 04FC                    _VCFG1 04FD  
                  _RCREG 001A                    _SENDB 04C3                    _RCSTA 0018  
                  _OSFIE 046F                    _OSFIF 006F                    _TMR1H 000F  
                  _TMR1L 000E                    _SPBRG 0099                    _PORTA 0005  
                  _PORTB 0006                  _T1OSCEN 0083                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _PRSEN 04DF  
                  _SRCON 0185                    _START 04A3                    _PULSR 0C2A  
                  _PULSS 0C2B                    _SSPM0 00A0                    _SSPM1 00A1  
                  _SSPM2 00A2                    _SSPM3 00A3                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _SSPIE 0463                    _TRISE 0089                    _SSPIF 0063  
                  _SSPEN 00A5                    _VRCON 0097                    _WPUB0 04A8  
                  _WPUB1 04A9                    _WPUB2 04AA                    _WPUB3 04AB  
                  _WPUB4 04AC                    _SSPOV 00A6                    _WPUB5 04AD  
                  _WPUB6 04AE                    _WPUB7 04AF                    _WRERR 0C63  
                  _TXREG 0019                    _TXSTA 0098           __pcstackCOMMON 0076  
                _OSCTUNE 0090                  _PWM1CON 009B                    _count 0070  
                _PSTRCON 009D                  _SSPCON2 0091                  _ULPWUIE 046A  
                _ULPWUIF 006A                  _SSPSTAT 0094                  _TOUTPS0 0093  
                _TOUTPS1 0094                  _TOUTPS2 0095                  _TOUTPS3 0096  
                _STRSYNC 04EC                    pclath 000A                    status 0003  
      ___wmul@multiplier 0040  __size_of_multiplication 00A1          ___awdiv@divisor 0044  
          __size_of_main 014E               __pbssBANK0 005B          ___awdiv@counter 003E  
               l30000810 0582                 l30000811 059C                 l30000900 0400  
               l30000820 05FF                 l30000812 05A4                 l30000901 0406  
               l30000821 0600                 l30000813 05BC                 l30000902 040A  
               l30000822 0606                 l30000814 05D4                 l30000830 06D6  
               l30000903 0417                 l30000815 05E9                 l30000831 06DB  
               l30000823 06B2                 l30000904 0424                 l30000816 05EC  
               l30000840 0707                 l30000832 06E2                 l30000824 06B9  
               l30000817 05ED                 l30000841 0719                 l30000833 06E8  
               l30000825 06BB                 l30000818 05F3                 l30000850 07C7  
               l30000842 072B                 l30000834 06F5                 l30000826 06C0  
               l30000819 05FC                 l30000851 07CD                 l30000843 0741  
               l30000835 06F8                 l30000827 06C5                 l30000780 048D  
               l30000860 054D                 l30000852 07DC                 l30000844 0753  
               l30000836 06F9                 l30000828 06CC                 l30000781 0494  
               l30000861 0556                 l30000853 07E2                 l30000845 0765  
               l30000837 06FA                 l30000829 06D1                 l30000870 0432  
               l30000790 04CA                 l30000782 0498                 l30000862 0559  
               l30000846 077B                 l30000838 06FB                 l30000854 07ED  
               l30000871 0436                 l30000791 04DB                 l30000783 04A0  
               l30000863 055A                 l30000855 04FF                 l30000847 078D  
               l30000839 0702                 l30000880 046A                 l30000872 043E  
               l30000792 04E1                 l30000784 04A4                 l30000864 0560  
               l30000856 0531                 l30000848 079F                 l30000881 0470  
               l30000873 0442                 l30000793 04E2                 l30000785 04A9  
               l30000865 0569                 l30000857 0546                 l30000849 07B5  
               l30000882 0477                 l30000874 0447                 l30000794 04E9  
               l30000786 04B7                 l30000866 056D                 l30000858 0547  
               l30000890 068A                 l30000875 044D                 l30000883 047D  
               l30000787 04BB                 l30000795 04EF                 l30000867 0575  
               l30000859 0548                 l30000891 068D                 l30000884 0481  
               l30000876 0451                 l30000796 04F3                 l30000788 04C2  
               l30000868 0579                 l30000892 068E                 l30000885 0486  
               l30000877 0458                 l30000869 042B                 l30000797 04F8  
               l30000789 04C6                 l30000893 0694                 l30000878 045C  
               l30000894 069D                 l30000879 0460                 l30000895 06A0  
               l30000887 0611                 l30000896 06A1                 l30000888 062B  
               l30000897 06A7                 l30000889 0675                 l30000898 03B1  
               l30000899 03B1                  ___awdiv 048D                  ___awmod 042B  
               ?___awdiv 0042                 ?___awmod 0040                ??___awdiv 0076  
              ??___awmod 0076                   ??_main 005A                  _display 04FF  
               ?_display 0058               __pmaintext 06B2              display@F780 002A  
       __end_of_addition 0611                ??_display 0046            display@number 004A  
                 _C1RSEL 084D                   _C2RSEL 084C                   _C2SYNC 0848  
                 _ADCON0 001F                   _ADCON1 009F                   _ABDOVF 0C3F  
                _product 005B                   _CCP1M0 00B8                   _CCP1M1 00B9  
                 _CCP1M2 00BA                   _CCP1M3 00BB                   _CCP2M0 00E8  
                 _CCP2M1 00E9                   _CCP2M2 00EA                   _CCP2M3 00EB  
                 _CCP1IE 0462                   _CCP1IF 0062                   _CCP2IE 0468  
                 _CCP2IF 0068           __end_of___wmul 042B                   _ADRESH 001E  
                 _EEADRH 010F                   _ADRESL 009E                   _EEADRL 010D  
                 _EEDATA 010C                   _ECCPAS 009C                   _CCPR1H 0016  
                 _EEDATH 010E                   _CCPR2H 001C                   _CCPR1L 0015  
                 _CCPR2L 001B              display@tens 0056                   _EECON1 018C  
                 _EECON2 018D                   _ANSELH 0189                   _MC1OUT 084F  
                 _MC2OUT 084E             __end_of_main 0800                   _T1GINV 0087  
                 _GODONE 00F9     end_of_initialization 03DE                   _T1SYNC 0082  
                 _INTEDG 040E                   _PCLATH 000A                   _INTCON 000B  
          __pcstackBANK0 003E                   _SBOREN 0474                   _OSCCON 008F  
         addition@number 004A                   _TMR1GE 0086                   _TMR1IE 0460  
                 _TMR1IF 0060                   _TMR1CS 0081                   _TMR2IE 0461  
                 _TMR2IF 0061                   _PSSAC0 04E2                   _PSSAC1 04E3  
                 _PSSBD0 04E0                   _PSSBD1 04E1                   _SPBRGH 009A  
                 _OPTION 0081                   _TMR1ON 0080                   _TMR2ON 0092  
                 _WDTCON 0105                   _WDTPS0 0829                   _WDTPS1 082A  
                 _WDTPS2 082B                   _WDTPS3 082C                   _SSPADD 0093  
                 _TRISA0 0428                   _TRISA1 0429                   _TRISB0 0430  
                 _TRISA2 042A                   _TRISB1 0431                   _TRISA3 042B  
                 _TRISC0 0438                   _TRISB2 0432                   _TRISA4 042C  
                 _TRISC1 0439                   _TRISB3 0433                   _TRISA5 042D  
                 _TRISD0 0440                   _TRISC2 043A                   _TRISB4 0434  
                 _TRISA6 042E                   _TRISD1 0441                   _TRISC3 043B  
                 _TRISB5 0435                   _TRISA7 042F                   _TRISE0 0448  
                 _TRISD2 0442                   _TRISC4 043C                   _TRISB6 0436  
                 _TRISE1 0449                   _TRISD3 0443                   _TRISC5 043D  
                 _TRISB7 0437                   _TRISE2 044A                   _TRISD4 0444  
                 _TRISC6 043E                   _TRISE3 044B                   _TRISD5 0445  
                 _TRISC7 043F                   _TRISD6 0446                   _TRISD7 0447  
                 _STATUS 0003                   _SSPCON 0014                   _SSPBUF 0013  
                init_ram 03A4                   _SWDTEN 0828                   _ULPWUE 0475  
                 _SSPMSK 0093      __size_of_time_delay 0013                   ___wmul 0400  
   multiplication@number 0046                init_fetch 03A0            addition@units 0054  
           addition@F785 0020      ___wmul@multiplicand 0042       multiplication@F790 0034  
    multiplication@units 0050             addition@tens 0056       multiplication@tens 0052  
       ___awmod@dividend 0040              __pdataBANK0 0020          ___awmod@divisor 0042  
        ___awmod@counter 003F  
